{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN\n{\n\tprintf(\"Tracing specific hardware interrupts... Hit Ctrl-C to end.\\n\");\n\n}\n\nkprobe:irq__handle_irq*\n{\n\t@[func] = count();\n}\n\ninterval:s:1\n{\n\ttime();\n\tprint(@);\n\tclear(@);\n}\n\nEND\n{\n\tclear(@);\n}", "stdout": "Attaching 3 probes...\nTracing specific hardware interrupts... Hit Ctrl-C to end.\n16:27:14\n\n16:27:15\n\n16:27:16\n\n16:27:17\n\n16:27:18\n\n16:27:19\n\n16:27:20\n\n16:27:21\n\n16:27:22\n\n16:27:23\n\n16:27:24\n\n16:27:25\n\n16:27:26\n\n16:27:27\n\n16:27:28\n\n16:27:29\n\n16:27:30\n\n16:27:31\n\n16:27:32\n\n\n\n\n", "stderr": "", "returncode": 0, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nMonitors the rate of specific hardware interrupts and logs the interrupt sources\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace usage:\n\n# trace processes calling sleep\n'kprobe:do_nanosleep { printf(\"PID %d sleeping...\n\", pid); }'\n\n# count syscalls by process name\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Files opened by process\n'tracepoint:syscalls:sys_enter_open { printf(\"%s %s\n\", comm, str(args->filename)); }'\n\n# Syscall count by program\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Read bytes by process:\n'tracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }'\n\n# Read size distribution by process:\n'tracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }'\n\n# Show per-second syscall rates:\n'tracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }'\n\n# Trace disk size by process\n'tracepoint:block:block_rq_issue { printf(\"%d %s %d\n\", pid, comm, args->bytes); }'\n\n# Count page faults by process\n'software:faults:1 { @[comm] = count(); }'\n\n# Count LLC cache misses by process name and PID (uses PMCs):\n'hardware:cache-misses:1000000 { @[comm, pid] = count(); }'\n\n# Profile user-level stacks at 99 Hertz, for PID 189:\n'profile:hz:99 /pid == 189/ { @[ustack] = count(); }'\n\n# Files opened, for processes in the root cgroup-v2\n'tracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\n\", str(args->filename)); }'\n\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces new processes and counts the number of new process creations per second using the eBPF technology.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing new processes... Hit Ctrl-C to end.\\n\");\n\n}\n\ntracepoint:sched:sched_process_fork\n{\n\t@ = count();\n}\n\ninterval:s:1\n{\n\ttime(\"%H:%M:%S PIDs/sec: \");\n\tprint(@);\n\tclear(@);\n}\n\nEND\n{\n\tclear(@);\n}\n\n```\n\nexample: Write a BPF code that traces key VFS calls, counts the number of times each call is invoked, and prints a per-second summary.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing key VFS calls... Hit Ctrl-C to end.\\n\");\n\n}\n\nkprobe:vfs_read*,\nkprobe:vfs_write*,\nkprobe:vfs_fsync,\nkprobe:vfs_open,\nkprobe:vfs_create\n{\n\t@[func] = count();\n}\n\ninterval:s:1\n{\n\ttime();\n\tprint(@);\n\tclear(@);\n}\n\nEND\n{\n\tclear(@);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nMonitors the rate of specific hardware interrupts and logs the interrupt sources\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself. \n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e Tracepoint: sched:sched_process_fork\n{\n    $parent=arg1;\n    $child=arg2;\n    printf(\"Parent Process Id is :%d \\t Parent Command Name is: %s \\t Child Process Id is: %d \\t Child Command Name is: %s\",$parent,$parent->cmdline,$child,$child->cmdline)\n}", "stdout": "", "stderr": "FATAL: Invalid probe type made it to attachpoint parser\ntimeout: the monitored command dumped core\n", "returncode": -6, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nTraces process forking events and logs the parent and child process IDs and command names.\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace usage:\n\n# trace processes calling sleep\n'kprobe:do_nanosleep { printf(\"PID %d sleeping...\n\", pid); }'\n\n# count syscalls by process name\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Files opened by process\n'tracepoint:syscalls:sys_enter_open { printf(\"%s %s\n\", comm, str(args->filename)); }'\n\n# Syscall count by program\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Read bytes by process:\n'tracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }'\n\n# Read size distribution by process:\n'tracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }'\n\n# Show per-second syscall rates:\n'tracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }'\n\n# Trace disk size by process\n'tracepoint:block:block_rq_issue { printf(\"%d %s %d\n\", pid, comm, args->bytes); }'\n\n# Count page faults by process\n'software:faults:1 { @[comm] = count(); }'\n\n# Count LLC cache misses by process name and PID (uses PMCs):\n'hardware:cache-misses:1000000 { @[comm, pid] = count(); }'\n\n# Profile user-level stacks at 99 Hertz, for PID 189:\n'profile:hz:99 /pid == 189/ { @[ustack] = count(); }'\n\n# Files opened, for processes in the root cgroup-v2\n'tracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\n\", str(args->filename)); }'\n\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces new processes created via the exec() system call, providing the timestamp, process ID, and arguments of the executed command.\n\n```\nBEGIN\n{\n\tprintf(\"%-10s %-5s %s\\n\", \"TIME(ms)\", \"PID\", \"ARGS\");\n}\n\ntracepoint:syscalls:sys_enter_exec*\n{\n\tprintf(\"%-10u %-5d \", elapsed / 1e6, pid);\n\tjoin(args.argv);\n}\n\n```\n\nexample: Write a BPF code that traces new processes and counts the number of new process creations per second using the eBPF technology.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing new processes... Hit Ctrl-C to end.\\n\");\n\n}\n\ntracepoint:sched:sched_process_fork\n{\n\t@ = count();\n}\n\ninterval:s:1\n{\n\ttime(\"%H:%M:%S PIDs/sec: \");\n\tprint(@);\n\tclear(@);\n}\n\nEND\n{\n\tclear(@);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nTraces process forking events and logs the parent and child process IDs and command names.\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself. \n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN\n\t{\n\tprintf(\"Tracing block device I/O... Hit Ctrl-C to end.\\n\");\n\t}\n\ntracepoint:mm__page_alloc\n{\n\t@[comm] = hist($size);\n}\n\nEND\n{\n\tprint(@);\n}", "stdout": "", "stderr": "stdin:4-6: ERROR: tracepoint probe type requires 2 arguments\n", "returncode": 1, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nMonitors the rate of memory allocations in the kernel and print histogram of the allocation sizes.\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace usage:\n\n# trace processes calling sleep\n'kprobe:do_nanosleep { printf(\"PID %d sleeping...\n\", pid); }'\n\n# count syscalls by process name\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Files opened by process\n'tracepoint:syscalls:sys_enter_open { printf(\"%s %s\n\", comm, str(args->filename)); }'\n\n# Syscall count by program\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Read bytes by process:\n'tracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }'\n\n# Read size distribution by process:\n'tracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }'\n\n# Show per-second syscall rates:\n'tracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }'\n\n# Trace disk size by process\n'tracepoint:block:block_rq_issue { printf(\"%d %s %d\n\", pid, comm, args->bytes); }'\n\n# Count page faults by process\n'software:faults:1 { @[comm] = count(); }'\n\n# Count LLC cache misses by process name and PID (uses PMCs):\n'hardware:cache-misses:1000000 { @[comm, pid] = count(); }'\n\n# Profile user-level stacks at 99 Hertz, for PID 189:\n'profile:hz:99 /pid == 189/ { @[ustack] = count(); }'\n\n# Files opened, for processes in the root cgroup-v2\n'tracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\n\", str(args->filename)); }'\n\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces the kernel OOM killer and prints basic details, including the system load averages, providing context on the system state at the time of the OOM.\n\n```\n#ifndef BPFTRACE_HAVE_BTF\n#include <linux/oom.h>\n#endif\n\nBEGIN\n{\n\tprintf(\"Tracing oom_kill_process()... Hit Ctrl-C to end.\\n\");\n}\n\nkprobe:oom_kill_process\n{\n\t$oc = (struct oom_control *)arg0;\n\ttime(\"%H:%M:%S \");\n\tprintf(\"Triggered by PID %d (\\\"%s\\\"), \", pid, comm);\n\tprintf(\"OOM kill of PID %d (\\\"%s\\\"), %d pages, loadavg: \",\n\t    $oc->chosen->pid, $oc->chosen->comm, $oc->totalpages);\n\tcat(\"/proc/loadavg\");\n}\n\n```\n\nexample: Write a BPF code that traces block device I/O and creates histograms of I/O size in bytes for each process.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing block device I/O... Hit Ctrl-C to end.\\n\");\n}\n\ntracepoint:block:block_rq_issue\n{\n\t@[args.comm] = hist(args.bytes);\n}\n\nEND\n{\n\tprintf(\"\\nI/O size (bytes) histograms by process name:\");\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nMonitors the rate of memory allocations in the kernel and print histogram of the allocation sizes.\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself. \n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN\n{\n    /* initialize a counter variable */\n    int limit_exceeded = 0;\n    \n    /* set up tracing infrastructure */\n    struct rlimit* lim = malloc(sizeof(*lim));\n    if (!lim) {\n        exit(-ENOMEM);\n    }\n    *lim = RLIMIT_DATA;\n\n    /* start tracing */\n    tracepoint:syscalls:sys_enter\n    {\n        \n            /* check if current task is being tracked */\n            if (task != current) {\n                return 0;\n            }\n            \n            /* read resource limits */\n            memcpy(&lim, task->signal->rlim + i, sizeof(*lim));\n            \n            /* check if any limit has been exceeded */\n            if ((lim->cur < lim->max && cur > max) ||\n                    (lim->max && !lim->cur)) {\n                limit_exceeded++;\n            }\n        \n    }\n    \n    /* log when limits have been exceeded */\n    if (limit_exceeded) {\n        printf(\"Limits exceeded: %d\\n\", limit_exceeded);\n    }\n}", "stdout": "", "stderr": "stdin:4:9-23: ERROR: syntax error, unexpected identifier, expecting }\n    int limit_exceeded = 0;\n        ~~~~~~~~~~~~~~\n", "returncode": 1, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nTraces process resource limits (e.g., memory, file descriptors) and logs when limits are exceeded.\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace usage:\n\n# trace processes calling sleep\n'kprobe:do_nanosleep { printf(\"PID %d sleeping...\n\", pid); }'\n\n# count syscalls by process name\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Files opened by process\n'tracepoint:syscalls:sys_enter_open { printf(\"%s %s\n\", comm, str(args->filename)); }'\n\n# Syscall count by program\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Read bytes by process:\n'tracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }'\n\n# Read size distribution by process:\n'tracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }'\n\n# Show per-second syscall rates:\n'tracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }'\n\n# Trace disk size by process\n'tracepoint:block:block_rq_issue { printf(\"%d %s %d\n\", pid, comm, args->bytes); }'\n\n# Count page faults by process\n'software:faults:1 { @[comm] = count(); }'\n\n# Count LLC cache misses by process name and PID (uses PMCs):\n'hardware:cache-misses:1000000 { @[comm, pid] = count(); }'\n\n# Profile user-level stacks at 99 Hertz, for PID 189:\n'profile:hz:99 /pid == 189/ { @[ustack] = count(); }'\n\n# Files opened, for processes in the root cgroup-v2\n'tracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\n\", str(args->filename)); }'\n\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces new processes and counts the number of new process creations per second using the eBPF technology.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing new processes... Hit Ctrl-C to end.\\n\");\n\n}\n\ntracepoint:sched:sched_process_fork\n{\n\t@ = count();\n}\n\ninterval:s:1\n{\n\ttime(\"%H:%M:%S PIDs/sec: \");\n\tprint(@);\n\tclear(@);\n}\n\nEND\n{\n\tclear(@);\n}\n\n```\n\nexample: Write a BPF code that traces block device I/O and creates histograms of I/O size in bytes for each process.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing block device I/O... Hit Ctrl-C to end.\\n\");\n}\n\ntracepoint:block:block_rq_issue\n{\n\t@[args.comm] = hist(args.bytes);\n}\n\nEND\n{\n\tprintf(\"\\nI/O size (bytes) histograms by process name:\");\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nTraces process resource limits (e.g., memory, file descriptors) and logs when limits are exceeded.\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself. \n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN\n{\n\tprintf(\"Tracing signals... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-9s %-6s %-16s %-4s %-6s %s\\n\", \"TIME\", \"PID\", \"COMM\", \"SIGNAL\", \"TPID\", \"RESULT\");\n}\n\ntracepoint:signal:signal_generate\n{\n\t@tpids[tid] = args.tp->common.pid;\n\t@signals[tid] = siginfo->si_signo;\n}\n\ntracepoint:signal:signal_deliver\n/@tpids[tid]/\n{\n\ttime(\"%H:%M:%S  \");\n\tprintf(\"%-6d %-16s %-4d %-6d %d\\n\", pid, comm, @signals[tid], @tpids[tid], ret);\n\tdelete(@tpids[tid]);\n\tdelete(@signals[tid]);\n}", "stdout": "", "stderr": "stdin:9:16-21: ERROR: Can not access field 'tp' on type '(ctx) struct _tracepoint_signal_signal_generate *'. Try dereferencing it first, or using '->'\n    @tpids[tid] = args.tp->common.pid;\n                  ~~~~~\nstdin:10:18-25: ERROR: Unknown identifier: 'siginfo'\n    @signals[tid] = siginfo->si_signo;\n                    ~~~~~~~\nstdin:17:77-80: ERROR: Unknown identifier: 'ret'\n    printf(\"%-6d %-16s %-4d %-6d %d\\n\", pid, comm, @signals[tid], @tpids[tid], ret);\n                                                                               ~~~\n", "returncode": 1, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nTraces process signals and logs the signal names and process IDs affected.\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace usage:\n\n# trace processes calling sleep\n'kprobe:do_nanosleep { printf(\"PID %d sleeping...\n\", pid); }'\n\n# count syscalls by process name\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Files opened by process\n'tracepoint:syscalls:sys_enter_open { printf(\"%s %s\n\", comm, str(args->filename)); }'\n\n# Syscall count by program\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Read bytes by process:\n'tracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }'\n\n# Read size distribution by process:\n'tracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }'\n\n# Show per-second syscall rates:\n'tracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }'\n\n# Trace disk size by process\n'tracepoint:block:block_rq_issue { printf(\"%d %s %d\n\", pid, comm, args->bytes); }'\n\n# Count page faults by process\n'software:faults:1 { @[comm] = count(); }'\n\n# Count LLC cache misses by process name and PID (uses PMCs):\n'hardware:cache-misses:1000000 { @[comm, pid] = count(); }'\n\n# Profile user-level stacks at 99 Hertz, for PID 189:\n'profile:hz:99 /pid == 189/ { @[ustack] = count(); }'\n\n# Files opened, for processes in the root cgroup-v2\n'tracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\n\", str(args->filename)); }'\n\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Please write a BPF code that traces signals issued by the kill() syscall and prints information such as the timestamp, process ID, command, signal, target process ID, and the result of the kill() syscall.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing kill() signals... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-9s %-6s %-16s %-4s %-6s %s\\n\", \"TIME\", \"PID\", \"COMM\", \"SIG\",\n\t    \"TPID\", \"RESULT\");\n}\n\ntracepoint:syscalls:sys_enter_kill\n{\n\t@tpid[tid] = args.pid;\n\t@tsig[tid] = args.sig;\n}\n\ntracepoint:syscalls:sys_exit_kill\n/@tpid[tid]/\n{\n\ttime(\"%H:%M:%S  \");\n\tprintf(\"%-6d %-16s %-4d %-6d %d\\n\", pid, comm, @tsig[tid], @tpid[tid],\n\t    args.ret);\n\tdelete(@tpid[tid]);\n\tdelete(@tsig[tid]);\n}\n\n```\n\nexample: Write a BPF code that counts the number of system calls and the number of processes. It also prints the top 10 system call IDs and the top 10 processes at the end.\n\n```\nBEGIN\n{\n\tprintf(\"Counting syscalls... Hit Ctrl-C to end.\\n\");\n\t// ausyscall --dump | awk 'NR > 1 { printf(\"\\t@sysname[%d] = \\\"%s\\\";\\n\", $1, $2); }'\n}\n\ntracepoint:raw_syscalls:sys_enter\n{\n\t@syscall[args.id] = count();\n\t@process[comm] = count();\n}\n\nEND\n{\n\tprintf(\"\\nTop 10 syscalls IDs:\\n\");\n\tprint(@syscall, 10);\n\tclear(@syscall);\n\n\tprintf(\"\\nTop 10 processes:\\n\");\n\tprint(@process, 10);\n\tclear(@process);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nTraces process signals and logs the signal names and process IDs affected.\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself. \n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN\n{\n\tprintf(\"Tracing system calls... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-6s %-16s %3s %s\\n\", \"PID\", \"COMM\", \"ERR\", \"SYSCALL\");\n}\n\ntracepoint:syscalls:sys_enter\n{\n\t@count[tid]++;\n\t@error[tid][$__syscall_number] = count();\n}\n\ntracepoint:syscalls:sys_exit\n/@count[tid]/\n{\n\t$ret = args.ret;\n\t$errno = $ret >= 0 ? 0 : - $ret;\n\n\tif ($errno != 0)\n\t{\n\t\tprintf(\"%-6d %-16s %3d %s\\n\", pid, comm, $errno,\n\t\t    $__syscall_name);\n\t}\n\tdelete(@count[tid]);\n}\n\nEND\n{\n\tclear(@count);\n\tclear(@error);\n}", "stdout": "", "stderr": "stdin:10:33-34: ERROR: syntax error, unexpected =, expecting }\n    @error[tid][$__syscall_number] = count();\n                                   ~\n", "returncode": 1, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nMonitors the rate of system call errors (e.g., ENOENT, EACCES) for specific processes\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace usage:\n\n# trace processes calling sleep\n'kprobe:do_nanosleep { printf(\"PID %d sleeping...\n\", pid); }'\n\n# count syscalls by process name\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Files opened by process\n'tracepoint:syscalls:sys_enter_open { printf(\"%s %s\n\", comm, str(args->filename)); }'\n\n# Syscall count by program\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Read bytes by process:\n'tracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }'\n\n# Read size distribution by process:\n'tracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }'\n\n# Show per-second syscall rates:\n'tracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }'\n\n# Trace disk size by process\n'tracepoint:block:block_rq_issue { printf(\"%d %s %d\n\", pid, comm, args->bytes); }'\n\n# Count page faults by process\n'software:faults:1 { @[comm] = count(); }'\n\n# Count LLC cache misses by process name and PID (uses PMCs):\n'hardware:cache-misses:1000000 { @[comm, pid] = count(); }'\n\n# Profile user-level stacks at 99 Hertz, for PID 189:\n'profile:hz:99 /pid == 189/ { @[ustack] = count(); }'\n\n# Files opened, for processes in the root cgroup-v2\n'tracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\n\", str(args->filename)); }'\n\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces new processes and counts the number of new process creations per second using the eBPF technology.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing new processes... Hit Ctrl-C to end.\\n\");\n\n}\n\ntracepoint:sched:sched_process_fork\n{\n\t@ = count();\n}\n\ninterval:s:1\n{\n\ttime(\"%H:%M:%S PIDs/sec: \");\n\tprint(@);\n\tclear(@);\n}\n\nEND\n{\n\tclear(@);\n}\n\n```\n\nexample: Write a BPF code that traces the syscalls statfs(), statx(), newstat(), and newlstat(), providing information about the PID, process name, error code, and path being accessed.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing stat syscalls... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-6s %-16s %3s %s\\n\", \"PID\", \"COMM\", \"ERR\", \"PATH\");\n}\n\ntracepoint:syscalls:sys_enter_statfs\n{\n\t@filename[tid] = args.pathname;\n}\n\ntracepoint:syscalls:sys_enter_statx,\ntracepoint:syscalls:sys_enter_newstat,\ntracepoint:syscalls:sys_enter_newlstat\n{\n\t@filename[tid] = args.filename;\n}\n\ntracepoint:syscalls:sys_exit_statfs,\ntracepoint:syscalls:sys_exit_statx,\ntracepoint:syscalls:sys_exit_newstat,\ntracepoint:syscalls:sys_exit_newlstat\n/@filename[tid]/\n{\n\t$ret = args.ret;\n\t$errno = $ret >= 0 ? 0 : - $ret;\n\n\tprintf(\"%-6d %-16s %3d %s\\n\", pid, comm, $errno,\n\t    str(@filename[tid]));\n\tdelete(@filename[tid]);\n}\n\nEND\n{\n\tclear(@filename);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nMonitors the rate of system call errors (e.g., ENOENT, EACCES) for specific processes\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself. \n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN\n{\n  \t\tprintf(\"Tracing TCP SYN packets. Press Ctrl-C to stop.\\n\");\n}\n\nkprobe:tcp_synqueue_add\n{\n  \t\t$skb = (struct sk_buff*)arg0;\n  \t\t$ip = (struct iphdr*)$skb->data;\n  \t\t$tcph = (struct tcphdr*)((char *)$ip + sizeof(*$ip));\n  \t\tif ($tcph->syn && !$tcph->ack) {\n    \t\t\t$srcIP = $ip->saddr;\n    \t\t\t$dstIP = $ip->daddr;\n    \t\t\t$srcPort = $tcph->source;\n    \t\t\t$dstPort = $tcph->dest;\n    \t\t\ttime(\"%H:%M:%S \");\n    \t\t\tprintf(\"%-8d %-16s \", pid, comm);\n    \t\t\tprintf(\"%-39s %-6d %-39s %-6d\\n\", $srcIP, $srcPort, $dstIP, $dstPort);\n  \t\t}\n}", "stdout": "", "stderr": "stdin:10:13-38: ERROR: Unknown struct/union: 'char'\n          $tcph = (struct tcphdr*)((char *)$ip + sizeof(*$ip));\n                  ~~~~~~~~~~~~~~~~~~~~~~~~~\n", "returncode": 1, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nCaptures TCP SYN packets and logs the source and destination IP addresses and ports\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace usage:\n\n# trace processes calling sleep\n'kprobe:do_nanosleep { printf(\"PID %d sleeping...\n\", pid); }'\n\n# count syscalls by process name\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Files opened by process\n'tracepoint:syscalls:sys_enter_open { printf(\"%s %s\n\", comm, str(args->filename)); }'\n\n# Syscall count by program\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Read bytes by process:\n'tracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }'\n\n# Read size distribution by process:\n'tracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }'\n\n# Show per-second syscall rates:\n'tracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }'\n\n# Trace disk size by process\n'tracepoint:block:block_rq_issue { printf(\"%d %s %d\n\", pid, comm, args->bytes); }'\n\n# Count page faults by process\n'software:faults:1 { @[comm] = count(); }'\n\n# Count LLC cache misses by process name and PID (uses PMCs):\n'hardware:cache-misses:1000000 { @[comm, pid] = count(); }'\n\n# Profile user-level stacks at 99 Hertz, for PID 189:\n'profile:hz:99 /pid == 189/ { @[ustack] = count(); }'\n\n# Files opened, for processes in the root cgroup-v2\n'tracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\n\", str(args->filename)); }'\n\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces TCP connections by dynamically tracing kernel functions and prints out the time, PID, and addresses and ports of the source and destination of each connection.\n\n```\n#ifndef BPFTRACE_HAVE_BTF\n#include <linux/socket.h>\n#include <net/sock.h>\n#else\n#include <sys/socket.h>\n#endif\n\nBEGIN\n{\n  printf(\"Tracing tcp connections. Hit Ctrl-C to end.\\n\");\n  printf(\"%-8s %-8s %-16s \", \"TIME\", \"PID\", \"COMM\");\n  printf(\"%-39s %-6s %-39s %-6s\\n\", \"SADDR\", \"SPORT\", \"DADDR\", \"DPORT\");\n}\n\nkprobe:tcp_connect\n{\n  $sk = ((struct sock *) arg0);\n  $inet_family = $sk->__sk_common.skc_family;\n\n  if ($inet_family == AF_INET || $inet_family == AF_INET6) {\n    if ($inet_family == AF_INET) {\n      $daddr = ntop($sk->__sk_common.skc_daddr);\n      $saddr = ntop($sk->__sk_common.skc_rcv_saddr);\n    } else {\n      $daddr = ntop($sk->__sk_common.skc_v6_daddr.in6_u.u6_addr8);\n      $saddr = ntop($sk->__sk_common.skc_v6_rcv_saddr.in6_u.u6_addr8);\n    }\n    $lport = $sk->__sk_common.skc_num;\n    $dport = $sk->__sk_common.skc_dport;\n\n    // Destination port is big endian, it must be flipped\n    $dport = bswap($dport);\n\n    time(\"%H:%M:%S \");\n    printf(\"%-8d %-16s \", pid, comm);\n    printf(\"%-39s %-6d %-39s %-6d\\n\", $saddr, $lport, $daddr, $dport);\n  }\n}\n\n```\n\nexample: Write a BPF code that traces the TCP SYN backlog size and creates a histogram of the backlog sizes, also indicating if any SYN packets are being dropped.\n\n```\n#ifndef BPFTRACE_HAVE_BTF\n#include <net/sock.h>\n#endif\n\nBEGIN\n{\n\tprintf(\"Tracing SYN backlog size. Ctrl-C to end.\\n\");\n}\n\nkprobe:tcp_v4_syn_recv_sock,\nkprobe:tcp_v6_syn_recv_sock\n{\n\t$sock = (struct sock *)arg0;\n\t@backlog[$sock->sk_max_ack_backlog & 0xffffffff] =\n\t    hist($sock->sk_ack_backlog);\n\tif ($sock->sk_ack_backlog > $sock->sk_max_ack_backlog) {\n\t\ttime(\"%H:%M:%S dropping a SYN.\\n\");\n\t}\n}\n\nEND\n{\n\tprintf(\"\\n@backlog[backlog limit]: histogram of backlog size\\n\");\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nCaptures TCP SYN packets and logs the source and destination IP addresses and ports\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself. \n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN\n{\n\tprintf(\"Monitoring system calls from specific user space processes... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-9s %-6s %-16s %s\\n\", \"TIME\", \"PID\", \"COMM\", \"SYSCALL\");\n}\n\ntracepoint:raw_syscalls:sys_enter\n{\n    if (comm ~= \"specific user space process\" && args.id != 4)\n        printf(\"%-9s %-6d %-16s %s\\n\", time(\"%H:%M:%S\"), pid, comm, probe);\n}", "stdout": "", "stderr": "stdin:9:14-15: ERROR: syntax error, unexpected ~, expecting )\n    if (comm ~= \"specific user space process\" && args.id != 4)\n             ~\n", "returncode": 1, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nmonitors the rate of system calls made by specific user-space processes and identifies heavily used system calls\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace usage:\n\n# trace processes calling sleep\n'kprobe:do_nanosleep { printf(\"PID %d sleeping...\n\", pid); }'\n\n# count syscalls by process name\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Files opened by process\n'tracepoint:syscalls:sys_enter_open { printf(\"%s %s\n\", comm, str(args->filename)); }'\n\n# Syscall count by program\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Read bytes by process:\n'tracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }'\n\n# Read size distribution by process:\n'tracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }'\n\n# Show per-second syscall rates:\n'tracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }'\n\n# Trace disk size by process\n'tracepoint:block:block_rq_issue { printf(\"%d %s %d\n\", pid, comm, args->bytes); }'\n\n# Count page faults by process\n'software:faults:1 { @[comm] = count(); }'\n\n# Count LLC cache misses by process name and PID (uses PMCs):\n'hardware:cache-misses:1000000 { @[comm, pid] = count(); }'\n\n# Profile user-level stacks at 99 Hertz, for PID 189:\n'profile:hz:99 /pid == 189/ { @[ustack] = count(); }'\n\n# Files opened, for processes in the root cgroup-v2\n'tracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\n\", str(args->filename)); }'\n\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that counts the number of system calls and the number of processes. It also prints the top 10 system call IDs and the top 10 processes at the end.\n\n```\nBEGIN\n{\n\tprintf(\"Counting syscalls... Hit Ctrl-C to end.\\n\");\n\t// ausyscall --dump | awk 'NR > 1 { printf(\"\\t@sysname[%d] = \\\"%s\\\";\\n\", $1, $2); }'\n}\n\ntracepoint:raw_syscalls:sys_enter\n{\n\t@syscall[args.id] = count();\n\t@process[comm] = count();\n}\n\nEND\n{\n\tprintf(\"\\nTop 10 syscalls IDs:\\n\");\n\tprint(@syscall, 10);\n\tclear(@syscall);\n\n\tprintf(\"\\nTop 10 processes:\\n\");\n\tprint(@process, 10);\n\tclear(@process);\n}\n\n```\n\nexample: Write a BPF code that traces sync-related system calls, such as sync(), syncfs(), fsync(), and fdatasync(), and prints the time, process ID, command, and event for each traced system call.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing sync syscalls... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-9s %-6s %-16s %s\\n\", \"TIME\", \"PID\", \"COMM\", \"EVENT\");\n}\n\ntracepoint:syscalls:sys_enter_sync,\ntracepoint:syscalls:sys_enter_syncfs,\ntracepoint:syscalls:sys_enter_fsync,\ntracepoint:syscalls:sys_enter_fdatasync,\ntracepoint:syscalls:sys_enter_sync_file_range*,\ntracepoint:syscalls:sys_enter_msync\n{\n\ttime(\"%H:%M:%S  \");\n\tprintf(\"%-6d %-16s %s\\n\", pid, comm, probe);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nmonitors the rate of system calls made by specific user-space processes and identifies heavily used system calls\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself. \n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN\n\t{\n\t\tprintf(\"Tracing syscalls by second globally... Hit Ctrl-C to end.\\n\");\n\n\t}\n\n\ttracepoint:raw_syscalls:sys_enter\n\t{\n\t\t@ = count();\n\t}\n\n\tinterval:s:1\n\t{\n\t\ttime(\"%H:%M:%S Syscalls/sec: \");\n\t\tprint(@);\n\t\tclear(@);\n\t}\n\n\tEND\n\t{\n\t\tclear(@);\n\t}", "stdout": "Attaching 4 probes...\nTracing syscalls by second globally... Hit Ctrl-C to end.\n16:29:23 Syscalls/sec: @: 535\n16:29:24 Syscalls/sec: @: 528\n16:29:25 Syscalls/sec: @: 558\n16:29:26 Syscalls/sec: @: 534\n16:29:27 Syscalls/sec: @: 553\n16:29:28 Syscalls/sec: @: 490\n16:29:29 Syscalls/sec: @: 593\n16:29:30 Syscalls/sec: @: 565\n16:29:31 Syscalls/sec: @: 573\n16:29:32 Syscalls/sec: @: 527\n16:29:33 Syscalls/sec: @: 694\n16:29:34 Syscalls/sec: @: 562\n16:29:35 Syscalls/sec: @: 588\n16:29:36 Syscalls/sec: @: 555\n16:29:37 Syscalls/sec: @: 555\n16:29:38 Syscalls/sec: @: 514\n16:29:39 Syscalls/sec: @: 560\n16:29:40 Syscalls/sec: @: 599\n16:29:41 Syscalls/sec: @: 509\n\n\n@: 0\n", "stderr": "", "returncode": 0, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nMonitors the rate of syscall by second globally\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace usage:\n\n# trace processes calling sleep\n'kprobe:do_nanosleep { printf(\"PID %d sleeping...\n\", pid); }'\n\n# count syscalls by process name\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Files opened by process\n'tracepoint:syscalls:sys_enter_open { printf(\"%s %s\n\", comm, str(args->filename)); }'\n\n# Syscall count by program\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Read bytes by process:\n'tracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }'\n\n# Read size distribution by process:\n'tracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }'\n\n# Show per-second syscall rates:\n'tracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }'\n\n# Trace disk size by process\n'tracepoint:block:block_rq_issue { printf(\"%d %s %d\n\", pid, comm, args->bytes); }'\n\n# Count page faults by process\n'software:faults:1 { @[comm] = count(); }'\n\n# Count LLC cache misses by process name and PID (uses PMCs):\n'hardware:cache-misses:1000000 { @[comm, pid] = count(); }'\n\n# Profile user-level stacks at 99 Hertz, for PID 189:\n'profile:hz:99 /pid == 189/ { @[ustack] = count(); }'\n\n# Files opened, for processes in the root cgroup-v2\n'tracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\n\", str(args->filename)); }'\n\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces key VFS calls, counts the number of times each call is invoked, and prints a per-second summary.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing key VFS calls... Hit Ctrl-C to end.\\n\");\n\n}\n\nkprobe:vfs_read*,\nkprobe:vfs_write*,\nkprobe:vfs_fsync,\nkprobe:vfs_open,\nkprobe:vfs_create\n{\n\t@[func] = count();\n}\n\ninterval:s:1\n{\n\ttime();\n\tprint(@);\n\tclear(@);\n}\n\nEND\n{\n\tclear(@);\n}\n\n```\n\nexample: Write a BPF code that traces new processes and counts the number of new process creations per second using the eBPF technology.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing new processes... Hit Ctrl-C to end.\\n\");\n\n}\n\ntracepoint:sched:sched_process_fork\n{\n\t@ = count();\n}\n\ninterval:s:1\n{\n\ttime(\"%H:%M:%S PIDs/sec: \");\n\tprint(@);\n\tclear(@);\n}\n\nEND\n{\n\tclear(@);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nMonitors the rate of syscall by second globally\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself. \n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter_socket { printf(\"%s %d\n\", comm, retval); }", "stdout": "", "stderr": "stdin:1:40-54: ERROR: unterminated string\ntracepoint:syscalls:sys_enter_socket { printf(\"%s %d\n                                       ~~~~~~~~~~~~~\nstdin:2:1-20: ERROR: unterminated string\n\", comm, retval); }\n~~~~~~~~~~~~~~~~~~~\nstdin:2:1-20: ERROR: syntax error, unexpected end of file\n\", comm, retval); }\n~~~~~~~~~~~~~~~~~~~\n", "returncode": 1, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\ntraces socket operations and logs the socket types and process IDs involved.\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace usage:\n\n# trace processes calling sleep\n'kprobe:do_nanosleep { printf(\"PID %d sleeping...\n\", pid); }'\n\n# count syscalls by process name\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Files opened by process\n'tracepoint:syscalls:sys_enter_open { printf(\"%s %s\n\", comm, str(args->filename)); }'\n\n# Syscall count by program\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Read bytes by process:\n'tracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }'\n\n# Read size distribution by process:\n'tracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }'\n\n# Show per-second syscall rates:\n'tracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }'\n\n# Trace disk size by process\n'tracepoint:block:block_rq_issue { printf(\"%d %s %d\n\", pid, comm, args->bytes); }'\n\n# Count page faults by process\n'software:faults:1 { @[comm] = count(); }'\n\n# Count LLC cache misses by process name and PID (uses PMCs):\n'hardware:cache-misses:1000000 { @[comm, pid] = count(); }'\n\n# Profile user-level stacks at 99 Hertz, for PID 189:\n'profile:hz:99 /pid == 189/ { @[ustack] = count(); }'\n\n# Files opened, for processes in the root cgroup-v2\n'tracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\n\", str(args->filename)); }'\n\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces TCP accept()s by dynamically tracing the kernel inet_csk_accept() socket function and prints information such as the time, process ID, communication, remote and local addresses and ports, and backlog length.\n\n```\n#ifndef BPFTRACE_HAVE_BTF\n#include <linux/socket.h>\n#include <net/sock.h>\n#else\n#include <sys/socket.h>\n#endif\n\nBEGIN\n{\n\tprintf(\"Tracing TCP accepts. Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-8s %-6s %-14s \", \"TIME\", \"PID\", \"COMM\");\n\tprintf(\"%-39s %-5s %-39s %-5s %s\\n\", \"RADDR\", \"RPORT\", \"LADDR\",\n\t    \"LPORT\", \"BL\");\n}\n\nkretprobe:inet_csk_accept\n{\n\t$sk = (struct sock *)retval;\n\t$inet_family = $sk->__sk_common.skc_family;\n\n\tif ($inet_family == AF_INET || $inet_family == AF_INET6) {\n\t\t// initialize variable type:\n\t\t$daddr = ntop(0);\n\t\t$saddr = ntop(0);\n\t\tif ($inet_family == AF_INET) {\n\t\t\t$daddr = ntop($sk->__sk_common.skc_daddr);\n\t\t\t$saddr = ntop($sk->__sk_common.skc_rcv_saddr);\n\t\t} else {\n\t\t\t$daddr = ntop(\n\t\t\t    $sk->__sk_common.skc_v6_daddr.in6_u.u6_addr8);\n\t\t\t$saddr = ntop(\n\t\t\t    $sk->__sk_common.skc_v6_rcv_saddr.in6_u.u6_addr8);\n\t\t}\n\t\t$lport = $sk->__sk_common.skc_num;\n\t\t$dport = $sk->__sk_common.skc_dport;\n\t\t$qlen  = $sk->sk_ack_backlog;\n\t\t$qmax  = $sk->sk_max_ack_backlog;\n\n\t\t// Destination port is big endian, it must be flipped\n\t\t$dport = bswap($dport);\n\n\t\ttime(\"%H:%M:%S \");\n\t\tprintf(\"%-6d %-14s \", pid, comm);\n\t\tprintf(\"%-39s %-5d %-39s %-5d \", $daddr, $dport, $saddr,\n\t\t    $lport);\n\t\tprintf(\"%d/%d\\n\", $qlen, $qmax);\n\t}\n}\n\n```\n\nexample: Write a BPF code that traces TCP connections by dynamically tracing kernel functions and prints out the time, PID, and addresses and ports of the source and destination of each connection.\n\n```\n#ifndef BPFTRACE_HAVE_BTF\n#include <linux/socket.h>\n#include <net/sock.h>\n#else\n#include <sys/socket.h>\n#endif\n\nBEGIN\n{\n  printf(\"Tracing tcp connections. Hit Ctrl-C to end.\\n\");\n  printf(\"%-8s %-8s %-16s \", \"TIME\", \"PID\", \"COMM\");\n  printf(\"%-39s %-6s %-39s %-6s\\n\", \"SADDR\", \"SPORT\", \"DADDR\", \"DPORT\");\n}\n\nkprobe:tcp_connect\n{\n  $sk = ((struct sock *) arg0);\n  $inet_family = $sk->__sk_common.skc_family;\n\n  if ($inet_family == AF_INET || $inet_family == AF_INET6) {\n    if ($inet_family == AF_INET) {\n      $daddr = ntop($sk->__sk_common.skc_daddr);\n      $saddr = ntop($sk->__sk_common.skc_rcv_saddr);\n    } else {\n      $daddr = ntop($sk->__sk_common.skc_v6_daddr.in6_u.u6_addr8);\n      $saddr = ntop($sk->__sk_common.skc_v6_rcv_saddr.in6_u.u6_addr8);\n    }\n    $lport = $sk->__sk_common.skc_num;\n    $dport = $sk->__sk_common.skc_dport;\n\n    // Destination port is big endian, it must be flipped\n    $dport = bswap($dport);\n\n    time(\"%H:%M:%S \");\n    printf(\"%-8d %-16s \", pid, comm);\n    printf(\"%-39s %-6d %-39s %-6d\\n\", $saddr, $lport, $daddr, $dport);\n  }\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\ntraces socket operations and logs the socket types and process IDs involved.\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself. \n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter_read,\n    tracepoint:syscalls:sys_exit_write\n    {\n        $fd = reg(\"di\");\n        $size = reg(\"si\");\n        if ($fd > 0 && $size > 0) {\n            @files[$fd] = hist($size);\n        }\n    }", "stdout": "", "stderr": "stdin:4:15-24: ERROR: reg can not be used with \"tracepoint\" probes\n        $fd = reg(\"di\");\n              ~~~~~~~~~\nstdin:4:15-24: ERROR: reg can not be used with \"tracepoint\" probes\n        $fd = reg(\"di\");\n              ~~~~~~~~~\nstdin:5:17-26: ERROR: reg can not be used with \"tracepoint\" probes\n        $size = reg(\"si\");\n                ~~~~~~~~~\nstdin:5:17-26: ERROR: reg can not be used with \"tracepoint\" probes\n        $size = reg(\"si\");\n                ~~~~~~~~~\n", "returncode": 1, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\ntraces file read and write events and calculates the I/O size distribution for each file.\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace usage:\n\n# trace processes calling sleep\n'kprobe:do_nanosleep { printf(\"PID %d sleeping...\n\", pid); }'\n\n# count syscalls by process name\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Files opened by process\n'tracepoint:syscalls:sys_enter_open { printf(\"%s %s\n\", comm, str(args->filename)); }'\n\n# Syscall count by program\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Read bytes by process:\n'tracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }'\n\n# Read size distribution by process:\n'tracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }'\n\n# Show per-second syscall rates:\n'tracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }'\n\n# Trace disk size by process\n'tracepoint:block:block_rq_issue { printf(\"%d %s %d\n\", pid, comm, args->bytes); }'\n\n# Count page faults by process\n'software:faults:1 { @[comm] = count(); }'\n\n# Count LLC cache misses by process name and PID (uses PMCs):\n'hardware:cache-misses:1000000 { @[comm, pid] = count(); }'\n\n# Profile user-level stacks at 99 Hertz, for PID 189:\n'profile:hz:99 /pid == 189/ { @[ustack] = count(); }'\n\n# Files opened, for processes in the root cgroup-v2\n'tracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\n\", str(args->filename)); }'\n\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces block device I/O and creates histograms of I/O size in bytes for each process.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing block device I/O... Hit Ctrl-C to end.\\n\");\n}\n\ntracepoint:block:block_rq_issue\n{\n\t@[args.comm] = hist(args.bytes);\n}\n\nEND\n{\n\tprintf(\"\\nI/O size (bytes) histograms by process name:\");\n}\n\n```\n\nexample: Write a BPF code that traces block device I/O latency by calculating the time difference between the start and completion of I/O operations and storing them in a histogram.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing block device I/O... Hit Ctrl-C to end.\\n\");\n}\n\nkprobe:blk_account_io_start,\nkprobe:__blk_account_io_start\n{\n\t@start[arg0] = nsecs;\n}\n\nkprobe:blk_account_io_done,\nkprobe:__blk_account_io_done\n/@start[arg0]/\n{\n\t@usecs = hist((nsecs - @start[arg0]) / 1000);\n\tdelete(@start[arg0]);\n}\n\nEND\n{\n\tclear(@start);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\ntraces file read and write events and calculates the I/O size distribution for each file.\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself. \n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }", "stdout": "Attaching 1 probe...\n\n\n@[dockerd]: 1\n@[systemd-resolve]: 8\n@[systemd-network]: 8\n@[containerd]: 15\n@[systemd]: 84\n@[cpptools]: 258\n@[sshd]: 2401\n@[vmtoolsd]: 14210\n@[irqbalance]: 14654\n@[node]: 67198\n", "stderr": "", "returncode": 0, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\ntraces file read and write events and summarizes the Read bytes by process.\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace usage:\n\n# trace processes calling sleep\n'kprobe:do_nanosleep { printf(\"PID %d sleeping...\n\", pid); }'\n\n# count syscalls by process name\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Files opened by process\n'tracepoint:syscalls:sys_enter_open { printf(\"%s %s\n\", comm, str(args->filename)); }'\n\n# Syscall count by program\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Read bytes by process:\n'tracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }'\n\n# Read size distribution by process:\n'tracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }'\n\n# Show per-second syscall rates:\n'tracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }'\n\n# Trace disk size by process\n'tracepoint:block:block_rq_issue { printf(\"%d %s %d\n\", pid, comm, args->bytes); }'\n\n# Count page faults by process\n'software:faults:1 { @[comm] = count(); }'\n\n# Count LLC cache misses by process name and PID (uses PMCs):\n'hardware:cache-misses:1000000 { @[comm, pid] = count(); }'\n\n# Profile user-level stacks at 99 Hertz, for PID 189:\n'profile:hz:99 /pid == 189/ { @[ustack] = count(); }'\n\n# Files opened, for processes in the root cgroup-v2\n'tracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\n\", str(args->filename)); }'\n\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces block device I/O and creates histograms of I/O size in bytes for each process.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing block device I/O... Hit Ctrl-C to end.\\n\");\n}\n\ntracepoint:block:block_rq_issue\n{\n\t@[args.comm] = hist(args.bytes);\n}\n\nEND\n{\n\tprintf(\"\\nI/O size (bytes) histograms by process name:\");\n}\n\n```\n\nexample: Write a BPF code that traces file system writeback events, including the time of occurrence, device information, reason, and duration. This code can help identify performance issues related to writeback events.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing writeback... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-9s %-8s %-8s %-16s %s\\n\", \"TIME\", \"DEVICE\", \"PAGES\",\n\t    \"REASON\", \"ms\");\n\n\t// see /sys/kernel/debug/tracing/events/writeback/writeback_start/format\n\t@reason[0] = \"background\";\n\t@reason[1] = \"vmscan\";\n\t@reason[2] = \"sync\";\n\t@reason[3] = \"periodic\";\n\t@reason[4] = \"laptop_timer\";\n\t@reason[5] = \"free_more_memory\";\n\t@reason[6] = \"fs_free_space\";\n\t@reason[7] = \"forker_thread\";\n}\n\ntracepoint:writeback:writeback_start\n{\n\t@start[args.sb_dev] = nsecs;\n}\n\ntracepoint:writeback:writeback_written\n{\n\t$sb_dev = args.sb_dev;\n\t$s = @start[$sb_dev];\n\tdelete(@start[$sb_dev]);\n\t$lat = $s ? (nsecs - $s) / 1000 : 0;\n\n\ttime(\"%H:%M:%S  \");\n\tprintf(\"%-8s %-8d %-16s %d.%03d\\n\", args.name,\n\t    args.nr_pages & 0xffff,\t// TODO: explain these bitmasks\n\t    @reason[args.reason & 0xffffffff],\n\t    $lat / 1000, $lat % 1000);\n}\n\nEND\n{\n\tclear(@reason);\n\tclear(@start);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\ntraces file read and write events and summarizes the Read bytes by process.\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself. \n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN\n{\n    printf(\"Tracing network namespace creations and deletions\\n\");\n}\n\nkretprobe:netlink_kernel_create\n/{\n    if (retval != 0) { return 0; }\n    \n    // Get the netns name from the netlink message\n    char *name = (char *)data + NLMSG_HDRLEN + GENL_HDRLEN + NLA_ALIGN(attrlen);\n    int len = NLMSG_PAYLOAD(nlmsg, sizeof(struct genlmsghdr)) - attrlen - NLA_ALIGN(attrlen);\n    if (!strcmp(name, \"netns\")) {\n        printf(\"Network namespace created: %.*s\\n\", len, data + NLMSG_HDRLEN + GENL_HDRLEN + NLA_ALIGN(attrlen) + NLA_ALIGN(sizeof(struct nlattr)));\n    }\n}/\n\nkretprobe:netlink_kernel_destroy\n/{\n    if (retval != 0) { return 0; }\n    \n    // Get the netns name from the netlink message\n    char *name = (char *)data + NLMSG_HDRLEN + GENL_HDRLEN + NLA_ALIGN(attrlen);\n    int len = NLMSG_PAYLOAD(nlmsg, sizeof(struct genlmsghdr)) - attrlen - NLA_ALIGN(attrlen);\n    if (!strcmp(name, \"netns\")) {\n        printf(\"Network namespace destroyed: %.*s\\n\", len, data + NLMSG_HDRLEN + GENL_HDRLEN + NLA_ALIGN(attrlen) + NLA_ALIGN(sizeof(struct nlattr)));\n    }\n}/", "stdout": "", "stderr": "stdin:7:1-2: ERROR: syntax error, unexpected end predicate, expecting {\n/{\n~\n", "returncode": 1, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\ntracks the creation and deletion of network namespaces.\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace usage:\n\n# trace processes calling sleep\n'kprobe:do_nanosleep { printf(\"PID %d sleeping...\n\", pid); }'\n\n# count syscalls by process name\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Files opened by process\n'tracepoint:syscalls:sys_enter_open { printf(\"%s %s\n\", comm, str(args->filename)); }'\n\n# Syscall count by program\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Read bytes by process:\n'tracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }'\n\n# Read size distribution by process:\n'tracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }'\n\n# Show per-second syscall rates:\n'tracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }'\n\n# Trace disk size by process\n'tracepoint:block:block_rq_issue { printf(\"%d %s %d\n\", pid, comm, args->bytes); }'\n\n# Count page faults by process\n'software:faults:1 { @[comm] = count(); }'\n\n# Count LLC cache misses by process name and PID (uses PMCs):\n'hardware:cache-misses:1000000 { @[comm, pid] = count(); }'\n\n# Profile user-level stacks at 99 Hertz, for PID 189:\n'profile:hz:99 /pid == 189/ { @[ustack] = count(); }'\n\n# Files opened, for processes in the root cgroup-v2\n'tracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\n\", str(args->filename)); }'\n\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces block device I/O latency by calculating the time difference between the start and completion of I/O operations and storing them in a histogram.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing block device I/O... Hit Ctrl-C to end.\\n\");\n}\n\nkprobe:blk_account_io_start,\nkprobe:__blk_account_io_start\n{\n\t@start[arg0] = nsecs;\n}\n\nkprobe:blk_account_io_done,\nkprobe:__blk_account_io_done\n/@start[arg0]/\n{\n\t@usecs = hist((nsecs - @start[arg0]) / 1000);\n\tdelete(@start[arg0]);\n}\n\nEND\n{\n\tclear(@start);\n}\n\n```\n\nexample: Write a BPF code that traces block I/O and measures the latency by initializing stacks, using kprobes and histogram.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing block I/O with init stacks. Hit Ctrl-C to end.\\n\");\n}\n\nkprobe:blk_account_io_start,\nkprobe:__blk_account_io_start\n{\n\t@reqstack[arg0] = kstack;\n\t@reqts[arg0] = nsecs;\n}\n\nkprobe:blk_start_request,\nkprobe:blk_mq_start_request\n/@reqts[arg0]/\n{\n\t@usecs[@reqstack[arg0]] = hist(nsecs - @reqts[arg0]);\n\tdelete(@reqstack[arg0]);\n\tdelete(@reqts[arg0]);\n}\n\nEND\n{\n\tclear(@reqstack); clear(@reqts);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\ntracks the creation and deletion of network namespaces.\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself. \n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter_open { printf(\"%s %s \", comm, str(args->filename)); }", "stdout": "Attaching 1 probe...\n\n\n", "stderr": "", "returncode": 0, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nPrint files opened events by process\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace usage:\n\n# trace processes calling sleep\n'kprobe:do_nanosleep { printf(\"PID %d sleeping...\n\", pid); }'\n\n# count syscalls by process name\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Files opened by process\n'tracepoint:syscalls:sys_enter_open { printf(\"%s %s\n\", comm, str(args->filename)); }'\n\n# Syscall count by program\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Read bytes by process:\n'tracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }'\n\n# Read size distribution by process:\n'tracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }'\n\n# Show per-second syscall rates:\n'tracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }'\n\n# Trace disk size by process\n'tracepoint:block:block_rq_issue { printf(\"%d %s %d\n\", pid, comm, args->bytes); }'\n\n# Count page faults by process\n'software:faults:1 { @[comm] = count(); }'\n\n# Count LLC cache misses by process name and PID (uses PMCs):\n'hardware:cache-misses:1000000 { @[comm, pid] = count(); }'\n\n# Profile user-level stacks at 99 Hertz, for PID 189:\n'profile:hz:99 /pid == 189/ { @[ustack] = count(); }'\n\n# Files opened, for processes in the root cgroup-v2\n'tracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\n\", str(args->filename)); }'\n\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces open() and openat() syscalls, displaying the process ID, command name, file descriptor, error code, and file path.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing open syscalls... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-6s %-16s %4s %3s %s\\n\", \"PID\", \"COMM\", \"FD\", \"ERR\", \"PATH\");\n}\n\ntracepoint:syscalls:sys_enter_open,\ntracepoint:syscalls:sys_enter_openat\n{\n\t@filename[tid] = args.filename;\n}\n\ntracepoint:syscalls:sys_exit_open,\ntracepoint:syscalls:sys_exit_openat\n/@filename[tid]/\n{\n\t$ret = args.ret;\n\t$fd = $ret >= 0 ? $ret : -1;\n\t$errno = $ret >= 0 ? 0 : - $ret;\n\n\tprintf(\"%-6d %-16s %4d %3d %s\\n\", pid, comm, $fd, $errno,\n\t    str(@filename[tid]));\n\tdelete(@filename[tid]);\n}\n\nEND\n{\n\tclear(@filename);\n}\n\n```\n\nexample: Write a BPF code that traces new processes and counts the number of new process creations per second using the eBPF technology.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing new processes... Hit Ctrl-C to end.\\n\");\n\n}\n\ntracepoint:sched:sched_process_fork\n{\n\t@ = count();\n}\n\ninterval:s:1\n{\n\ttime(\"%H:%M:%S PIDs/sec: \");\n\tprint(@);\n\tclear(@);\n}\n\nEND\n{\n\tclear(@);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nPrint files opened events by process\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself. \n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e hardware:cache-misses:1000000 { @[comm, pid] = count(); }", "stdout": "Attaching 1 probe...\n", "stderr": "perf_event_open failed: No such file or directory\nERROR: Error attaching probe: hardware:cache-misses:1000000\n", "returncode": 255, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nCount LLC cache misses by process name\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace usage:\n\n# trace processes calling sleep\n'kprobe:do_nanosleep { printf(\"PID %d sleeping...\n\", pid); }'\n\n# count syscalls by process name\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Files opened by process\n'tracepoint:syscalls:sys_enter_open { printf(\"%s %s\n\", comm, str(args->filename)); }'\n\n# Syscall count by program\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Read bytes by process:\n'tracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }'\n\n# Read size distribution by process:\n'tracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }'\n\n# Show per-second syscall rates:\n'tracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }'\n\n# Trace disk size by process\n'tracepoint:block:block_rq_issue { printf(\"%d %s %d\n\", pid, comm, args->bytes); }'\n\n# Count page faults by process\n'software:faults:1 { @[comm] = count(); }'\n\n# Count LLC cache misses by process name and PID (uses PMCs):\n'hardware:cache-misses:1000000 { @[comm, pid] = count(); }'\n\n# Profile user-level stacks at 99 Hertz, for PID 189:\n'profile:hz:99 /pid == 189/ { @[ustack] = count(); }'\n\n# Files opened, for processes in the root cgroup-v2\n'tracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\n\", str(args->filename)); }'\n\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces new processes and counts the number of new process creations per second using the eBPF technology.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing new processes... Hit Ctrl-C to end.\\n\");\n\n}\n\ntracepoint:sched:sched_process_fork\n{\n\t@ = count();\n}\n\ninterval:s:1\n{\n\ttime(\"%H:%M:%S PIDs/sec: \");\n\tprint(@);\n\tclear(@);\n}\n\nEND\n{\n\tclear(@);\n}\n\n```\n\nexample: Write a BPF code that traces directory entry cache (dcache) lookups in the Linux kernel. The code uses kernel dynamic tracing of functions lookup_fast() and d_lookup() to capture lookup information and prints the time, process ID, command, and file name for each lookup event.\n\n```\n#ifndef BPFTRACE_HAVE_BTF\n#include <linux/fs.h>\n#include <linux/sched.h>\n\n// from fs/namei.c:\nstruct nameidata {\n        struct path     path;\n        struct qstr     last;\n        // [...]\n};\n#endif\n\nBEGIN\n{\n\tprintf(\"Tracing dcache lookups... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-8s %-6s %-16s %1s %s\\n\", \"TIME\", \"PID\", \"COMM\", \"T\", \"FILE\");\n}\n\n// comment out this block to avoid showing hits:\nkprobe:lookup_fast,\nkprobe:lookup_fast.constprop.*\n{\n\t$nd = (struct nameidata *)arg0;\n\tprintf(\"%-8d %-6d %-16s R %s\\n\", elapsed / 1e6, pid, comm,\n\t    str($nd->last.name));\n}\n\nkprobe:d_lookup\n{\n\t$name = (struct qstr *)arg1;\n\t@fname[tid] = $name->name;\n}\n\nkretprobe:d_lookup\n/@fname[tid]/\n{\n\tprintf(\"%-8d %-6d %-16s M %s\\n\", elapsed / 1e6, pid, comm,\n\t    str(@fname[tid]));\n\tdelete(@fname[tid]);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nCount LLC cache misses by process name\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself. \n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e software:faults:1 { @[comm] = count(); }", "stdout": "Attaching 1 probe...\n\n\n@[snapd]: 2\n@[journal-offline]: 2\n@[timeout]: 3\n@[node]: 1416\n", "stderr": "", "returncode": 0, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nCount page faults events by process\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace usage:\n\n# trace processes calling sleep\n'kprobe:do_nanosleep { printf(\"PID %d sleeping...\n\", pid); }'\n\n# count syscalls by process name\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Files opened by process\n'tracepoint:syscalls:sys_enter_open { printf(\"%s %s\n\", comm, str(args->filename)); }'\n\n# Syscall count by program\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Read bytes by process:\n'tracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }'\n\n# Read size distribution by process:\n'tracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }'\n\n# Show per-second syscall rates:\n'tracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }'\n\n# Trace disk size by process\n'tracepoint:block:block_rq_issue { printf(\"%d %s %d\n\", pid, comm, args->bytes); }'\n\n# Count page faults by process\n'software:faults:1 { @[comm] = count(); }'\n\n# Count LLC cache misses by process name and PID (uses PMCs):\n'hardware:cache-misses:1000000 { @[comm, pid] = count(); }'\n\n# Profile user-level stacks at 99 Hertz, for PID 189:\n'profile:hz:99 /pid == 189/ { @[ustack] = count(); }'\n\n# Files opened, for processes in the root cgroup-v2\n'tracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\n\", str(args->filename)); }'\n\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that monitors the swapins by process.\n\n```\nkprobe:swap_readpage\n{\n        @[comm, pid] = count();\n}\n\ninterval:s:1\n{\n        time();\n        print(@);\n        clear(@);\n}\n\n```\n\nexample: Write a BPF code that traces new processes and counts the number of new process creations per second using the eBPF technology.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing new processes... Hit Ctrl-C to end.\\n\");\n\n}\n\ntracepoint:sched:sched_process_fork\n{\n\t@ = count();\n}\n\ninterval:s:1\n{\n\ttime(\"%H:%M:%S PIDs/sec: \");\n\tprint(@);\n\tclear(@);\n}\n\nEND\n{\n\tclear(@);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nCount page faults events by process\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself. \n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN\n{\n    printf(\"Tracing Bash Commands System Wide ... Press Ctrl+C To End \\n\");\n}\ntracepoint:bash:bash_execute_command\n{\n        // Print The Command Entered By The User\n        printf(\"Command Executed :% s \", args->cmd);\n        // Print The Exit Code Of The Command\n        printf(\"Exit Code : % d \\ n\", retval);\n}", "stdout": "", "stderr": "stdin:10:9-35: ERROR: invalid escape character '\\ '\n        printf(\"Exit Code : % d \\ n\", retval);\n        ~~~~~~~~~~~~~~~~~~~~~~~~~~\n", "returncode": 1, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nPrint entered bash commands system wide and the exit code\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace usage:\n\n# trace processes calling sleep\n'kprobe:do_nanosleep { printf(\"PID %d sleeping...\n\", pid); }'\n\n# count syscalls by process name\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Files opened by process\n'tracepoint:syscalls:sys_enter_open { printf(\"%s %s\n\", comm, str(args->filename)); }'\n\n# Syscall count by program\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Read bytes by process:\n'tracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }'\n\n# Read size distribution by process:\n'tracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }'\n\n# Show per-second syscall rates:\n'tracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }'\n\n# Trace disk size by process\n'tracepoint:block:block_rq_issue { printf(\"%d %s %d\n\", pid, comm, args->bytes); }'\n\n# Count page faults by process\n'software:faults:1 { @[comm] = count(); }'\n\n# Count LLC cache misses by process name and PID (uses PMCs):\n'hardware:cache-misses:1000000 { @[comm, pid] = count(); }'\n\n# Profile user-level stacks at 99 Hertz, for PID 189:\n'profile:hz:99 /pid == 189/ { @[ustack] = count(); }'\n\n# Files opened, for processes in the root cgroup-v2\n'tracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\n\", str(args->filename)); }'\n\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that counts the number of system calls and the number of processes. It also prints the top 10 system call IDs and the top 10 processes at the end.\n\n```\nBEGIN\n{\n\tprintf(\"Counting syscalls... Hit Ctrl-C to end.\\n\");\n\t// ausyscall --dump | awk 'NR > 1 { printf(\"\\t@sysname[%d] = \\\"%s\\\";\\n\", $1, $2); }'\n}\n\ntracepoint:raw_syscalls:sys_enter\n{\n\t@syscall[args.id] = count();\n\t@process[comm] = count();\n}\n\nEND\n{\n\tprintf(\"\\nTop 10 syscalls IDs:\\n\");\n\tprint(@syscall, 10);\n\tclear(@syscall);\n\n\tprintf(\"\\nTop 10 processes:\\n\");\n\tprint(@process, 10);\n\tclear(@process);\n}\n\n```\n\nexample: Write a BPF code that traces the readline function in the /bin/bash program and prints the timestamp, process ID, and command entered by the user.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing bash commands... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-9s %-6s %s\\n\", \"TIME\", \"PID\", \"COMMAND\");\n}\n\nuretprobe:/bin/bash:readline\n{\n\ttime(\"%H:%M:%S  \");\n\tprintf(\"%-6d %s\\n\", pid, str(retval));\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nPrint entered bash commands system wide and the exit code\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself. \n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN\n{\n\tprintf(\"Tracing dcache lookups... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-8s %-6s %-16s %1s %s\\n\", \"TIME\", \"PID\", \"COMM\", \"T\", \"FILE\");\n}\n\n// comment out this block to avoid showing hits:\nkprobe:lookup_fast,\nkprobe:lookup_fast.constprop.*\n{\n\t$nd = (struct nameidata *)arg0;\n\tprintf(\"%-8d %-6d %-16s R %s\\n\", elapsed / 1e6, pid, comm,\n\t    str($nd->last.name));\n}\n\nkprobe:d_lookup\n{\n\t$name = (struct qstr *)arg1;\n\t@fname[tid] = $name->name;\n}\n\nkretprobe:d_lookup\n/@fname[tid]/\n{\n\tprintf(\"%-8d %-6d %-16s M %s\\n\", elapsed / 1e6, pid, comm,\n\t    str(@fname[tid]));\n\tdelete(@fname[tid]);\n}", "stdout": "Attaching 4 probes...\nTracing dcache lookups... Hit Ctrl-C to end.\nTIME     PID    COMM             T FILE\n95       2526   node             R proc/12596/cmdline\n95       2526   node             R 12596/cmdline\n95       2526   node             R cmdline\n95       2526   node             R proc/34120/cmdline\n95       2526   node             R 34120/cmdline\n95       2526   node             R cmdline\n95       2526   node             R proc/4025/cmdline\n95       2526   node             R 4025/cmdline\n95       2526   node             R cmdline\n95       2526   node             R proc/11279/cmdline\n95       2526   node             R 11279/cmdline\n95       2526   node             R cmdline\n296      2526   node             R proc/12596/cmdline\n296      2526   node             R 12596/cmdline\n296      2526   node             R cmdline\n296      2526   node             R proc/34120/cmdline\n296      2526   node             R 34120/cmdline\n296      2526   node             R cmdline\n296      2526   node             R proc/4025/cmdline\n296      2526   node             R 4025/cmdline\n296      2526   node             R cmdline\n296      2526   node             R proc/11279/cmdline\n296      2526   node             R 11279/cmdline\n296      2526   node             R cmdline\n428      31770  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n428      31770  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n428      31770  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n428      31770  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n428      31770  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n428      31770  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n428      31770  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n428      31770  node             R vscode.lock\n428      31770  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n428      31770  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n428      31770  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n428      31770  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n428      31770  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n428      31770  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n428      31770  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n428      31770  node             R vscode.lock\n428      31781  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n428      31781  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n428      31781  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n428      31781  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n428      31781  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n428      31781  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n428      31781  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n428      31781  node             R vscode.lock\n428      2513   node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n428      2513   node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n428      2513   node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n428      2513   node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n428      2513   node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n428      2513   node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n428      2513   node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n428      2513   node             R vscode.lock\n500      2526   node             R proc/12596/cmdline\n500      2526   node             R 12596/cmdline\n500      2526   node             R cmdline\n500      2526   node             R proc/34120/cmdline\n500      2526   node             R 34120/cmdline\n500      2526   node             R cmdline\n500      2526   node             R proc/4025/cmdline\n500      2526   node             R 4025/cmdline\n500      2526   node             R cmdline\n500      2526   node             R proc/11279/cmdline\n500      2526   node             R 11279/cmdline\n500      2526   node             R cmdline\n703      2526   node             R proc/12596/cmdline\n703      2526   node             R 12596/cmdline\n703      2526   node             R cmdline\n703      2526   node             R proc/34120/cmdline\n703      2526   node             R 34120/cmdline\n703      2526   node             R cmdline\n703      2526   node             R proc/4025/cmdline\n703      2526   node             R 4025/cmdline\n703      2526   node             R cmdline\n703      2526   node             R proc/11279/cmdline\n703      2526   node             R 11279/cmdline\n703      2526   node             R cmdline\n765      32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n765      32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n765      32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n765      32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n765      32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n765      32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n765      32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n765      32362  node             R vscode.lock\n765      32362  node             R home\n765      32362  node             R home/yunwei\n765      32362  node             R yunwei\n765      32362  node             R home/yunwei/.vscode-server\n765      32362  node             R yunwei/.vscode-server\n765      32362  node             R .vscode-server\n765      32362  node             R home/yunwei/.vscode-server/data\n765      32362  node             R yunwei/.vscode-server/data\n765      32362  node             R .vscode-server/data\n765      32362  node             R data\n765      32362  node             R home/yunwei/.vscode-server/data/User\n765      32362  node             R yunwei/.vscode-server/data/User\n765      32362  node             R .vscode-server/data/User\n765      32362  node             R data/User\n765      32362  node             R User\n765      32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage\n765      32362  node             R yunwei/.vscode-server/data/User/workspaceStorage\n765      32362  node             R .vscode-server/data/User/workspaceStorage\n765      32362  node             R data/User/workspaceStorage\n765      32362  node             R User/workspaceStorage\n765      32362  node             R workspaceStorage\n765      32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n765      32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n765      32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n765      32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n765      32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n765      32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n765      32362  node             R 683061573fc2bafa947b4d87342b0cd1\n765      32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n765      32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n765      32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n765      32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n765      32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n765      32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n765      32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n765      32362  node             R vscode.lock\n765      32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n765      32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n765      32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n765      32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n765      32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n765      32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n765      32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n765      32362  node             R vscode.lock\n765      32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n765      32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n765      32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n765      32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n765      32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n765      32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n765      32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n765      32362  node             R vscode.lock\n904      2526   node             R proc/12596/cmdline\n904      2526   node             R 12596/cmdline\n904      2526   node             R cmdline\n904      2526   node             R proc/34120/cmdline\n904      2526   node             R 34120/cmdline\n904      2526   node             R cmdline\n904      2526   node             R proc/4025/cmdline\n904      2526   node             R 4025/cmdline\n904      2526   node             R cmdline\n904      2526   node             R proc/11279/cmdline\n904      2526   node             R 11279/cmdline\n904      2526   node             R cmdline\n1106     2526   node             R proc/12596/cmdline\n1106     2526   node             R 12596/cmdline\n1106     2526   node             R cmdline\n1106     2526   node             R proc/34120/cmdline\n1106     2526   node             R 34120/cmdline\n1106     2526   node             R cmdline\n1106     2526   node             R proc/4025/cmdline\n1106     2526   node             R 4025/cmdline\n1106     2526   node             R cmdline\n1106     2526   node             R proc/11279/cmdline\n1106     2526   node             R 11279/cmdline\n1106     2526   node             R cmdline\n1308     2526   node             R proc/12596/cmdline\n1308     2526   node             R 12596/cmdline\n1309     2526   node             R cmdline\n1309     2526   node             R proc/34120/cmdline\n1309     2526   node             R 34120/cmdline\n1309     2526   node             R cmdline\n1309     2526   node             R proc/4025/cmdline\n1309     2526   node             R 4025/cmdline\n1309     2526   node             R cmdline\n1309     2526   node             R proc/11279/cmdline\n1309     2526   node             R 11279/cmdline\n1309     2526   node             R cmdline\n1430     31770  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n1430     31770  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n1430     31770  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n1430     31770  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n1430     31770  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n1430     31770  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n1430     31770  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n1430     31770  node             R vscode.lock\n1430     31770  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n1430     31770  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n1430     31770  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n1430     31770  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n1430     31770  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n1430     31770  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n1430     31770  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n1430     31770  node             R vscode.lock\n1430     31781  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n1430     31781  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n1430     31781  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n1430     31781  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n1430     31781  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n1430     31781  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n1430     31781  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n1430     31781  node             R vscode.lock\n1430     2513   node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n1430     2513   node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n1430     2513   node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n1430     2513   node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n1430     2513   node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n1430     2513   node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n1430     2513   node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n1430     2513   node             R vscode.lock\n1509     2526   node             R proc/12596/cmdline\n1509     2526   node             R 12596/cmdline\n1509     2526   node             R cmdline\n1509     2526   node             R proc/34120/cmdline\n1509     2526   node             R 34120/cmdline\n1509     2526   node             R cmdline\n1509     2526   node             R proc/4025/cmdline\n1509     2526   node             R 4025/cmdline\n1509     2526   node             R cmdline\n1509     2526   node             R proc/11279/cmdline\n1509     2526   node             R 11279/cmdline\n1509     2526   node             R cmdline\n1711     2526   node             R proc/12596/cmdline\n1711     2526   node             R 12596/cmdline\n1711     2526   node             R cmdline\n1711     2526   node             R proc/34120/cmdline\n1711     2526   node             R 34120/cmdline\n1711     2526   node             R cmdline\n1711     2526   node             R proc/4025/cmdline\n1711     2526   node             R 4025/cmdline\n1711     2526   node             R cmdline\n1711     2526   node             R proc/11279/cmdline\n1711     2526   node             R 11279/cmdline\n1711     2526   node             R cmdline\n1772     32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n1772     32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n1772     32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n1772     32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n1772     32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n1772     32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n1772     32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n1772     32362  node             R vscode.lock\n1772     32362  node             R home\n1772     32362  node             R home/yunwei\n1772     32362  node             R yunwei\n1772     32362  node             R home/yunwei/.vscode-server\n1772     32362  node             R yunwei/.vscode-server\n1772     32362  node             R .vscode-server\n1772     32362  node             R home/yunwei/.vscode-server/data\n1772     32362  node             R yunwei/.vscode-server/data\n1772     32362  node             R .vscode-server/data\n1772     32362  node             R data\n1772     32362  node             R home/yunwei/.vscode-server/data/User\n1772     32362  node             R yunwei/.vscode-server/data/User\n1772     32362  node             R .vscode-server/data/User\n1772     32362  node             R data/User\n1772     32362  node             R User\n1772     32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage\n1772     32362  node             R yunwei/.vscode-server/data/User/workspaceStorage\n1772     32362  node             R .vscode-server/data/User/workspaceStorage\n1772     32362  node             R data/User/workspaceStorage\n1772     32362  node             R User/workspaceStorage\n1772     32362  node             R workspaceStorage\n1772     32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n1772     32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n1772     32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n1772     32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n1772     32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n1772     32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n1772     32362  node             R 683061573fc2bafa947b4d87342b0cd1\n1772     32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n1772     32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n1772     32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n1772     32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n1772     32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n1772     32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n1772     32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n1772     32362  node             R vscode.lock\n1772     32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n1772     32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n1772     32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n1772     32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n1772     32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n1772     32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n1772     32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n1772     32362  node             R vscode.lock\n1772     32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n1772     32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n1772     32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n1772     32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n1772     32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n1772     32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n1772     32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n1772     32362  node             R vscode.lock\n1915     2526   node             R proc/12596/cmdline\n1915     2526   node             R 12596/cmdline\n1915     2526   node             R cmdline\n1915     2526   node             R proc/34120/cmdline\n1915     2526   node             R 34120/cmdline\n1915     2526   node             R cmdline\n1915     2526   node             R proc/4025/cmdline\n1915     2526   node             R 4025/cmdline\n1915     2526   node             R cmdline\n1915     2526   node             R proc/11279/cmdline\n1915     2526   node             R 11279/cmdline\n1915     2526   node             R cmdline\n2116     2526   node             R proc/12596/cmdline\n2116     2526   node             R 12596/cmdline\n2116     2526   node             R cmdline\n2116     2526   node             R proc/34120/cmdline\n2116     2526   node             R 34120/cmdline\n2116     2526   node             R cmdline\n2116     2526   node             R proc/4025/cmdline\n2116     2526   node             R 4025/cmdline\n2116     2526   node             R cmdline\n2116     2526   node             R proc/11279/cmdline\n2116     2526   node             R 11279/cmdline\n2116     2526   node             R cmdline\n2195     31770  node             R proc/meminfo\n2195     31770  node             R meminfo\n2196     31770  node             R home/yunwei/.vscode/c_cpp_properties.json\n2196     31770  node             R yunwei/.vscode/c_cpp_properties.json\n2196     31770  node             R .vscode/c_cpp_properties.json\n2196     31770  node             R c_cpp_properties.json\n2317     2526   node             R proc/12596/cmdline\n2317     2526   node             R 12596/cmdline\n2317     2526   node             R cmdline\n2317     2526   node             R proc/34120/cmdline\n2317     2526   node             R 34120/cmdline\n2317     2526   node             R cmdline\n2317     2526   node             R proc/4025/cmdline\n2317     2526   node             R 4025/cmdline\n2317     2526   node             R cmdline\n2317     2526   node             R proc/11279/cmdline\n2317     2526   node             R 11279/cmdline\n2317     2526   node             R cmdline\n2434     31770  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n2434     31770  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n2434     31770  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n2434     31770  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n2434     31770  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n2434     31770  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n2434     31770  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n2434     31770  node             R vscode.lock\n2434     31770  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n2434     31770  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n2434     31770  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n2434     31770  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n2434     31770  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n2434     31770  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n2434     31770  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n2434     31770  node             R vscode.lock\n2435     2513   node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n2435     2513   node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n2435     2513   node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n2435     2513   node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n2435     2513   node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n2435     2513   node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n2435     2513   node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n2435     2513   node             R vscode.lock\n2435     31781  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n2435     31781  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n2435     31781  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n2435     31781  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n2435     31781  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n2435     31781  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n2435     31781  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n2435     31781  node             R vscode.lock\n2518     2526   node             R proc/12596/cmdline\n2518     2526   node             R 12596/cmdline\n2518     2526   node             R cmdline\n2518     2526   node             R proc/34120/cmdline\n2518     2526   node             R 34120/cmdline\n2518     2526   node             R cmdline\n2518     2526   node             R proc/4025/cmdline\n2518     2526   node             R 4025/cmdline\n2518     2526   node             R cmdline\n2518     2526   node             R proc/11279/cmdline\n2518     2526   node             R 11279/cmdline\n2518     2526   node             R cmdline\n2722     2526   node             R proc/12596/cmdline\n2722     2526   node             R 12596/cmdline\n2722     2526   node             R cmdline\n2722     2526   node             R proc/34120/cmdline\n2722     2526   node             R 34120/cmdline\n2722     2526   node             R cmdline\n2722     2526   node             R proc/4025/cmdline\n2722     2526   node             R 4025/cmdline\n2722     2526   node             R cmdline\n2722     2526   node             R proc/11279/cmdline\n2722     2526   node             R 11279/cmdline\n2722     2526   node             R cmdline\n2779     32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n2779     32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n2779     32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n2779     32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n2779     32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n2779     32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n2779     32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n2779     32362  node             R vscode.lock\n2779     32362  node             R home\n2779     32362  node             R home/yunwei\n2779     32362  node             R yunwei\n2779     32362  node             R home/yunwei/.vscode-server\n2779     32362  node             R yunwei/.vscode-server\n2779     32362  node             R .vscode-server\n2779     32362  node             R home/yunwei/.vscode-server/data\n2779     32362  node             R yunwei/.vscode-server/data\n2779     32362  node             R .vscode-server/data\n2779     32362  node             R data\n2779     32362  node             R home/yunwei/.vscode-server/data/User\n2779     32362  node             R yunwei/.vscode-server/data/User\n2779     32362  node             R .vscode-server/data/User\n2779     32362  node             R data/User\n2779     32362  node             R User\n2779     32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage\n2779     32362  node             R yunwei/.vscode-server/data/User/workspaceStorage\n2779     32362  node             R .vscode-server/data/User/workspaceStorage\n2779     32362  node             R data/User/workspaceStorage\n2779     32362  node             R User/workspaceStorage\n2779     32362  node             R workspaceStorage\n2779     32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n2779     32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n2779     32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n2779     32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n2779     32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n2779     32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n2779     32362  node             R 683061573fc2bafa947b4d87342b0cd1\n2779     32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n2779     32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n2779     32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n2779     32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n2779     32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n2779     32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n2779     32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n2779     32362  node             R vscode.lock\n2779     32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n2779     32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n2779     32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n2779     32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n2779     32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n2779     32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n2779     32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n2779     32362  node             R vscode.lock\n2779     32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n2779     32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n2779     32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n2779     32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n2779     32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n2779     32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n2779     32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n2779     32362  node             R vscode.lock\n2925     2526   node             R proc/12596/cmdline\n2925     2526   node             R 12596/cmdline\n2925     2526   node             R cmdline\n2925     2526   node             R proc/34120/cmdline\n2925     2526   node             R 34120/cmdline\n2925     2526   node             R cmdline\n2925     2526   node             R proc/4025/cmdline\n2925     2526   node             R 4025/cmdline\n2925     2526   node             R cmdline\n2925     2526   node             R proc/11279/cmdline\n2925     2526   node             R 11279/cmdline\n2925     2526   node             R cmdline\n3129     2526   node             R proc/12596/cmdline\n3129     2526   node             R 12596/cmdline\n3129     2526   node             R cmdline\n3129     2526   node             R proc/34120/cmdline\n3129     2526   node             R 34120/cmdline\n3129     2526   node             R cmdline\n3129     2526   node             R proc/4025/cmdline\n3129     2526   node             R 4025/cmdline\n3129     2526   node             R cmdline\n3129     2526   node             R proc/11279/cmdline\n3129     2526   node             R 11279/cmdline\n3129     2526   node             R cmdline\n3331     2526   node             R proc/12596/cmdline\n3331     2526   node             R 12596/cmdline\n3331     2526   node             R cmdline\n3331     2526   node             R proc/34120/cmdline\n3331     2526   node             R 34120/cmdline\n3331     2526   node             R cmdline\n3331     2526   node             R proc/4025/cmdline\n3331     2526   node             R 4025/cmdline\n3331     2526   node             R cmdline\n3331     2526   node             R proc/11279/cmdline\n3331     2526   node             R 11279/cmdline\n3331     2526   node             R cmdline\n3435     31770  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n3439     31770  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n3439     31770  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n3439     31770  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n3439     31770  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n3439     31770  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n3439     31770  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n3439     31770  node             R vscode.lock\n3440     31770  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n3440     31770  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n3440     31770  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n3440     31770  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n3440     31770  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n3440     31770  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n3440     31770  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n3440     31770  node             R vscode.lock\n3440     2513   node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n3440     2513   node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n3440     2513   node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n3440     2513   node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n3440     2513   node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n3440     2513   node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n3440     2513   node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n3440     2513   node             R vscode.lock\n3440     31781  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n3440     31781  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n3440     31781  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n3440     31781  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n3440     31781  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n3440     31781  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n3440     31781  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n3440     31781  node             R vscode.lock\n3531     2526   node             R proc/12596/cmdline\n3531     2526   node             R 12596/cmdline\n3531     2526   node             R cmdline\n3532     2526   node             R proc/34120/cmdline\n3532     2526   node             R 34120/cmdline\n3532     2526   node             R cmdline\n3532     2526   node             R proc/4025/cmdline\n3532     2526   node             R 4025/cmdline\n3532     2526   node             R cmdline\n3532     2526   node             R proc/11279/cmdline\n3532     2526   node             R 11279/cmdline\n3532     2526   node             R cmdline\n3734     2526   node             R proc/12596/cmdline\n3734     2526   node             R 12596/cmdline\n3734     2526   node             R cmdline\n3734     2526   node             R proc/34120/cmdline\n3734     2526   node             R 34120/cmdline\n3734     2526   node             R cmdline\n3734     2526   node             R proc/4025/cmdline\n3734     2526   node             R 4025/cmdline\n3734     2526   node             R cmdline\n3734     2526   node             R proc/11279/cmdline\n3734     2526   node             R 11279/cmdline\n3734     2526   node             R cmdline\n3779     32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n3779     32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n3779     32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n3779     32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n3779     32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n3779     32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n3779     32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n3779     32362  node             R vscode.lock\n3779     32362  node             R home\n3779     32362  node             R home/yunwei\n3779     32362  node             R yunwei\n3779     32362  node             R home/yunwei/.vscode-server\n3779     32362  node             R yunwei/.vscode-server\n3779     32362  node             R .vscode-server\n3779     32362  node             R home/yunwei/.vscode-server/data\n3779     32362  node             R yunwei/.vscode-server/data\n3779     32362  node             R .vscode-server/data\n3779     32362  node             R data\n3779     32362  node             R home/yunwei/.vscode-server/data/User\n3779     32362  node             R yunwei/.vscode-server/data/User\n3779     32362  node             R .vscode-server/data/User\n3779     32362  node             R data/User\n3779     32362  node             R User\n3779     32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage\n3779     32362  node             R yunwei/.vscode-server/data/User/workspaceStorage\n3779     32362  node             R .vscode-server/data/User/workspaceStorage\n3779     32362  node             R data/User/workspaceStorage\n3779     32362  node             R User/workspaceStorage\n3779     32362  node             R workspaceStorage\n3779     32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n3779     32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n3779     32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n3779     32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n3779     32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n3779     32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n3779     32362  node             R 683061573fc2bafa947b4d87342b0cd1\n3779     32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n3779     32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n3779     32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n3779     32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n3779     32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n3779     32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n3779     32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n3779     32362  node             R vscode.lock\n3779     32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n3779     32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n3779     32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n3779     32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n3779     32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n3779     32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n3779     32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n3779     32362  node             R vscode.lock\n3779     32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n3779     32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n3779     32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n3779     32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n3779     32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n3779     32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n3779     32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n3779     32362  node             R vscode.lock\n3938     2526   node             R proc/12596/cmdline\n3938     2526   node             R 12596/cmdline\n3938     2526   node             R cmdline\n3938     2526   node             R proc/34120/cmdline\n3938     2526   node             R 34120/cmdline\n3938     2526   node             R cmdline\n3938     2526   node             R proc/4025/cmdline\n3938     2526   node             R 4025/cmdline\n3938     2526   node             R cmdline\n3938     2526   node             R proc/11279/cmdline\n3938     2526   node             R 11279/cmdline\n3938     2526   node             R cmdline\n4141     2526   node             R proc/12596/cmdline\n4141     2526   node             R 12596/cmdline\n4141     2526   node             R cmdline\n4141     2526   node             R proc/34120/cmdline\n4141     2526   node             R 34120/cmdline\n4141     2526   node             R cmdline\n4141     2526   node             R proc/4025/cmdline\n4141     2526   node             R 4025/cmdline\n4141     2526   node             R cmdline\n4141     2526   node             R proc/11279/cmdline\n4141     2526   node             R 11279/cmdline\n4141     2526   node             R cmdline\n4343     2526   node             R proc/12596/cmdline\n4343     2526   node             R 12596/cmdline\n4343     2526   node             R cmdline\n4343     2526   node             R proc/34120/cmdline\n4343     2526   node             R 34120/cmdline\n4343     2526   node             R cmdline\n4343     2526   node             R proc/4025/cmdline\n4343     2526   node             R 4025/cmdline\n4343     2526   node             R cmdline\n4343     2526   node             R proc/11279/cmdline\n4343     2526   node             R 11279/cmdline\n4343     2526   node             R cmdline\n4436     31770  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n4436     31770  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n4436     31770  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n4436     31770  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n4436     31770  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n4436     31770  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n4436     31770  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n4436     31770  node             R vscode.lock\n4436     31770  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n4436     31770  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n4436     31770  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n4436     31770  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n4436     31770  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n4436     31770  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n4436     31770  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n4436     31770  node             R vscode.lock\n4436     2513   node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n4436     2513   node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n4436     2513   node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n4436     2513   node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n4436     2513   node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n4436     2513   node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n4436     2513   node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n4436     2513   node             R vscode.lock\n4437     31781  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n4437     31781  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n4437     31781  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n4437     31781  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n4437     31781  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n4437     31781  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n4437     31781  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n4437     31781  node             R vscode.lock\n4546     2526   node             R proc/12596/cmdline\n4546     2526   node             R 12596/cmdline\n4546     2526   node             R cmdline\n4546     2526   node             R proc/34120/cmdline\n4546     2526   node             R 34120/cmdline\n4546     2526   node             R cmdline\n4546     2526   node             R proc/4025/cmdline\n4546     2526   node             R 4025/cmdline\n4546     2526   node             R cmdline\n4546     2526   node             R proc/11279/cmdline\n4546     2526   node             R 11279/cmdline\n4546     2526   node             R cmdline\n4700     31770  node             R proc/meminfo\n4700     31770  node             R meminfo\n4700     31770  node             R home/yunwei/.vscode/c_cpp_properties.json\n4700     31770  node             R yunwei/.vscode/c_cpp_properties.json\n4700     31770  node             R .vscode/c_cpp_properties.json\n4700     31770  node             R c_cpp_properties.json\n4733     578    vmtoolsd         R etc/vmware-tools/tools-global.conf\n4733     578    vmtoolsd         R vmware-tools/tools-global.conf\n4733     578    vmtoolsd         R tools-global.conf\n4733     578    vmtoolsd         R etc/vmware-tools/tools.conf\n4733     578    vmtoolsd         R vmware-tools/tools.conf\n4733     578    vmtoolsd         R tools.conf\n4747     2526   node             R proc/12596/cmdline\n4747     2526   node             R 12596/cmdline\n4747     2526   node             R cmdline\n4747     2526   node             R proc/34120/cmdline\n4747     2526   node             R 34120/cmdline\n4747     2526   node             R cmdline\n4747     2526   node             R proc/4025/cmdline\n4747     2526   node             R 4025/cmdline\n4747     2526   node             R cmdline\n4747     2526   node             R proc/11279/cmdline\n4747     2526   node             R 11279/cmdline\n4747     2526   node             R cmdline\n4769     32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n4769     32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n4769     32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n4769     32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n4769     32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n4769     32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n4769     32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n4769     32362  node             R vscode.lock\n4769     32362  node             R home\n4769     32362  node             R home/yunwei\n4769     32362  node             R yunwei\n4769     32362  node             R home/yunwei/.vscode-server\n4769     32362  node             R yunwei/.vscode-server\n4769     32362  node             R .vscode-server\n4769     32362  node             R home/yunwei/.vscode-server/data\n4769     32362  node             R yunwei/.vscode-server/data\n4769     32362  node             R .vscode-server/data\n4769     32362  node             R data\n4769     32362  node             R home/yunwei/.vscode-server/data/User\n4769     32362  node             R yunwei/.vscode-server/data/User\n4769     32362  node             R .vscode-server/data/User\n4769     32362  node             R data/User\n4769     32362  node             R User\n4769     32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage\n4769     32362  node             R yunwei/.vscode-server/data/User/workspaceStorage\n4769     32362  node             R .vscode-server/data/User/workspaceStorage\n4769     32362  node             R data/User/workspaceStorage\n4769     32362  node             R User/workspaceStorage\n4769     32362  node             R workspaceStorage\n4769     32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n4769     32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n4769     32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n4769     32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n4769     32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n4769     32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n4769     32362  node             R 683061573fc2bafa947b4d87342b0cd1\n4769     32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n4769     32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n4769     32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n4769     32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n4769     32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n4769     32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n4769     32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n4769     32362  node             R vscode.lock\n4769     32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n4769     32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n4769     32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n4769     32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n4769     32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n4769     32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n4769     32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n4769     32362  node             R vscode.lock\n4769     32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n4769     32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n4769     32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n4769     32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n4769     32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n4769     32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n4769     32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n4769     32362  node             R vscode.lock\n4949     2526   node             R proc/12596/cmdline\n4949     2526   node             R 12596/cmdline\n4949     2526   node             R cmdline\n4949     2526   node             R proc/34120/cmdline\n4949     2526   node             R 34120/cmdline\n4949     2526   node             R cmdline\n4949     2526   node             R proc/4025/cmdline\n4949     2526   node             R 4025/cmdline\n4949     2526   node             R cmdline\n4949     2526   node             R proc/11279/cmdline\n4949     2526   node             R 11279/cmdline\n4949     2526   node             R cmdline\n5152     2526   node             R proc/12596/cmdline\n5152     2526   node             R 12596/cmdline\n5152     2526   node             R cmdline\n5152     2526   node             R proc/34120/cmdline\n5152     2526   node             R 34120/cmdline\n5152     2526   node             R cmdline\n5152     2526   node             R proc/4025/cmdline\n5152     2526   node             R 4025/cmdline\n5152     2526   node             R cmdline\n5152     2526   node             R proc/11279/cmdline\n5152     2526   node             R 11279/cmdline\n5152     2526   node             R cmdline\n5352     2526   node             R proc/12596/cmdline\n5352     2526   node             R 12596/cmdline\n5352     2526   node             R cmdline\n5357     2526   node             R proc/34120/cmdline\n5357     2526   node             R 34120/cmdline\n5357     2526   node             R cmdline\n5357     2526   node             R proc/4025/cmdline\n5357     2526   node             R 4025/cmdline\n5357     2526   node             R cmdline\n5357     2526   node             R proc/11279/cmdline\n5357     2526   node             R 11279/cmdline\n5357     2526   node             R cmdline\n5437     31770  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n5437     31770  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n5437     31770  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n5437     31770  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n5437     31770  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n5437     31770  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n5437     31770  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n5437     31770  node             R vscode.lock\n5437     31770  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n5437     31770  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n5437     31770  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n5437     31770  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n5437     31770  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n5437     31770  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n5437     31770  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n5437     31770  node             R vscode.lock\n5437     2513   node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n5437     2513   node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n5437     2513   node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n5437     2513   node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n5437     2513   node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n5437     2513   node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n5437     2513   node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n5437     2513   node             R vscode.lock\n5437     31781  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n5437     31781  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n5437     31781  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n5437     31781  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n5437     31781  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n5437     31781  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n5437     31781  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n5437     31781  node             R vscode.lock\n5554     2526   node             R proc/12596/cmdline\n5554     2526   node             R 12596/cmdline\n5554     2526   node             R cmdline\n5557     2526   node             R proc/34120/cmdline\n5557     2526   node             R 34120/cmdline\n5557     2526   node             R cmdline\n5557     2526   node             R proc/4025/cmdline\n5557     2526   node             R 4025/cmdline\n5557     2526   node             R cmdline\n5557     2526   node             R proc/11279/cmdline\n5557     2526   node             R 11279/cmdline\n5557     2526   node             R cmdline\n5754     2526   node             R proc/12596/cmdline\n5754     2526   node             R 12596/cmdline\n5754     2526   node             R cmdline\n5758     2526   node             R proc/34120/cmdline\n5758     2526   node             R 34120/cmdline\n5758     2526   node             R cmdline\n5759     2526   node             R proc/4025/cmdline\n5759     2526   node             R 4025/cmdline\n5759     2526   node             R cmdline\n5759     2526   node             R proc/11279/cmdline\n5759     2526   node             R 11279/cmdline\n5759     2526   node             R cmdline\n5774     32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n5774     32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n5774     32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n5774     32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n5774     32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n5774     32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n5774     32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n5774     32362  node             R vscode.lock\n5774     32362  node             R home\n5774     32362  node             R home/yunwei\n5774     32362  node             R yunwei\n5774     32362  node             R home/yunwei/.vscode-server\n5774     32362  node             R yunwei/.vscode-server\n5774     32362  node             R .vscode-server\n5774     32362  node             R home/yunwei/.vscode-server/data\n5774     32362  node             R yunwei/.vscode-server/data\n5774     32362  node             R .vscode-server/data\n5774     32362  node             R data\n5774     32362  node             R home/yunwei/.vscode-server/data/User\n5774     32362  node             R yunwei/.vscode-server/data/User\n5774     32362  node             R .vscode-server/data/User\n5774     32362  node             R data/User\n5774     32362  node             R User\n5774     32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage\n5774     32362  node             R yunwei/.vscode-server/data/User/workspaceStorage\n5774     32362  node             R .vscode-server/data/User/workspaceStorage\n5774     32362  node             R data/User/workspaceStorage\n5774     32362  node             R User/workspaceStorage\n5774     32362  node             R workspaceStorage\n5774     32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n5774     32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n5774     32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n5774     32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n5774     32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n5774     32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n5774     32362  node             R 683061573fc2bafa947b4d87342b0cd1\n5774     32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n5774     32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n5774     32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n5774     32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n5774     32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n5774     32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n5774     32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n5774     32362  node             R vscode.lock\n5774     32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n5774     32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n5774     32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n5774     32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n5774     32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n5774     32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n5774     32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n5774     32362  node             R vscode.lock\n5774     32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n5774     32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n5774     32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n5774     32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n5774     32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n5774     32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n5774     32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n5774     32362  node             R vscode.lock\n5955     2526   node             R proc/12596/cmdline\n5955     2526   node             R 12596/cmdline\n5955     2526   node             R cmdline\n5961     2526   node             R proc/34120/cmdline\n5961     2526   node             R 34120/cmdline\n5961     2526   node             R cmdline\n5961     2526   node             R proc/4025/cmdline\n5961     2526   node             R 4025/cmdline\n5961     2526   node             R cmdline\n5961     2526   node             R proc/11279/cmdline\n5961     2526   node             R 11279/cmdline\n5961     2526   node             R cmdline\n6158     2526   node             R proc/12596/cmdline\n6158     2526   node             R 12596/cmdline\n6158     2526   node             R cmdline\n6164     2526   node             R proc/34120/cmdline\n6164     2526   node             R 34120/cmdline\n6164     2526   node             R cmdline\n6164     2526   node             R proc/4025/cmdline\n6164     2526   node             R 4025/cmdline\n6164     2526   node             R cmdline\n6164     2526   node             R proc/11279/cmdline\n6164     2526   node             R 11279/cmdline\n6164     2526   node             R cmdline\n6361     2526   node             R proc/12596/cmdline\n6361     2526   node             R 12596/cmdline\n6361     2526   node             R cmdline\n6365     2526   node             R proc/34120/cmdline\n6365     2526   node             R 34120/cmdline\n6365     2526   node             R cmdline\n6365     2526   node             R proc/4025/cmdline\n6365     2526   node             R 4025/cmdline\n6365     2526   node             R cmdline\n6365     2526   node             R proc/11279/cmdline\n6365     2526   node             R 11279/cmdline\n6365     2526   node             R cmdline\n6439     31770  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n6439     31770  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n6439     31770  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n6439     31770  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n6439     31770  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n6439     31770  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n6439     31770  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n6439     31770  node             R vscode.lock\n6440     31770  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n6440     31770  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n6440     31770  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n6440     31770  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n6440     31770  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n6440     31770  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n6440     31770  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n6440     31770  node             R vscode.lock\n6440     2513   node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n6440     2513   node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n6440     2513   node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n6440     2513   node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n6440     2513   node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n6440     2513   node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n6440     2513   node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n6440     2513   node             R vscode.lock\n6440     31781  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n6440     31781  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n6440     31781  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n6440     31781  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n6440     31781  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n6440     31781  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n6440     31781  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n6440     31781  node             R vscode.lock\n6562     2526   node             R proc/12596/cmdline\n6562     2526   node             R 12596/cmdline\n6562     2526   node             R cmdline\n6565     2526   node             R proc/34120/cmdline\n6565     2526   node             R 34120/cmdline\n6565     2526   node             R cmdline\n6565     2526   node             R proc/4025/cmdline\n6565     2526   node             R 4025/cmdline\n6565     2526   node             R cmdline\n6565     2526   node             R proc/11279/cmdline\n6565     2526   node             R 11279/cmdline\n6565     2526   node             R cmdline\n6764     2526   node             R proc/12596/cmdline\n6764     2526   node             R 12596/cmdline\n6764     2526   node             R cmdline\n6768     2526   node             R proc/34120/cmdline\n6768     2526   node             R 34120/cmdline\n6768     2526   node             R cmdline\n6768     2526   node             R proc/4025/cmdline\n6768     2526   node             R 4025/cmdline\n6768     2526   node             R cmdline\n6768     2526   node             R proc/11279/cmdline\n6768     2526   node             R 11279/cmdline\n6768     2526   node             R cmdline\n6776     32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n6776     32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n6776     32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n6776     32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n6776     32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n6776     32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n6776     32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n6776     32362  node             R vscode.lock\n6776     32362  node             R home\n6776     32362  node             R home/yunwei\n6776     32362  node             R yunwei\n6776     32362  node             R home/yunwei/.vscode-server\n6776     32362  node             R yunwei/.vscode-server\n6776     32362  node             R .vscode-server\n6776     32362  node             R home/yunwei/.vscode-server/data\n6776     32362  node             R yunwei/.vscode-server/data\n6776     32362  node             R .vscode-server/data\n6776     32362  node             R data\n6776     32362  node             R home/yunwei/.vscode-server/data/User\n6776     32362  node             R yunwei/.vscode-server/data/User\n6776     32362  node             R .vscode-server/data/User\n6776     32362  node             R data/User\n6776     32362  node             R User\n6776     32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage\n6776     32362  node             R yunwei/.vscode-server/data/User/workspaceStorage\n6776     32362  node             R .vscode-server/data/User/workspaceStorage\n6776     32362  node             R data/User/workspaceStorage\n6776     32362  node             R User/workspaceStorage\n6776     32362  node             R workspaceStorage\n6776     32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n6776     32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n6776     32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n6776     32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n6776     32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n6776     32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n6776     32362  node             R 683061573fc2bafa947b4d87342b0cd1\n6776     32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n6776     32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n6776     32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n6776     32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n6776     32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n6776     32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n6776     32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n6776     32362  node             R vscode.lock\n6776     32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n6776     32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n6776     32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n6776     32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n6776     32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n6776     32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n6776     32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n6776     32362  node             R vscode.lock\n6776     32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n6776     32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n6776     32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n6776     32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n6776     32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n6776     32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n6776     32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n6776     32362  node             R vscode.lock\n6966     2526   node             R proc/12596/cmdline\n6966     2526   node             R 12596/cmdline\n6966     2526   node             R cmdline\n6970     2526   node             R proc/34120/cmdline\n6970     2526   node             R 34120/cmdline\n6970     2526   node             R cmdline\n6970     2526   node             R proc/4025/cmdline\n6970     2526   node             R 4025/cmdline\n6970     2526   node             R cmdline\n6970     2526   node             R proc/11279/cmdline\n6970     2526   node             R 11279/cmdline\n6970     2526   node             R cmdline\n7167     2526   node             R proc/12596/cmdline\n7167     2526   node             R 12596/cmdline\n7167     2526   node             R cmdline\n7171     2526   node             R proc/34120/cmdline\n7171     2526   node             R 34120/cmdline\n7171     2526   node             R cmdline\n7171     2526   node             R proc/4025/cmdline\n7171     2526   node             R 4025/cmdline\n7171     2526   node             R cmdline\n7171     2526   node             R proc/11279/cmdline\n7171     2526   node             R 11279/cmdline\n7171     2526   node             R cmdline\n7200     31770  node             R proc/meminfo\n7212     31770  node             R meminfo\n7212     31770  node             R home/yunwei/.vscode/c_cpp_properties.json\n7212     31770  node             R yunwei/.vscode/c_cpp_properties.json\n7212     31770  node             R .vscode/c_cpp_properties.json\n7212     31770  node             R c_cpp_properties.json\n7369     2526   node             R proc/12596/cmdline\n7369     2526   node             R 12596/cmdline\n7369     2526   node             R cmdline\n7372     2526   node             R proc/34120/cmdline\n7372     2526   node             R 34120/cmdline\n7372     2526   node             R cmdline\n7373     2526   node             R proc/4025/cmdline\n7373     2526   node             R 4025/cmdline\n7373     2526   node             R cmdline\n7373     2526   node             R proc/11279/cmdline\n7373     2526   node             R 11279/cmdline\n7373     2526   node             R cmdline\n7440     31770  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n7440     31770  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n7440     31770  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n7440     31770  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n7440     31770  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n7440     31770  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n7440     31770  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n7440     31770  node             R vscode.lock\n7441     31770  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n7441     31770  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n7441     31770  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n7441     31770  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n7441     31770  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n7441     31770  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n7441     31770  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n7441     31770  node             R vscode.lock\n7441     31781  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n7441     31781  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n7441     31781  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n7441     31781  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n7441     31781  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n7441     31781  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n7441     31781  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n7441     31781  node             R vscode.lock\n7441     2513   node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n7441     2513   node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n7441     2513   node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n7441     2513   node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n7441     2513   node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n7441     2513   node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n7441     2513   node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n7441     2513   node             R vscode.lock\n7570     2526   node             R proc/12596/cmdline\n7570     2526   node             R 12596/cmdline\n7570     2526   node             R cmdline\n7574     2526   node             R proc/34120/cmdline\n7574     2526   node             R 34120/cmdline\n7574     2526   node             R cmdline\n7574     2526   node             R proc/4025/cmdline\n7574     2526   node             R 4025/cmdline\n7574     2526   node             R cmdline\n7574     2526   node             R proc/11279/cmdline\n7574     2526   node             R 11279/cmdline\n7574     2526   node             R cmdline\n7770     2526   node             R proc/12596/cmdline\n7770     2526   node             R 12596/cmdline\n7770     2526   node             R cmdline\n7774     32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n7774     32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n7774     32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n7774     32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n7774     32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n7774     32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n7774     32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n7774     32362  node             R vscode.lock\n7774     32362  node             R home\n7774     32362  node             R home/yunwei\n7774     32362  node             R yunwei\n7774     32362  node             R home/yunwei/.vscode-server\n7774     32362  node             R yunwei/.vscode-server\n7774     32362  node             R .vscode-server\n7774     32362  node             R home/yunwei/.vscode-server/data\n7774     32362  node             R yunwei/.vscode-server/data\n7774     32362  node             R .vscode-server/data\n7774     32362  node             R data\n7774     32362  node             R home/yunwei/.vscode-server/data/User\n7774     32362  node             R yunwei/.vscode-server/data/User\n7774     32362  node             R .vscode-server/data/User\n7774     32362  node             R data/User\n7774     32362  node             R User\n7774     32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage\n7774     32362  node             R yunwei/.vscode-server/data/User/workspaceStorage\n7774     32362  node             R .vscode-server/data/User/workspaceStorage\n7774     32362  node             R data/User/workspaceStorage\n7774     32362  node             R User/workspaceStorage\n7774     32362  node             R workspaceStorage\n7774     32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n7774     32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n7774     32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n7774     32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n7774     32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n7774     32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n7774     32362  node             R 683061573fc2bafa947b4d87342b0cd1\n7774     32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n7774     32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n7774     32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n7774     32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n7774     32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n7774     32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n7774     32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n7774     32362  node             R vscode.lock\n7774     32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n7774     32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n7774     32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n7774     32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n7774     32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n7774     32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n7774     32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n7774     32362  node             R vscode.lock\n7774     32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n7774     32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n7774     32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n7774     32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n7774     32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n7774     32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n7774     32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n7774     32362  node             R vscode.lock\n7774     2526   node             R proc/34120/cmdline\n7774     2526   node             R 34120/cmdline\n7774     2526   node             R cmdline\n7774     2526   node             R proc/4025/cmdline\n7774     2526   node             R 4025/cmdline\n7774     2526   node             R cmdline\n7774     2526   node             R proc/11279/cmdline\n7774     2526   node             R 11279/cmdline\n7774     2526   node             R cmdline\n7973     2526   node             R proc/12596/cmdline\n7973     2526   node             R 12596/cmdline\n7973     2526   node             R cmdline\n7976     2526   node             R proc/34120/cmdline\n7976     2526   node             R 34120/cmdline\n7976     2526   node             R cmdline\n7976     2526   node             R proc/4025/cmdline\n7976     2526   node             R 4025/cmdline\n7976     2526   node             R cmdline\n7976     2526   node             R proc/11279/cmdline\n7976     2526   node             R 11279/cmdline\n7976     2526   node             R cmdline\n8177     2526   node             R proc/12596/cmdline\n8177     2526   node             R 12596/cmdline\n8177     2526   node             R cmdline\n8177     2526   node             R proc/34120/cmdline\n8177     2526   node             R 34120/cmdline\n8177     2526   node             R cmdline\n8177     2526   node             R proc/4025/cmdline\n8177     2526   node             R 4025/cmdline\n8177     2526   node             R cmdline\n8177     2526   node             R proc/11279/cmdline\n8177     2526   node             R 11279/cmdline\n8177     2526   node             R cmdline\n8380     2526   node             R proc/12596/cmdline\n8380     2526   node             R 12596/cmdline\n8380     2526   node             R cmdline\n8380     2526   node             R proc/34120/cmdline\n8380     2526   node             R 34120/cmdline\n8380     2526   node             R cmdline\n8380     2526   node             R proc/4025/cmdline\n8380     2526   node             R 4025/cmdline\n8380     2526   node             R cmdline\n8380     2526   node             R proc/11279/cmdline\n8380     2526   node             R 11279/cmdline\n8380     2526   node             R cmdline\n8444     31770  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n8444     31770  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n8444     31770  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n8444     31770  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n8444     31770  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n8444     31770  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n8444     31770  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n8444     31770  node             R vscode.lock\n8444     31770  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n8444     31770  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n8444     31770  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n8444     31770  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n8444     31770  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n8444     31770  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n8444     31770  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n8444     31770  node             R vscode.lock\n8444     2513   node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n8444     2513   node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n8444     2513   node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n8444     2513   node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n8444     2513   node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n8444     2513   node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n8444     2513   node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n8444     2513   node             R vscode.lock\n8444     31781  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n8444     31781  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n8444     31781  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n8444     31781  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n8444     31781  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n8444     31781  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n8444     31781  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n8444     31781  node             R vscode.lock\n8583     2526   node             R proc/12596/cmdline\n8583     2526   node             R 12596/cmdline\n8583     2526   node             R cmdline\n8584     2526   node             R proc/34120/cmdline\n8584     2526   node             R 34120/cmdline\n8584     2526   node             R cmdline\n8584     2526   node             R proc/4025/cmdline\n8584     2526   node             R 4025/cmdline\n8584     2526   node             R cmdline\n8584     2526   node             R proc/11279/cmdline\n8584     2526   node             R 11279/cmdline\n8584     2526   node             R cmdline\n8785     32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n8785     32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n8785     32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n8785     32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n8785     32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n8785     32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n8785     32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n8785     32362  node             R vscode.lock\n8785     32362  node             R home\n8785     32362  node             R home/yunwei\n8785     32362  node             R yunwei\n8785     32362  node             R home/yunwei/.vscode-server\n8785     32362  node             R yunwei/.vscode-server\n8785     32362  node             R .vscode-server\n8785     32362  node             R home/yunwei/.vscode-server/data\n8785     32362  node             R yunwei/.vscode-server/data\n8785     32362  node             R .vscode-server/data\n8785     32362  node             R data\n8785     32362  node             R home/yunwei/.vscode-server/data/User\n8785     32362  node             R yunwei/.vscode-server/data/User\n8785     32362  node             R .vscode-server/data/User\n8785     32362  node             R data/User\n8785     32362  node             R User\n8785     32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage\n8785     32362  node             R yunwei/.vscode-server/data/User/workspaceStorage\n8785     32362  node             R .vscode-server/data/User/workspaceStorage\n8785     32362  node             R data/User/workspaceStorage\n8785     32362  node             R User/workspaceStorage\n8785     32362  node             R workspaceStorage\n8785     32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n8785     32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n8785     32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n8785     32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n8785     32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n8785     32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n8785     32362  node             R 683061573fc2bafa947b4d87342b0cd1\n8785     32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n8785     32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n8785     32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n8785     32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n8785     32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n8785     32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n8785     32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n8785     32362  node             R vscode.lock\n8785     32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n8785     32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n8785     32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n8785     32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n8785     32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n8785     32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n8785     32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n8785     32362  node             R vscode.lock\n8785     32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n8785     32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n8785     32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n8785     32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n8785     32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n8785     32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n8785     32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n8785     32362  node             R vscode.lock\n8785     2526   node             R proc/12596/cmdline\n8785     2526   node             R 12596/cmdline\n8785     2526   node             R cmdline\n8785     2526   node             R proc/34120/cmdline\n8785     2526   node             R 34120/cmdline\n8785     2526   node             R cmdline\n8785     2526   node             R proc/4025/cmdline\n8785     2526   node             R 4025/cmdline\n8785     2526   node             R cmdline\n8785     2526   node             R proc/11279/cmdline\n8785     2526   node             R 11279/cmdline\n8785     2526   node             R cmdline\n8986     2526   node             R proc/12596/cmdline\n8986     2526   node             R 12596/cmdline\n8986     2526   node             R cmdline\n8986     2526   node             R proc/34120/cmdline\n8986     2526   node             R 34120/cmdline\n8986     2526   node             R cmdline\n8986     2526   node             R proc/4025/cmdline\n8986     2526   node             R 4025/cmdline\n8986     2526   node             R cmdline\n8986     2526   node             R proc/11279/cmdline\n8986     2526   node             R 11279/cmdline\n8986     2526   node             R cmdline\n9189     2526   node             R proc/12596/cmdline\n9189     2526   node             R 12596/cmdline\n9189     2526   node             R cmdline\n9189     2526   node             R proc/34120/cmdline\n9189     2526   node             R 34120/cmdline\n9189     2526   node             R cmdline\n9189     2526   node             R proc/4025/cmdline\n9189     2526   node             R 4025/cmdline\n9189     2526   node             R cmdline\n9189     2526   node             R proc/11279/cmdline\n9189     2526   node             R 11279/cmdline\n9189     2526   node             R cmdline\n9391     2526   node             R proc/12596/cmdline\n9391     2526   node             R 12596/cmdline\n9391     2526   node             R cmdline\n9391     2526   node             R proc/34120/cmdline\n9391     2526   node             R 34120/cmdline\n9391     2526   node             R cmdline\n9391     2526   node             R proc/4025/cmdline\n9391     2526   node             R 4025/cmdline\n9391     2526   node             R cmdline\n9391     2526   node             R proc/11279/cmdline\n9391     2526   node             R 11279/cmdline\n9391     2526   node             R cmdline\n9447     31770  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n9447     31770  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n9447     31770  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n9447     31770  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n9447     31770  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n9447     31770  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n9447     31770  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n9447     31770  node             R vscode.lock\n9448     31770  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n9448     31770  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n9448     31770  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n9448     31770  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n9448     31770  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n9448     31770  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n9448     31770  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n9448     31770  node             R vscode.lock\n9463     2513   node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n9463     2513   node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n9463     2513   node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n9463     2513   node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n9463     2513   node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n9463     2513   node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n9463     2513   node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n9463     2513   node             R vscode.lock\n9463     31781  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n9463     31781  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n9463     31781  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n9463     31781  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n9463     31781  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n9463     31781  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n9463     31781  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n9463     31781  node             R vscode.lock\n9594     2526   node             R proc/12596/cmdline\n9594     2526   node             R 12596/cmdline\n9594     2526   node             R cmdline\n9594     2526   node             R proc/34120/cmdline\n9594     2526   node             R 34120/cmdline\n9594     2526   node             R cmdline\n9594     2526   node             R proc/4025/cmdline\n9594     2526   node             R 4025/cmdline\n9594     2526   node             R cmdline\n9594     2526   node             R proc/11279/cmdline\n9594     2526   node             R 11279/cmdline\n9594     2526   node             R cmdline\n9661     578    vmtoolsd         R usr/lib/x86_64-linux-gnu/open-vm-tools/componentMgr/saltMinion/\n9675     578    vmtoolsd         R lib/x86_64-linux-gnu/open-vm-tools/componentMgr/saltMinion/svtm\n9675     578    vmtoolsd         R x86_64-linux-gnu/open-vm-tools/componentMgr/saltMinion/svtminio\n9675     578    vmtoolsd         R open-vm-tools/componentMgr/saltMinion/svtminion.sh\n9675     578    vmtoolsd         R componentMgr/saltMinion/svtminion.sh\n9675     578    vmtoolsd         R saltMinion/svtminion.sh\n9675     578    vmtoolsd         R svtminion.sh\n9704     31770  node             R proc/meminfo\n9704     31770  node             R meminfo\n9705     31770  node             R home/yunwei/.vscode/c_cpp_properties.json\n9705     31770  node             R yunwei/.vscode/c_cpp_properties.json\n9705     31770  node             R .vscode/c_cpp_properties.json\n9705     31770  node             R c_cpp_properties.json\n9735     578    vmtoolsd         R etc/vmware-tools/tools-global.conf\n9735     578    vmtoolsd         R vmware-tools/tools-global.conf\n9735     578    vmtoolsd         R tools-global.conf\n9735     578    vmtoolsd         R etc/vmware-tools/tools.conf\n9735     578    vmtoolsd         R vmware-tools/tools.conf\n9735     578    vmtoolsd         R tools.conf\n9794     2526   node             R proc/12596/cmdline\n9811     2526   node             R 12596/cmdline\n9811     2526   node             R cmdline\n9812     32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n9813     32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n9813     32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n9813     32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n9813     32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n9813     32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n9813     32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n9813     32362  node             R vscode.lock\n9813     32362  node             R home\n9813     32362  node             R home/yunwei\n9813     32362  node             R yunwei\n9813     32362  node             R home/yunwei/.vscode-server\n9813     32362  node             R yunwei/.vscode-server\n9813     32362  node             R .vscode-server\n9813     32362  node             R home/yunwei/.vscode-server/data\n9813     32362  node             R yunwei/.vscode-server/data\n9813     32362  node             R .vscode-server/data\n9813     32362  node             R data\n9813     32362  node             R home/yunwei/.vscode-server/data/User\n9813     32362  node             R yunwei/.vscode-server/data/User\n9813     32362  node             R .vscode-server/data/User\n9813     32362  node             R data/User\n9813     32362  node             R User\n9813     32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage\n9813     32362  node             R yunwei/.vscode-server/data/User/workspaceStorage\n9813     32362  node             R .vscode-server/data/User/workspaceStorage\n9813     32362  node             R data/User/workspaceStorage\n9813     32362  node             R User/workspaceStorage\n9813     32362  node             R workspaceStorage\n9813     32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n9813     32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n9813     32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n9813     32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n9813     32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n9813     32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n9813     32362  node             R 683061573fc2bafa947b4d87342b0cd1\n9813     32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n9813     32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n9813     32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n9813     32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n9813     32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n9813     32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n9813     32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n9813     32362  node             R vscode.lock\n9813     32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n9813     32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n9813     32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n9813     32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n9813     32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n9813     32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n9813     32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n9813     32362  node             R vscode.lock\n9813     32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n9813     32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n9813     32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n9813     32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n9813     32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n9813     32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n9813     32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n9813     32362  node             R vscode.lock\n9813     2526   node             R proc/34120/cmdline\n9813     2526   node             R 34120/cmdline\n9813     2526   node             R cmdline\n9813     2526   node             R proc/4025/cmdline\n9813     2526   node             R 4025/cmdline\n9813     2526   node             R cmdline\n9813     2526   node             R proc/11279/cmdline\n9813     2526   node             R 11279/cmdline\n9813     2526   node             R cmdline\n9996     2526   node             R proc/12596/cmdline\n9996     2526   node             R 12596/cmdline\n9996     2526   node             R cmdline\n9996     869    irqbalance       R proc/interrupts\n9996     869    irqbalance       R interrupts\n9996     869    irqbalance       R proc/stat\n9996     869    irqbalance       R stat\n10014    2526   node             R proc/34120/cmdline\n10015    2526   node             R 34120/cmdline\n10015    2526   node             R cmdline\n10015    2526   node             R proc/4025/cmdline\n10015    2526   node             R 4025/cmdline\n10015    2526   node             R cmdline\n10015    2526   node             R proc/11279/cmdline\n10015    2526   node             R 11279/cmdline\n10015    2526   node             R cmdline\n10196    2526   node             R proc/12596/cmdline\n10196    2526   node             R 12596/cmdline\n10196    2526   node             R cmdline\n10218    2526   node             R proc/34120/cmdline\n10218    2526   node             R 34120/cmdline\n10218    2526   node             R cmdline\n10218    2526   node             R proc/4025/cmdline\n10218    2526   node             R 4025/cmdline\n10218    2526   node             R cmdline\n10218    2526   node             R proc/11279/cmdline\n10218    2526   node             R 11279/cmdline\n10218    2526   node             R cmdline\n10399    2526   node             R proc/12596/cmdline\n10400    2526   node             R 12596/cmdline\n10400    2526   node             R cmdline\n10419    2526   node             R proc/34120/cmdline\n10419    2526   node             R 34120/cmdline\n10419    2526   node             R cmdline\n10419    2526   node             R proc/4025/cmdline\n10419    2526   node             R 4025/cmdline\n10419    2526   node             R cmdline\n10419    2526   node             R proc/11279/cmdline\n10419    2526   node             R 11279/cmdline\n10419    2526   node             R cmdline\n10448    31770  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n10448    31770  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n10448    31770  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n10448    31770  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n10448    31770  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n10448    31770  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n10448    31770  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n10448    31770  node             R vscode.lock\n10449    31770  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n10449    31770  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n10449    31770  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n10449    31770  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n10449    31770  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n10449    31770  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n10449    31770  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n10449    31770  node             R vscode.lock\n10449    2513   node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n10449    2513   node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n10449    2513   node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n10449    2513   node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n10449    2513   node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n10449    2513   node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n10449    2513   node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n10449    2513   node             R vscode.lock\n10449    31781  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n10449    31781  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n10449    31781  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n10449    31781  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n10449    31781  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n10449    31781  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n10449    31781  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n10449    31781  node             R vscode.lock\n10602    2526   node             R proc/12596/cmdline\n10602    2526   node             R 12596/cmdline\n10602    2526   node             R cmdline\n10623    2526   node             R proc/34120/cmdline\n10623    2526   node             R 34120/cmdline\n10623    2526   node             R cmdline\n10623    2526   node             R proc/4025/cmdline\n10623    2526   node             R 4025/cmdline\n10623    2526   node             R cmdline\n10623    2526   node             R proc/11279/cmdline\n10623    2526   node             R 11279/cmdline\n10623    2526   node             R cmdline\n10806    2526   node             R proc/12596/cmdline\n10806    2526   node             R 12596/cmdline\n10806    2526   node             R cmdline\n10807    32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n10807    32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n10807    32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n10807    32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n10807    32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n10807    32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n10807    32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n10807    32362  node             R vscode.lock\n10807    32362  node             R home\n10807    32362  node             R home/yunwei\n10807    32362  node             R yunwei\n10807    32362  node             R home/yunwei/.vscode-server\n10807    32362  node             R yunwei/.vscode-server\n10807    32362  node             R .vscode-server\n10807    32362  node             R home/yunwei/.vscode-server/data\n10807    32362  node             R yunwei/.vscode-server/data\n10807    32362  node             R .vscode-server/data\n10807    32362  node             R data\n10807    32362  node             R home/yunwei/.vscode-server/data/User\n10807    32362  node             R yunwei/.vscode-server/data/User\n10807    32362  node             R .vscode-server/data/User\n10807    32362  node             R data/User\n10807    32362  node             R User\n10807    32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage\n10807    32362  node             R yunwei/.vscode-server/data/User/workspaceStorage\n10807    32362  node             R .vscode-server/data/User/workspaceStorage\n10807    32362  node             R data/User/workspaceStorage\n10807    32362  node             R User/workspaceStorage\n10807    32362  node             R workspaceStorage\n10807    32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n10807    32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n10807    32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n10807    32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n10807    32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n10807    32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n10807    32362  node             R 683061573fc2bafa947b4d87342b0cd1\n10807    32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n10807    32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n10807    32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n10807    32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n10807    32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n10807    32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n10807    32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n10807    32362  node             R vscode.lock\n10807    32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n10807    32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n10807    32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n10807    32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n10807    32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n10807    32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n10807    32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n10807    32362  node             R vscode.lock\n10807    32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n10807    32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n10807    32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n10807    32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n10807    32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n10807    32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n10807    32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n10807    32362  node             R vscode.lock\n10837    2526   node             R proc/34120/cmdline\n10837    2526   node             R 34120/cmdline\n10837    2526   node             R cmdline\n10837    2526   node             R proc/4025/cmdline\n10837    2526   node             R 4025/cmdline\n10837    2526   node             R cmdline\n10837    2526   node             R proc/11279/cmdline\n10837    2526   node             R 11279/cmdline\n10837    2526   node             R cmdline\n11007    2526   node             R proc/12596/cmdline\n11007    2526   node             R 12596/cmdline\n11007    2526   node             R cmdline\n11038    2526   node             R proc/34120/cmdline\n11038    2526   node             R 34120/cmdline\n11038    2526   node             R cmdline\n11038    2526   node             R proc/4025/cmdline\n11038    2526   node             R 4025/cmdline\n11038    2526   node             R cmdline\n11038    2526   node             R proc/11279/cmdline\n11038    2526   node             R 11279/cmdline\n11038    2526   node             R cmdline\n11209    2526   node             R proc/12596/cmdline\n11209    2526   node             R 12596/cmdline\n11209    2526   node             R cmdline\n11239    2526   node             R proc/34120/cmdline\n11239    2526   node             R 34120/cmdline\n11239    2526   node             R cmdline\n11239    2526   node             R proc/4025/cmdline\n11239    2526   node             R 4025/cmdline\n11239    2526   node             R cmdline\n11239    2526   node             R proc/11279/cmdline\n11239    2526   node             R 11279/cmdline\n11239    2526   node             R cmdline\n11423    2526   node             R proc/12596/cmdline\n11423    2526   node             R 12596/cmdline\n11423    2526   node             R cmdline\n11455    2526   node             R proc/34120/cmdline\n11455    2526   node             R 34120/cmdline\n11455    2526   node             R cmdline\n11455    2526   node             R proc/4025/cmdline\n11455    2526   node             R 4025/cmdline\n11455    2526   node             R cmdline\n11455    2526   node             R proc/11279/cmdline\n11455    2526   node             R 11279/cmdline\n11455    2526   node             R cmdline\n11456    31770  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n11456    31770  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n11456    31770  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n11456    31770  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n11456    31770  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n11456    31770  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n11456    31770  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n11456    31770  node             R vscode.lock\n11462    31770  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n11462    31770  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n11462    31770  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n11462    31770  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n11462    31770  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n11462    31770  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n11462    31770  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n11462    31770  node             R vscode.lock\n11462    31781  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n11462    31781  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n11462    31781  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n11462    31781  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n11462    31781  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n11462    31781  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n11462    31781  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n11462    31781  node             R vscode.lock\n11463    2513   node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n11463    2513   node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n11463    2513   node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n11463    2513   node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n11463    2513   node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n11463    2513   node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n11463    2513   node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n11463    2513   node             R vscode.lock\n11623    2526   node             R proc/12596/cmdline\n11623    2526   node             R 12596/cmdline\n11623    2526   node             R cmdline\n11670    2526   node             R proc/34120/cmdline\n11670    2526   node             R 34120/cmdline\n11670    2526   node             R cmdline\n11670    2526   node             R proc/4025/cmdline\n11670    2526   node             R 4025/cmdline\n11670    2526   node             R cmdline\n11670    2526   node             R proc/11279/cmdline\n11670    2526   node             R 11279/cmdline\n11670    2526   node             R cmdline\n11823    2526   node             R proc/12596/cmdline\n11823    2526   node             R 12596/cmdline\n11823    2526   node             R cmdline\n11841    32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n11841    32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n11841    32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n11841    32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n11841    32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n11841    32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n11841    32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n11841    32362  node             R vscode.lock\n11841    32362  node             R home\n11841    32362  node             R home/yunwei\n11841    32362  node             R yunwei\n11841    32362  node             R home/yunwei/.vscode-server\n11841    32362  node             R yunwei/.vscode-server\n11841    32362  node             R .vscode-server\n11841    32362  node             R home/yunwei/.vscode-server/data\n11841    32362  node             R yunwei/.vscode-server/data\n11841    32362  node             R .vscode-server/data\n11841    32362  node             R data\n11841    32362  node             R home/yunwei/.vscode-server/data/User\n11841    32362  node             R yunwei/.vscode-server/data/User\n11841    32362  node             R .vscode-server/data/User\n11841    32362  node             R data/User\n11841    32362  node             R User\n11841    32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage\n11841    32362  node             R yunwei/.vscode-server/data/User/workspaceStorage\n11841    32362  node             R .vscode-server/data/User/workspaceStorage\n11841    32362  node             R data/User/workspaceStorage\n11841    32362  node             R User/workspaceStorage\n11841    32362  node             R workspaceStorage\n11841    32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n11841    32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n11841    32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n11841    32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n11841    32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n11841    32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n11841    32362  node             R 683061573fc2bafa947b4d87342b0cd1\n11841    32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n11841    32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n11841    32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n11841    32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n11841    32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n11841    32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n11841    32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n11841    32362  node             R vscode.lock\n11841    32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n11841    32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n11841    32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n11841    32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n11841    32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n11841    32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n11841    32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n11841    32362  node             R vscode.lock\n11841    32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n11841    32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n11841    32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n11841    32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n11841    32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n11841    32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n11841    32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n11841    32362  node             R vscode.lock\n11870    2526   node             R proc/34120/cmdline\n11870    2526   node             R 34120/cmdline\n11870    2526   node             R cmdline\n11870    2526   node             R proc/4025/cmdline\n11870    2526   node             R 4025/cmdline\n11870    2526   node             R cmdline\n11870    2526   node             R proc/11279/cmdline\n11870    2526   node             R 11279/cmdline\n11870    2526   node             R cmdline\n12024    2526   node             R proc/12596/cmdline\n12024    2526   node             R 12596/cmdline\n12024    2526   node             R cmdline\n12071    2526   node             R proc/34120/cmdline\n12071    2526   node             R 34120/cmdline\n12071    2526   node             R cmdline\n12071    2526   node             R proc/4025/cmdline\n12071    2526   node             R 4025/cmdline\n12071    2526   node             R cmdline\n12071    2526   node             R proc/11279/cmdline\n12071    2526   node             R 11279/cmdline\n12071    2526   node             R cmdline\n12212    31770  node             R proc/meminfo\n12212    31770  node             R meminfo\n12213    31770  node             R home/yunwei/.vscode/c_cpp_properties.json\n12213    31770  node             R yunwei/.vscode/c_cpp_properties.json\n12213    31770  node             R .vscode/c_cpp_properties.json\n12213    31770  node             R c_cpp_properties.json\n12225    2526   node             R proc/12596/cmdline\n12225    2526   node             R 12596/cmdline\n12225    2526   node             R cmdline\n12271    2526   node             R proc/34120/cmdline\n12271    2526   node             R 34120/cmdline\n12271    2526   node             R cmdline\n12271    2526   node             R proc/4025/cmdline\n12271    2526   node             R 4025/cmdline\n12271    2526   node             R cmdline\n12271    2526   node             R proc/11279/cmdline\n12271    2526   node             R 11279/cmdline\n12271    2526   node             R cmdline\n12439    2526   node             R proc/12596/cmdline\n12439    2526   node             R 12596/cmdline\n12439    2526   node             R cmdline\n12470    31770  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n12470    31770  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n12470    31770  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n12470    31770  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n12470    31770  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n12470    31770  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n12470    31770  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n12470    31770  node             R vscode.lock\n12485    2526   node             R proc/34120/cmdline\n12485    2526   node             R 34120/cmdline\n12485    2526   node             R cmdline\n12486    2526   node             R proc/4025/cmdline\n12486    2526   node             R 4025/cmdline\n12486    2526   node             R cmdline\n12486    2526   node             R proc/11279/cmdline\n12486    2526   node             R 11279/cmdline\n12486    2526   node             R cmdline\n12486    31770  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n12486    31770  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n12486    31770  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n12486    31770  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n12486    31770  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n12486    31770  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n12486    31770  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n12486    31770  node             R vscode.lock\n12486    2513   node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n12486    2513   node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n12486    2513   node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n12486    2513   node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n12486    2513   node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n12486    2513   node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n12486    2513   node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n12486    2513   node             R vscode.lock\n12486    31781  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n12486    31781  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n12486    31781  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n12486    31781  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n12486    31781  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n12486    31781  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n12486    31781  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n12486    31781  node             R vscode.lock\n12643    2526   node             R proc/12596/cmdline\n12643    2526   node             R 12596/cmdline\n12643    2526   node             R cmdline\n12688    2526   node             R proc/34120/cmdline\n12688    2526   node             R 34120/cmdline\n12688    2526   node             R cmdline\n12689    2526   node             R proc/4025/cmdline\n12689    2526   node             R 4025/cmdline\n12689    2526   node             R cmdline\n12689    2526   node             R proc/11279/cmdline\n12689    2526   node             R 11279/cmdline\n12689    2526   node             R cmdline\n12843    2526   node             R proc/12596/cmdline\n12843    2526   node             R 12596/cmdline\n12843    2526   node             R cmdline\n12844    32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n12844    32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n12844    32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n12844    32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n12844    32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n12844    32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n12844    32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n12844    32362  node             R vscode.lock\n12844    32362  node             R home\n12844    32362  node             R home/yunwei\n12844    32362  node             R yunwei\n12844    32362  node             R home/yunwei/.vscode-server\n12844    32362  node             R yunwei/.vscode-server\n12844    32362  node             R .vscode-server\n12844    32362  node             R home/yunwei/.vscode-server/data\n12844    32362  node             R yunwei/.vscode-server/data\n12844    32362  node             R .vscode-server/data\n12844    32362  node             R data\n12844    32362  node             R home/yunwei/.vscode-server/data/User\n12844    32362  node             R yunwei/.vscode-server/data/User\n12844    32362  node             R .vscode-server/data/User\n12844    32362  node             R data/User\n12844    32362  node             R User\n12844    32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage\n12844    32362  node             R yunwei/.vscode-server/data/User/workspaceStorage\n12844    32362  node             R .vscode-server/data/User/workspaceStorage\n12844    32362  node             R data/User/workspaceStorage\n12844    32362  node             R User/workspaceStorage\n12844    32362  node             R workspaceStorage\n12844    32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n12844    32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n12844    32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n12844    32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n12844    32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n12844    32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n12844    32362  node             R 683061573fc2bafa947b4d87342b0cd1\n12844    32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n12844    32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n12844    32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n12844    32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n12844    32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n12844    32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n12844    32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n12844    32362  node             R vscode.lock\n12844    32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n12844    32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n12844    32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n12844    32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n12844    32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n12844    32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n12844    32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n12844    32362  node             R vscode.lock\n12844    32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n12844    32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n12844    32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n12844    32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n12844    32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n12844    32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n12844    32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n12844    32362  node             R vscode.lock\n12889    2526   node             R proc/34120/cmdline\n12889    2526   node             R 34120/cmdline\n12889    2526   node             R cmdline\n12889    2526   node             R proc/4025/cmdline\n12889    2526   node             R 4025/cmdline\n12889    2526   node             R cmdline\n12889    2526   node             R proc/11279/cmdline\n12889    2526   node             R 11279/cmdline\n12889    2526   node             R cmdline\n13044    2526   node             R proc/12596/cmdline\n13044    2526   node             R 12596/cmdline\n13044    2526   node             R cmdline\n13092    2526   node             R proc/34120/cmdline\n13092    2526   node             R 34120/cmdline\n13092    2526   node             R cmdline\n13092    2526   node             R proc/4025/cmdline\n13092    2526   node             R 4025/cmdline\n13092    2526   node             R cmdline\n13092    2526   node             R proc/11279/cmdline\n13092    2526   node             R 11279/cmdline\n13092    2526   node             R cmdline\n13244    2526   node             R proc/12596/cmdline\n13244    2526   node             R 12596/cmdline\n13244    2526   node             R cmdline\n13293    578    vmtoolsd         R etc/mtab\n13293    578    vmtoolsd         R mtab\n13293    578    vmtoolsd         R proc/self/mounts\n13293    578    vmtoolsd         R self/mounts\n13293    578    vmtoolsd         R 578\n13293    578    vmtoolsd         R mounts\n13293    578    vmtoolsd         R proc/devices\n13293    578    vmtoolsd         R devices\n13293    578    vmtoolsd         R dev\n13293    578    vmtoolsd         R dev/sda2\n13293    578    vmtoolsd         R sda2\n13293    578    vmtoolsd         R sys/class/block/sda2/slaves\n13293    578    vmtoolsd         R class/block/sda2/slaves\n13293    578    vmtoolsd         R block/sda2/slaves\n13293    578    vmtoolsd         R sda2/slaves\n13293    578    vmtoolsd         R devices/pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:0/bl\n13293    578    vmtoolsd         R pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:0/block/sda/\n13293    578    vmtoolsd         R 0000:00:10.0/host32/target32:0:0/32:0:0:0/block/sda/sda2\n13293    578    vmtoolsd         R host32/target32:0:0/32:0:0:0/block/sda/sda2\n13293    578    vmtoolsd         R target32:0:0/32:0:0:0/block/sda/sda2\n13293    578    vmtoolsd         R 32:0:0:0/block/sda/sda2\n13293    578    vmtoolsd         R block/sda/sda2\n13293    578    vmtoolsd         R sda/sda2\n13293    578    vmtoolsd         R sda2\n13293    578    vmtoolsd         R slaves\n13293    578    vmtoolsd         R sys/class/block/sda2/device\n13293    578    vmtoolsd         R class/block/sda2/device\n13293    578    vmtoolsd         R block/sda2/device\n13293    578    vmtoolsd         R sda2/device\n13293    578    vmtoolsd         R devices/pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:0/bl\n13293    578    vmtoolsd         R pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:0/block/sda/\n13293    578    vmtoolsd         R 0000:00:10.0/host32/target32:0:0/32:0:0:0/block/sda/sda2\n13293    578    vmtoolsd         R host32/target32:0:0/32:0:0:0/block/sda/sda2\n13293    578    vmtoolsd         R target32:0:0/32:0:0:0/block/sda/sda2\n13293    578    vmtoolsd         R 32:0:0:0/block/sda/sda2\n13293    578    vmtoolsd         R block/sda/sda2\n13293    578    vmtoolsd         R sda/sda2\n13293    578    vmtoolsd         R sda2\n13293    578    vmtoolsd         R device\n13293    578    vmtoolsd         R sys/class/block/sda2/../device\n13293    578    vmtoolsd         R class/block/sda2/../device\n13293    578    vmtoolsd         R block/sda2/../device\n13293    578    vmtoolsd         R sda2/../device\n13293    578    vmtoolsd         R devices/pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:0/bl\n13293    578    vmtoolsd         R pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:0/block/sda/\n13293    578    vmtoolsd         R 0000:00:10.0/host32/target32:0:0/32:0:0:0/block/sda/sda2\n13293    578    vmtoolsd         R host32/target32:0:0/32:0:0:0/block/sda/sda2\n13293    578    vmtoolsd         R target32:0:0/32:0:0:0/block/sda/sda2\n13293    578    vmtoolsd         R 32:0:0:0/block/sda/sda2\n13293    578    vmtoolsd         R block/sda/sda2\n13293    578    vmtoolsd         R sda/sda2\n13293    578    vmtoolsd         R sda2\n13293    578    vmtoolsd         R device\n13293    578    vmtoolsd         R 32:0:0:0\n13293    578    vmtoolsd         R sys\n13293    578    vmtoolsd         R sys/class\n13293    578    vmtoolsd         R class\n13293    578    vmtoolsd         R sys/class/block\n13293    578    vmtoolsd         R class/block\n13293    578    vmtoolsd         R block\n13293    578    vmtoolsd         R sys/class/block/sda2\n13293    578    vmtoolsd         R class/block/sda2\n13293    578    vmtoolsd         R block/sda2\n13293    578    vmtoolsd         R sda2\n13293    578    vmtoolsd         R sys/devices\n13293    578    vmtoolsd         R devices\n13293    578    vmtoolsd         R sys/devices/pci0000:00\n13293    578    vmtoolsd         R devices/pci0000:00\n13293    578    vmtoolsd         R pci0000:00\n13293    578    vmtoolsd         R sys/devices/pci0000:00/0000:00:10.0\n13293    578    vmtoolsd         R devices/pci0000:00/0000:00:10.0\n13293    578    vmtoolsd         R pci0000:00/0000:00:10.0\n13293    578    vmtoolsd         R 0000:00:10.0\n13293    578    vmtoolsd         R sys/devices/pci0000:00/0000:00:10.0/host32\n13293    578    vmtoolsd         R devices/pci0000:00/0000:00:10.0/host32\n13293    578    vmtoolsd         R pci0000:00/0000:00:10.0/host32\n13293    578    vmtoolsd         R 0000:00:10.0/host32\n13293    578    vmtoolsd         R host32\n13293    578    vmtoolsd         R sys/devices/pci0000:00/0000:00:10.0/host32/target32:0:0\n13293    578    vmtoolsd         R devices/pci0000:00/0000:00:10.0/host32/target32:0:0\n13293    578    vmtoolsd         R pci0000:00/0000:00:10.0/host32/target32:0:0\n13293    578    vmtoolsd         R 0000:00:10.0/host32/target32:0:0\n13293    578    vmtoolsd         R host32/target32:0:0\n13293    578    vmtoolsd         R target32:0:0\n13293    578    vmtoolsd         R sys/devices/pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:\n13293    578    vmtoolsd         R devices/pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:0\n13293    578    vmtoolsd         R pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:0\n13293    578    vmtoolsd         R 0000:00:10.0/host32/target32:0:0/32:0:0:0\n13293    578    vmtoolsd         R host32/target32:0:0/32:0:0:0\n13293    578    vmtoolsd         R target32:0:0/32:0:0:0\n13293    578    vmtoolsd         R 32:0:0:0\n13293    578    vmtoolsd         R sys/devices/pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:\n13293    578    vmtoolsd         R devices/pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:0/bl\n13293    578    vmtoolsd         R pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:0/block\n13293    578    vmtoolsd         R 0000:00:10.0/host32/target32:0:0/32:0:0:0/block\n13293    578    vmtoolsd         R host32/target32:0:0/32:0:0:0/block\n13293    578    vmtoolsd         R target32:0:0/32:0:0:0/block\n13293    578    vmtoolsd         R 32:0:0:0/block\n13293    578    vmtoolsd         R block\n13293    578    vmtoolsd         R sys/devices/pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:\n13293    578    vmtoolsd         R devices/pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:0/bl\n13293    578    vmtoolsd         R pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:0/block/sda\n13293    578    vmtoolsd         R 0000:00:10.0/host32/target32:0:0/32:0:0:0/block/sda\n13293    578    vmtoolsd         R host32/target32:0:0/32:0:0:0/block/sda\n13293    578    vmtoolsd         R target32:0:0/32:0:0:0/block/sda\n13293    578    vmtoolsd         R 32:0:0:0/block/sda\n13293    578    vmtoolsd         R block/sda\n13293    578    vmtoolsd         R sda\n13293    578    vmtoolsd         R sys/devices/pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:\n13293    578    vmtoolsd         R devices/pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:0/bl\n13293    578    vmtoolsd         R pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:0/block/sda/\n13293    578    vmtoolsd         R 0000:00:10.0/host32/target32:0:0/32:0:0:0/block/sda/sda2\n13293    578    vmtoolsd         R host32/target32:0:0/32:0:0:0/block/sda/sda2\n13293    578    vmtoolsd         R target32:0:0/32:0:0:0/block/sda/sda2\n13293    578    vmtoolsd         R 32:0:0:0/block/sda/sda2\n13293    578    vmtoolsd         R block/sda/sda2\n13293    578    vmtoolsd         R sda/sda2\n13293    578    vmtoolsd         R sda2\n13293    578    vmtoolsd         R sys/devices/pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:\n13293    578    vmtoolsd         R devices/pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:0/bl\n13293    578    vmtoolsd         R pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:0/block/sda/\n13293    578    vmtoolsd         R 0000:00:10.0/host32/target32:0:0/32:0:0:0/block/sda/sda2/\n13293    578    vmtoolsd         R host32/target32:0:0/32:0:0:0/block/sda/sda2/\n13293    578    vmtoolsd         R target32:0:0/32:0:0:0/block/sda/sda2/\n13293    578    vmtoolsd         R 32:0:0:0/block/sda/sda2/\n13293    578    vmtoolsd         R block/sda/sda2/\n13293    578    vmtoolsd         R sda/sda2/\n13293    578    vmtoolsd         R sda2/\n13293    578    vmtoolsd         R sys/devices/pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:\n13293    578    vmtoolsd         R devices/pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:0/bl\n13293    578    vmtoolsd         R pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:0/block/sda/\n13293    578    vmtoolsd         R 0000:00:10.0/host32/target32:0:0/32:0:0:0/block/sda/device\n13293    578    vmtoolsd         R host32/target32:0:0/32:0:0:0/block/sda/device\n13293    578    vmtoolsd         R target32:0:0/32:0:0:0/block/sda/device\n13293    578    vmtoolsd         R 32:0:0:0/block/sda/device\n13293    578    vmtoolsd         R block/sda/device\n13293    578    vmtoolsd         R sda/device\n13293    578    vmtoolsd         R device\n13293    578    vmtoolsd         R sys/devices/pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:\n13293    578    vmtoolsd         R devices/pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:0\n13293    578    vmtoolsd         R pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:0\n13293    578    vmtoolsd         R 0000:00:10.0/host32/target32:0:0/32:0:0:0\n13293    578    vmtoolsd         R host32/target32:0:0/32:0:0:0\n13293    578    vmtoolsd         R target32:0:0/32:0:0:0\n13293    578    vmtoolsd         R 32:0:0:0\n13293    578    vmtoolsd         R sys/class/block/sda2/../device/../../../sas_port\n13293    578    vmtoolsd         R class/block/sda2/../device/../../../sas_port\n13293    578    vmtoolsd         R block/sda2/../device/../../../sas_port\n13293    578    vmtoolsd         R sda2/../device/../../../sas_port\n13293    578    vmtoolsd         R devices/pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:0/bl\n13293    578    vmtoolsd         R pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:0/block/sda/\n13293    578    vmtoolsd         R 0000:00:10.0/host32/target32:0:0/32:0:0:0/block/sda/sda2\n13293    578    vmtoolsd         R host32/target32:0:0/32:0:0:0/block/sda/sda2\n13293    578    vmtoolsd         R target32:0:0/32:0:0:0/block/sda/sda2\n13293    578    vmtoolsd         R 32:0:0:0/block/sda/sda2\n13293    578    vmtoolsd         R block/sda/sda2\n13293    578    vmtoolsd         R sda/sda2\n13293    578    vmtoolsd         R sda2\n13293    578    vmtoolsd         R device/../../../sas_port\n13293    578    vmtoolsd         R 32:0:0:0\n13293    578    vmtoolsd         R sas_port\n13293    578    vmtoolsd         R sys/class/block/sda2/../device/../../../class\n13293    578    vmtoolsd         R class/block/sda2/../device/../../../class\n13293    578    vmtoolsd         R block/sda2/../device/../../../class\n13293    578    vmtoolsd         R sda2/../device/../../../class\n13293    578    vmtoolsd         R devices/pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:0/bl\n13293    578    vmtoolsd         R pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:0/block/sda/\n13293    578    vmtoolsd         R 0000:00:10.0/host32/target32:0:0/32:0:0:0/block/sda/sda2\n13293    578    vmtoolsd         R host32/target32:0:0/32:0:0:0/block/sda/sda2\n13293    578    vmtoolsd         R target32:0:0/32:0:0:0/block/sda/sda2\n13293    578    vmtoolsd         R 32:0:0:0/block/sda/sda2\n13293    578    vmtoolsd         R block/sda/sda2\n13293    578    vmtoolsd         R sda/sda2\n13293    578    vmtoolsd         R sda2\n13293    578    vmtoolsd         R device/../../../class\n13293    578    vmtoolsd         R 32:0:0:0\n13293    578    vmtoolsd         R class\n13293    578    vmtoolsd         R sys/class/block/sda2/../device/../../../class\n13293    578    vmtoolsd         R class/block/sda2/../device/../../../class\n13293    578    vmtoolsd         R block/sda2/../device/../../../class\n13293    578    vmtoolsd         R sda2/../device/../../../class\n13293    578    vmtoolsd         R devices/pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:0/bl\n13293    578    vmtoolsd         R pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:0/block/sda/\n13293    578    vmtoolsd         R 0000:00:10.0/host32/target32:0:0/32:0:0:0/block/sda/sda2\n13293    578    vmtoolsd         R host32/target32:0:0/32:0:0:0/block/sda/sda2\n13293    578    vmtoolsd         R target32:0:0/32:0:0:0/block/sda/sda2\n13293    578    vmtoolsd         R 32:0:0:0/block/sda/sda2\n13293    578    vmtoolsd         R block/sda/sda2\n13293    578    vmtoolsd         R sda/sda2\n13293    578    vmtoolsd         R sda2\n13293    578    vmtoolsd         R device/../../../class\n13293    578    vmtoolsd         R 32:0:0:0\n13293    578    vmtoolsd         R class\n13293    578    vmtoolsd         R sys/class/block/sda2/../device/../../../label\n13293    578    vmtoolsd         R class/block/sda2/../device/../../../label\n13293    578    vmtoolsd         R block/sda2/../device/../../../label\n13293    578    vmtoolsd         R sda2/../device/../../../label\n13293    578    vmtoolsd         R devices/pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:0/bl\n13293    578    vmtoolsd         R pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:0/block/sda/\n13293    578    vmtoolsd         R 0000:00:10.0/host32/target32:0:0/32:0:0:0/block/sda/sda2\n13293    578    vmtoolsd         R host32/target32:0:0/32:0:0:0/block/sda/sda2\n13293    578    vmtoolsd         R target32:0:0/32:0:0:0/block/sda/sda2\n13293    578    vmtoolsd         R 32:0:0:0/block/sda/sda2\n13293    578    vmtoolsd         R block/sda/sda2\n13293    578    vmtoolsd         R sda/sda2\n13293    578    vmtoolsd         R sda2\n13293    578    vmtoolsd         R device/../../../label\n13293    578    vmtoolsd         R 32:0:0:0\n13293    578    vmtoolsd         R label\n13293    578    vmtoolsd         R sys\n13293    578    vmtoolsd         R sys/class\n13293    578    vmtoolsd         R class\n13293    578    vmtoolsd         R sys/class/block\n13293    578    vmtoolsd         R class/block\n13293    578    vmtoolsd         R block\n13293    578    vmtoolsd         R sys/class/block/sda2\n13293    578    vmtoolsd         R class/block/sda2\n13293    578    vmtoolsd         R block/sda2\n13293    578    vmtoolsd         R sda2\n13293    578    vmtoolsd         R sys/devices\n13293    578    vmtoolsd         R devices\n13293    578    vmtoolsd         R sys/devices/pci0000:00\n13293    578    vmtoolsd         R devices/pci0000:00\n13293    578    vmtoolsd         R pci0000:00\n13293    578    vmtoolsd         R sys/devices/pci0000:00/0000:00:10.0\n13293    578    vmtoolsd         R devices/pci0000:00/0000:00:10.0\n13293    578    vmtoolsd         R pci0000:00/0000:00:10.0\n13293    578    vmtoolsd         R 0000:00:10.0\n13293    578    vmtoolsd         R sys/devices/pci0000:00/0000:00:10.0/host32\n13293    578    vmtoolsd         R devices/pci0000:00/0000:00:10.0/host32\n13293    578    vmtoolsd         R pci0000:00/0000:00:10.0/host32\n13293    578    vmtoolsd         R 0000:00:10.0/host32\n13293    578    vmtoolsd         R host32\n13293    578    vmtoolsd         R sys/devices/pci0000:00/0000:00:10.0/host32/target32:0:0\n13293    578    vmtoolsd         R devices/pci0000:00/0000:00:10.0/host32/target32:0:0\n13293    578    vmtoolsd         R pci0000:00/0000:00:10.0/host32/target32:0:0\n13293    578    vmtoolsd         R 0000:00:10.0/host32/target32:0:0\n13293    578    vmtoolsd         R host32/target32:0:0\n13293    578    vmtoolsd         R target32:0:0\n13293    578    vmtoolsd         R sys/devices/pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:\n13293    578    vmtoolsd         R devices/pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:0\n13293    578    vmtoolsd         R pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:0\n13293    578    vmtoolsd         R 0000:00:10.0/host32/target32:0:0/32:0:0:0\n13293    578    vmtoolsd         R host32/target32:0:0/32:0:0:0\n13293    578    vmtoolsd         R target32:0:0/32:0:0:0\n13293    578    vmtoolsd         R 32:0:0:0\n13293    578    vmtoolsd         R sys/devices/pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:\n13293    578    vmtoolsd         R devices/pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:0/bl\n13293    578    vmtoolsd         R pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:0/block\n13293    578    vmtoolsd         R 0000:00:10.0/host32/target32:0:0/32:0:0:0/block\n13293    578    vmtoolsd         R host32/target32:0:0/32:0:0:0/block\n13293    578    vmtoolsd         R target32:0:0/32:0:0:0/block\n13293    578    vmtoolsd         R 32:0:0:0/block\n13293    578    vmtoolsd         R block\n13293    578    vmtoolsd         R sys/devices/pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:\n13293    578    vmtoolsd         R devices/pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:0/bl\n13293    578    vmtoolsd         R pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:0/block/sda\n13293    578    vmtoolsd         R 0000:00:10.0/host32/target32:0:0/32:0:0:0/block/sda\n13293    578    vmtoolsd         R host32/target32:0:0/32:0:0:0/block/sda\n13293    578    vmtoolsd         R target32:0:0/32:0:0:0/block/sda\n13293    578    vmtoolsd         R 32:0:0:0/block/sda\n13293    578    vmtoolsd         R block/sda\n13293    578    vmtoolsd         R sda\n13293    578    vmtoolsd         R sys/devices/pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:\n13293    578    vmtoolsd         R devices/pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:0/bl\n13293    578    vmtoolsd         R pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:0/block/sda/\n13293    578    vmtoolsd         R 0000:00:10.0/host32/target32:0:0/32:0:0:0/block/sda/sda2\n13293    578    vmtoolsd         R host32/target32:0:0/32:0:0:0/block/sda/sda2\n13293    578    vmtoolsd         R target32:0:0/32:0:0:0/block/sda/sda2\n13293    578    vmtoolsd         R 32:0:0:0/block/sda/sda2\n13293    578    vmtoolsd         R block/sda/sda2\n13293    578    vmtoolsd         R sda/sda2\n13293    578    vmtoolsd         R sda2\n13293    578    vmtoolsd         R sys/devices/pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:\n13293    578    vmtoolsd         R devices/pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:0/bl\n13293    578    vmtoolsd         R pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:0/block/sda/\n13293    578    vmtoolsd         R 0000:00:10.0/host32/target32:0:0/32:0:0:0/block/sda/sda2/\n13293    578    vmtoolsd         R host32/target32:0:0/32:0:0:0/block/sda/sda2/\n13293    578    vmtoolsd         R target32:0:0/32:0:0:0/block/sda/sda2/\n13293    578    vmtoolsd         R 32:0:0:0/block/sda/sda2/\n13293    578    vmtoolsd         R block/sda/sda2/\n13293    578    vmtoolsd         R sda/sda2/\n13293    578    vmtoolsd         R sda2/\n13293    578    vmtoolsd         R sys/devices/pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:\n13293    578    vmtoolsd         R devices/pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:0/bl\n13293    578    vmtoolsd         R pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:0/block/sda/\n13293    578    vmtoolsd         R 0000:00:10.0/host32/target32:0:0/32:0:0:0/block/sda/device\n13293    578    vmtoolsd         R host32/target32:0:0/32:0:0:0/block/sda/device\n13293    578    vmtoolsd         R target32:0:0/32:0:0:0/block/sda/device\n13293    578    vmtoolsd         R 32:0:0:0/block/sda/device\n13293    578    vmtoolsd         R block/sda/device\n13293    578    vmtoolsd         R sda/device\n13293    578    vmtoolsd         R device\n13293    578    vmtoolsd         R sys/devices/pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:\n13293    578    vmtoolsd         R devices/pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:0\n13293    578    vmtoolsd         R pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:0\n13293    578    vmtoolsd         R 0000:00:10.0/host32/target32:0:0/32:0:0:0\n13293    578    vmtoolsd         R host32/target32:0:0/32:0:0:0\n13293    578    vmtoolsd         R target32:0:0/32:0:0:0\n13293    578    vmtoolsd         R 32:0:0:0\n13293    578    vmtoolsd         R sys/devices/pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:\n13293    578    vmtoolsd         R devices/pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:0/\n13293    578    vmtoolsd         R pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:0/\n13293    578    vmtoolsd         R 0000:00:10.0/host32/target32:0:0/32:0:0:0/\n13293    578    vmtoolsd         R host32/target32:0:0/32:0:0:0/\n13293    578    vmtoolsd         R target32:0:0/32:0:0:0/\n13293    578    vmtoolsd         R 32:0:0:0/\n13294    578    vmtoolsd         R etc/resolv.conf\n13294    578    vmtoolsd         R resolv.conf\n13294    578    vmtoolsd         R run/systemd/resolve/stub-resolv.conf\n13294    578    vmtoolsd         R systemd/resolve/stub-resolv.conf\n13294    578    vmtoolsd         R resolve/stub-resolv.conf\n13294    578    vmtoolsd         R stub-resolv.conf\n13294    578    vmtoolsd         R etc\n13294    578    vmtoolsd         R etc/resolv.conf\n13294    578    vmtoolsd         R resolv.conf\n13294    578    vmtoolsd         R run\n13294    578    vmtoolsd         R run/systemd\n13294    578    vmtoolsd         R systemd\n13294    578    vmtoolsd         R run/systemd/resolve\n13294    578    vmtoolsd         R systemd/resolve\n13294    578    vmtoolsd         R resolve\n13294    578    vmtoolsd         R run/systemd/resolve/stub-resolv.conf\n13294    578    vmtoolsd         R systemd/resolve/stub-resolv.conf\n13294    578    vmtoolsd         R resolve/stub-resolv.conf\n13294    578    vmtoolsd         R stub-resolv.conf\n13294    578    vmtoolsd         R run/systemd/resolve/resolv.conf\n13294    578    vmtoolsd         R systemd/resolve/resolv.conf\n13294    578    vmtoolsd         R resolve/resolv.conf\n13294    578    vmtoolsd         R resolv.conf\n13294    578    vmtoolsd         R run/systemd/resolve/resolv.conf\n13294    578    vmtoolsd         R systemd/resolve/resolv.conf\n13294    578    vmtoolsd         R resolve/resolv.conf\n13294    578    vmtoolsd         R resolv.conf\n13294    578    vmtoolsd         R proc/net/route\n13294    578    vmtoolsd         R net/route\n13294    578    vmtoolsd         R self/net\n13294    578    vmtoolsd         R 578\n13294    578    vmtoolsd         R net\n13294    578    vmtoolsd         R route\n13294    578    vmtoolsd         M route\n13294    578    vmtoolsd         R proc/net/ipv6_route\n13294    578    vmtoolsd         R net/ipv6_route\n13294    578    vmtoolsd         R self/net\n13294    578    vmtoolsd         R 578\n13294    578    vmtoolsd         R net\n13294    578    vmtoolsd         R ipv6_route\n13294    578    vmtoolsd         M ipv6_route\n13294    578    vmtoolsd         R proc/uptime\n13294    578    vmtoolsd         R uptime\n13294    2526   node             R proc/34120/cmdline\n13294    2526   node             R 34120/cmdline\n13294    2526   node             R cmdline\n13294    2526   node             R proc/4025/cmdline\n13294    2526   node             R 4025/cmdline\n13294    2526   node             R cmdline\n13294    2526   node             R proc/11279/cmdline\n13294    2526   node             R 11279/cmdline\n13294    2526   node             R cmdline\n13444    2526   node             R proc/12596/cmdline\n13444    2526   node             R 12596/cmdline\n13444    2526   node             R cmdline\n13473    31770  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n13473    31770  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n13473    31770  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n13473    31770  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n13473    31770  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n13473    31770  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n13473    31770  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n13473    31770  node             R vscode.lock\n13475    31770  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n13475    31770  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n13475    31770  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n13475    31770  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n13475    31770  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n13475    31770  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n13475    31770  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n13475    31770  node             R vscode.lock\n13475    2513   node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n13475    2513   node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n13475    2513   node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n13475    2513   node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n13475    2513   node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n13475    2513   node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n13475    2513   node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n13475    2513   node             R vscode.lock\n13475    31781  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n13475    31781  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n13475    31781  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n13475    31781  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n13475    31781  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n13475    31781  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n13475    31781  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n13475    31781  node             R vscode.lock\n13497    2526   node             R proc/34120/cmdline\n13497    2526   node             R 34120/cmdline\n13497    2526   node             R cmdline\n13497    2526   node             R proc/4025/cmdline\n13497    2526   node             R 4025/cmdline\n13497    2526   node             R cmdline\n13497    2526   node             R proc/11279/cmdline\n13497    2526   node             R 11279/cmdline\n13497    2526   node             R cmdline\n13646    2526   node             R proc/12596/cmdline\n13646    2526   node             R 12596/cmdline\n13646    2526   node             R cmdline\n13699    2526   node             R proc/34120/cmdline\n13699    2526   node             R 34120/cmdline\n13699    2526   node             R cmdline\n13699    2526   node             R proc/4025/cmdline\n13699    2526   node             R 4025/cmdline\n13699    2526   node             R cmdline\n13699    2526   node             R proc/11279/cmdline\n13699    2526   node             R 11279/cmdline\n13699    2526   node             R cmdline\n13816    32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n13816    32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n13816    32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n13816    32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n13816    32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n13816    32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n13816    32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n13816    32362  node             R vscode.lock\n13816    32362  node             R home\n13816    32362  node             R home/yunwei\n13816    32362  node             R yunwei\n13816    32362  node             R home/yunwei/.vscode-server\n13816    32362  node             R yunwei/.vscode-server\n13816    32362  node             R .vscode-server\n13816    32362  node             R home/yunwei/.vscode-server/data\n13816    32362  node             R yunwei/.vscode-server/data\n13816    32362  node             R .vscode-server/data\n13816    32362  node             R data\n13816    32362  node             R home/yunwei/.vscode-server/data/User\n13816    32362  node             R yunwei/.vscode-server/data/User\n13816    32362  node             R .vscode-server/data/User\n13816    32362  node             R data/User\n13816    32362  node             R User\n13816    32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage\n13816    32362  node             R yunwei/.vscode-server/data/User/workspaceStorage\n13816    32362  node             R .vscode-server/data/User/workspaceStorage\n13816    32362  node             R data/User/workspaceStorage\n13816    32362  node             R User/workspaceStorage\n13816    32362  node             R workspaceStorage\n13816    32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n13816    32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n13816    32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n13816    32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n13816    32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n13816    32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n13816    32362  node             R 683061573fc2bafa947b4d87342b0cd1\n13816    32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n13816    32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n13816    32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n13816    32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n13816    32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n13816    32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n13816    32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n13816    32362  node             R vscode.lock\n13816    32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n13816    32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n13816    32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n13816    32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n13816    32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n13816    32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n13816    32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n13816    32362  node             R vscode.lock\n13816    32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n13816    32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n13816    32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n13816    32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n13816    32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n13816    32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n13816    32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n13816    32362  node             R vscode.lock\n13848    2526   node             R proc/12596/cmdline\n13848    2526   node             R 12596/cmdline\n13848    2526   node             R cmdline\n13900    2526   node             R proc/34120/cmdline\n13909    2526   node             R 34120/cmdline\n13909    2526   node             R cmdline\n13909    2526   node             R proc/4025/cmdline\n13909    2526   node             R 4025/cmdline\n13909    2526   node             R cmdline\n13909    2526   node             R proc/11279/cmdline\n13909    2526   node             R 11279/cmdline\n13909    2526   node             R cmdline\n14050    2526   node             R proc/12596/cmdline\n14050    2526   node             R 12596/cmdline\n14050    2526   node             R cmdline\n14103    2526   node             R proc/34120/cmdline\n14103    2526   node             R 34120/cmdline\n14103    2526   node             R cmdline\n14110    2526   node             R proc/4025/cmdline\n14110    2526   node             R 4025/cmdline\n14110    2526   node             R cmdline\n14110    2526   node             R proc/11279/cmdline\n14110    2526   node             R 11279/cmdline\n14110    2526   node             R cmdline\n14252    2526   node             R proc/12596/cmdline\n14252    2526   node             R 12596/cmdline\n14252    2526   node             R cmdline\n14306    2526   node             R proc/34120/cmdline\n14306    2526   node             R 34120/cmdline\n14306    2526   node             R cmdline\n14313    2526   node             R proc/4025/cmdline\n14313    2526   node             R 4025/cmdline\n14313    2526   node             R cmdline\n14313    2526   node             R proc/11279/cmdline\n14313    2526   node             R 11279/cmdline\n14313    2526   node             R cmdline\n14453    2526   node             R proc/12596/cmdline\n14453    2526   node             R 12596/cmdline\n14453    2526   node             R cmdline\n14476    31770  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n14476    31770  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n14476    31770  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n14476    31770  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n14476    31770  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n14476    31770  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n14476    31770  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n14476    31770  node             R vscode.lock\n14477    31770  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n14477    31770  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n14477    31770  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n14477    31770  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n14477    31770  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n14477    31770  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n14477    31770  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n14477    31770  node             R vscode.lock\n14477    2513   node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n14477    2513   node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n14477    2513   node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n14477    2513   node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n14477    2513   node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n14477    2513   node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n14477    2513   node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n14477    2513   node             R vscode.lock\n14477    31781  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n14477    31781  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n14477    31781  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n14477    31781  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n14477    31781  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n14477    31781  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n14477    31781  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n14477    31781  node             R vscode.lock\n14507    2526   node             R proc/34120/cmdline\n14507    2526   node             R 34120/cmdline\n14508    2526   node             R cmdline\n14515    2526   node             R proc/4025/cmdline\n14515    2526   node             R 4025/cmdline\n14515    2526   node             R cmdline\n14515    2526   node             R proc/11279/cmdline\n14515    2526   node             R 11279/cmdline\n14515    2526   node             R cmdline\n14658    2526   node             R proc/12596/cmdline\n14658    2526   node             R 12596/cmdline\n14658    2526   node             R cmdline\n14713    2526   node             R proc/34120/cmdline\n14713    2526   node             R 34120/cmdline\n14713    2526   node             R cmdline\n14713    31770  node             R proc/meminfo\n14713    31770  node             R meminfo\n14714    31770  node             R home/yunwei/.vscode/c_cpp_properties.json\n14714    31770  node             R yunwei/.vscode/c_cpp_properties.json\n14714    31770  node             R .vscode/c_cpp_properties.json\n14714    31770  node             R c_cpp_properties.json\n14716    2526   node             R proc/4025/cmdline\n14716    2526   node             R 4025/cmdline\n14716    2526   node             R cmdline\n14716    2526   node             R proc/11279/cmdline\n14716    2526   node             R 11279/cmdline\n14716    2526   node             R cmdline\n14736    578    vmtoolsd         R etc/vmware-tools/tools-global.conf\n14736    578    vmtoolsd         R vmware-tools/tools-global.conf\n14736    578    vmtoolsd         R tools-global.conf\n14736    578    vmtoolsd         R etc/vmware-tools/tools.conf\n14736    578    vmtoolsd         R vmware-tools/tools.conf\n14736    578    vmtoolsd         R tools.conf\n14824    32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n14824    32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n14824    32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n14824    32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n14824    32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n14824    32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n14824    32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n14824    32362  node             R vscode.lock\n14824    32362  node             R home\n14824    32362  node             R home/yunwei\n14824    32362  node             R yunwei\n14824    32362  node             R home/yunwei/.vscode-server\n14824    32362  node             R yunwei/.vscode-server\n14824    32362  node             R .vscode-server\n14824    32362  node             R home/yunwei/.vscode-server/data\n14824    32362  node             R yunwei/.vscode-server/data\n14824    32362  node             R .vscode-server/data\n14824    32362  node             R data\n14824    32362  node             R home/yunwei/.vscode-server/data/User\n14824    32362  node             R yunwei/.vscode-server/data/User\n14824    32362  node             R .vscode-server/data/User\n14824    32362  node             R data/User\n14824    32362  node             R User\n14824    32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage\n14824    32362  node             R yunwei/.vscode-server/data/User/workspaceStorage\n14824    32362  node             R .vscode-server/data/User/workspaceStorage\n14824    32362  node             R data/User/workspaceStorage\n14824    32362  node             R User/workspaceStorage\n14824    32362  node             R workspaceStorage\n14824    32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n14824    32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n14824    32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n14824    32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n14824    32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n14824    32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n14824    32362  node             R 683061573fc2bafa947b4d87342b0cd1\n14824    32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n14824    32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n14824    32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n14824    32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n14824    32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n14824    32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n14824    32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n14824    32362  node             R vscode.lock\n14824    32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n14824    32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n14824    32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n14824    32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n14824    32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n14824    32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n14824    32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n14824    32362  node             R vscode.lock\n14824    32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n14824    32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n14824    32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n14824    32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n14824    32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n14824    32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n14824    32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n14824    32362  node             R vscode.lock\n14861    2526   node             R proc/12596/cmdline\n14861    2526   node             R 12596/cmdline\n14861    2526   node             R cmdline\n14916    2526   node             R proc/34120/cmdline\n14916    2526   node             R 34120/cmdline\n14916    2526   node             R cmdline\n14916    2526   node             R proc/4025/cmdline\n14916    2526   node             R 4025/cmdline\n14916    2526   node             R cmdline\n14916    2526   node             R proc/11279/cmdline\n14916    2526   node             R 11279/cmdline\n14916    2526   node             R cmdline\n15065    2526   node             R proc/12596/cmdline\n15065    2526   node             R 12596/cmdline\n15065    2526   node             R cmdline\n15119    2526   node             R proc/34120/cmdline\n15119    2526   node             R 34120/cmdline\n15119    2526   node             R cmdline\n15119    2526   node             R proc/4025/cmdline\n15119    2526   node             R 4025/cmdline\n15119    2526   node             R cmdline\n15119    2526   node             R proc/11279/cmdline\n15119    2526   node             R 11279/cmdline\n15119    2526   node             R cmdline\n15266    2526   node             R proc/12596/cmdline\n15266    2526   node             R 12596/cmdline\n15266    2526   node             R cmdline\n15318    578    vmtoolsd         R proc/meminfo\n15318    578    vmtoolsd         R meminfo\n15318    578    vmtoolsd         R proc/vmstat\n15318    578    vmtoolsd         R vmstat\n15318    578    vmtoolsd         R proc/stat\n15318    578    vmtoolsd         R stat\n15318    578    vmtoolsd         R proc/zoneinfo\n15318    578    vmtoolsd         R zoneinfo\n15318    578    vmtoolsd         R proc/uptime\n15318    578    vmtoolsd         R uptime\n15318    578    vmtoolsd         R proc/diskstats\n15318    578    vmtoolsd         R diskstats\n15318    578    vmtoolsd         R sys/block/loop0\n15318    578    vmtoolsd         R block/loop0\n15318    578    vmtoolsd         R loop0\n15318    578    vmtoolsd         R devices/virtual/block/loop0\n15318    578    vmtoolsd         R virtual/block/loop0\n15318    578    vmtoolsd         R block/loop0\n15318    578    vmtoolsd         R loop0\n15318    578    vmtoolsd         R sys/block/loop1\n15318    578    vmtoolsd         R block/loop1\n15318    578    vmtoolsd         R loop1\n15318    578    vmtoolsd         R devices/virtual/block/loop1\n15318    578    vmtoolsd         R virtual/block/loop1\n15318    578    vmtoolsd         R block/loop1\n15318    578    vmtoolsd         R loop1\n15318    578    vmtoolsd         R sys/block/loop2\n15318    578    vmtoolsd         R block/loop2\n15318    578    vmtoolsd         R loop2\n15318    578    vmtoolsd         R devices/virtual/block/loop2\n15318    578    vmtoolsd         R virtual/block/loop2\n15318    578    vmtoolsd         R block/loop2\n15318    578    vmtoolsd         R loop2\n15318    578    vmtoolsd         R sys/block/loop3\n15318    578    vmtoolsd         R block/loop3\n15318    578    vmtoolsd         R loop3\n15318    578    vmtoolsd         R devices/virtual/block/loop3\n15318    578    vmtoolsd         R virtual/block/loop3\n15318    578    vmtoolsd         R block/loop3\n15318    578    vmtoolsd         R loop3\n15318    578    vmtoolsd         R sys/block/loop4\n15318    578    vmtoolsd         R block/loop4\n15318    578    vmtoolsd         R loop4\n15318    578    vmtoolsd         R devices/virtual/block/loop4\n15318    578    vmtoolsd         R virtual/block/loop4\n15318    578    vmtoolsd         R block/loop4\n15318    578    vmtoolsd         R loop4\n15318    578    vmtoolsd         R sys/block/loop5\n15318    578    vmtoolsd         R block/loop5\n15318    578    vmtoolsd         R loop5\n15318    578    vmtoolsd         R devices/virtual/block/loop5\n15318    578    vmtoolsd         R virtual/block/loop5\n15318    578    vmtoolsd         R block/loop5\n15318    578    vmtoolsd         R loop5\n15318    578    vmtoolsd         R sys/block/loop6\n15318    578    vmtoolsd         R block/loop6\n15318    578    vmtoolsd         R loop6\n15318    578    vmtoolsd         R devices/virtual/block/loop6\n15318    578    vmtoolsd         R virtual/block/loop6\n15318    578    vmtoolsd         R block/loop6\n15318    578    vmtoolsd         R loop6\n15318    578    vmtoolsd         R sys/block/loop7\n15318    578    vmtoolsd         R block/loop7\n15318    578    vmtoolsd         R loop7\n15318    578    vmtoolsd         R devices/virtual/block/loop7\n15318    578    vmtoolsd         R virtual/block/loop7\n15318    578    vmtoolsd         R block/loop7\n15318    578    vmtoolsd         R loop7\n15318    578    vmtoolsd         R sys/block/sda\n15318    578    vmtoolsd         R block/sda\n15318    578    vmtoolsd         R sda\n15318    578    vmtoolsd         R devices/pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:0/bl\n15318    578    vmtoolsd         R pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:0/block/sda\n15318    578    vmtoolsd         R 0000:00:10.0/host32/target32:0:0/32:0:0:0/block/sda\n15318    578    vmtoolsd         R host32/target32:0:0/32:0:0:0/block/sda\n15318    578    vmtoolsd         R target32:0:0/32:0:0:0/block/sda\n15318    578    vmtoolsd         R 32:0:0:0/block/sda\n15318    578    vmtoolsd         R block/sda\n15318    578    vmtoolsd         R sda\n15318    578    vmtoolsd         R sys/block/sda1\n15318    578    vmtoolsd         R block/sda1\n15318    578    vmtoolsd         R sda1\n15318    578    vmtoolsd         R sys/block/sda2\n15318    578    vmtoolsd         R block/sda2\n15318    578    vmtoolsd         R sda2\n15318    578    vmtoolsd         R sys/block/sr0\n15318    578    vmtoolsd         R block/sr0\n15318    578    vmtoolsd         R sr0\n15318    578    vmtoolsd         R devices/pci0000:00/0000:00:11.0/0000:02:05.0/ata4/host3/target3\n15318    578    vmtoolsd         R pci0000:00/0000:00:11.0/0000:02:05.0/ata4/host3/target3:0:0/3:0\n15318    578    vmtoolsd         R 0000:00:11.0/0000:02:05.0/ata4/host3/target3:0:0/3:0:0:0/block/\n15318    578    vmtoolsd         R 0000:02:05.0/ata4/host3/target3:0:0/3:0:0:0/block/sr0\n15318    578    vmtoolsd         R ata4/host3/target3:0:0/3:0:0:0/block/sr0\n15318    578    vmtoolsd         R host3/target3:0:0/3:0:0:0/block/sr0\n15318    578    vmtoolsd         R target3:0:0/3:0:0:0/block/sr0\n15318    578    vmtoolsd         R 3:0:0:0/block/sr0\n15318    578    vmtoolsd         R block/sr0\n15318    578    vmtoolsd         R sr0\n15318    578    vmtoolsd         R sys/block/loop8\n15318    578    vmtoolsd         R block/loop8\n15318    578    vmtoolsd         R loop8\n15318    578    vmtoolsd         R devices/virtual/block/loop8\n15318    578    vmtoolsd         R virtual/block/loop8\n15318    578    vmtoolsd         R block/loop8\n15318    578    vmtoolsd         R loop8\n15318    578    vmtoolsd         R sys/block/loop9\n15318    578    vmtoolsd         R block/loop9\n15318    578    vmtoolsd         R loop9\n15318    578    vmtoolsd         R devices/virtual/block/loop9\n15318    578    vmtoolsd         R virtual/block/loop9\n15318    578    vmtoolsd         R block/loop9\n15318    578    vmtoolsd         R loop9\n15318    578    vmtoolsd         R sys/block/loop10\n15318    578    vmtoolsd         R block/loop10\n15318    578    vmtoolsd         R loop10\n15318    578    vmtoolsd         R devices/virtual/block/loop10\n15318    578    vmtoolsd         R virtual/block/loop10\n15318    578    vmtoolsd         R block/loop10\n15318    578    vmtoolsd         R loop10\n15319    2526   node             R proc/34120/cmdline\n15320    2526   node             R 34120/cmdline\n15320    2526   node             R cmdline\n15320    2526   node             R proc/4025/cmdline\n15320    2526   node             R 4025/cmdline\n15320    2526   node             R cmdline\n15320    2526   node             R proc/11279/cmdline\n15320    2526   node             R 11279/cmdline\n15320    2526   node             R cmdline\n15468    2526   node             R proc/12596/cmdline\n15468    2526   node             R 12596/cmdline\n15468    2526   node             R cmdline\n15479    31770  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n15479    31770  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n15479    31770  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n15479    31770  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n15479    31770  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n15479    31770  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n15479    31770  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n15479    31770  node             R vscode.lock\n15480    31770  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n15480    31770  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n15480    31770  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n15480    31770  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n15480    31770  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n15480    31770  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n15480    31770  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n15480    31770  node             R vscode.lock\n15480    2513   node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n15480    2513   node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n15480    2513   node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n15480    2513   node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n15480    2513   node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n15480    2513   node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n15480    2513   node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n15480    2513   node             R vscode.lock\n15480    31781  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n15480    31781  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n15480    31781  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n15480    31781  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n15480    31781  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n15480    31781  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n15480    31781  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n15480    31781  node             R vscode.lock\n15523    2526   node             R proc/34120/cmdline\n15523    2526   node             R 34120/cmdline\n15523    2526   node             R cmdline\n15523    2526   node             R proc/4025/cmdline\n15523    2526   node             R 4025/cmdline\n15523    2526   node             R cmdline\n15523    2526   node             R proc/11279/cmdline\n15523    2526   node             R 11279/cmdline\n15523    2526   node             R cmdline\n15669    2526   node             R proc/12596/cmdline\n15669    2526   node             R 12596/cmdline\n15669    2526   node             R cmdline\n15723    2526   node             R proc/34120/cmdline\n15723    2526   node             R 34120/cmdline\n15723    2526   node             R cmdline\n15723    2526   node             R proc/4025/cmdline\n15723    2526   node             R 4025/cmdline\n15723    2526   node             R cmdline\n15723    2526   node             R proc/11279/cmdline\n15723    2526   node             R 11279/cmdline\n15723    2526   node             R cmdline\n15815    32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n15815    32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n15815    32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n15815    32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n15815    32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n15815    32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n15815    32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n15815    32362  node             R vscode.lock\n15815    32362  node             R home\n15815    32362  node             R home/yunwei\n15815    32362  node             R yunwei\n15815    32362  node             R home/yunwei/.vscode-server\n15815    32362  node             R yunwei/.vscode-server\n15815    32362  node             R .vscode-server\n15815    32362  node             R home/yunwei/.vscode-server/data\n15815    32362  node             R yunwei/.vscode-server/data\n15815    32362  node             R .vscode-server/data\n15815    32362  node             R data\n15815    32362  node             R home/yunwei/.vscode-server/data/User\n15815    32362  node             R yunwei/.vscode-server/data/User\n15815    32362  node             R .vscode-server/data/User\n15815    32362  node             R data/User\n15815    32362  node             R User\n15815    32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage\n15815    32362  node             R yunwei/.vscode-server/data/User/workspaceStorage\n15815    32362  node             R .vscode-server/data/User/workspaceStorage\n15815    32362  node             R data/User/workspaceStorage\n15815    32362  node             R User/workspaceStorage\n15815    32362  node             R workspaceStorage\n15815    32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n15815    32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n15815    32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n15815    32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n15815    32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n15815    32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n15815    32362  node             R 683061573fc2bafa947b4d87342b0cd1\n15815    32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n15815    32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n15815    32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n15815    32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n15815    32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n15815    32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n15815    32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n15815    32362  node             R vscode.lock\n15815    32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n15815    32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n15815    32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n15815    32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n15815    32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n15815    32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n15815    32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n15815    32362  node             R vscode.lock\n15815    32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n15815    32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n15815    32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n15815    32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n15815    32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n15815    32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n15815    32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n15815    32362  node             R vscode.lock\n15872    2526   node             R proc/12596/cmdline\n15872    2526   node             R 12596/cmdline\n15872    2526   node             R cmdline\n15925    2526   node             R proc/34120/cmdline\n15925    2526   node             R 34120/cmdline\n15925    2526   node             R cmdline\n15925    2526   node             R proc/4025/cmdline\n15925    2526   node             R 4025/cmdline\n15925    2526   node             R cmdline\n15925    2526   node             R proc/11279/cmdline\n15925    2526   node             R 11279/cmdline\n15925    2526   node             R cmdline\n16074    2526   node             R proc/12596/cmdline\n16074    2526   node             R 12596/cmdline\n16074    2526   node             R cmdline\n16126    2526   node             R proc/34120/cmdline\n16126    2526   node             R 34120/cmdline\n16126    2526   node             R cmdline\n16126    2526   node             R proc/4025/cmdline\n16126    2526   node             R 4025/cmdline\n16126    2526   node             R cmdline\n16126    2526   node             R proc/11279/cmdline\n16126    2526   node             R 11279/cmdline\n16126    2526   node             R cmdline\n16279    2526   node             R proc/12596/cmdline\n16279    2526   node             R 12596/cmdline\n16279    2526   node             R cmdline\n16327    2526   node             R proc/34120/cmdline\n16327    2526   node             R 34120/cmdline\n16327    2526   node             R cmdline\n16327    2526   node             R proc/4025/cmdline\n16327    2526   node             R 4025/cmdline\n16327    2526   node             R cmdline\n16327    2526   node             R proc/11279/cmdline\n16327    2526   node             R 11279/cmdline\n16327    2526   node             R cmdline\n16480    2526   node             R proc/12596/cmdline\n16480    2526   node             R 12596/cmdline\n16480    2526   node             R cmdline\n16480    31770  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n16480    31770  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n16480    31770  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n16480    31770  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n16480    31770  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n16480    31770  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n16480    31770  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n16480    31770  node             R vscode.lock\n16481    31770  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n16481    31770  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n16481    31770  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n16481    31770  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n16481    31770  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n16481    31770  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n16481    31770  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n16481    31770  node             R vscode.lock\n16481    2513   node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n16481    2513   node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n16481    2513   node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n16481    2513   node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n16481    2513   node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n16481    2513   node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n16481    2513   node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n16481    2513   node             R vscode.lock\n16481    31781  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n16481    31781  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n16481    31781  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n16481    31781  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n16481    31781  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n16481    31781  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n16481    31781  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n16481    31781  node             R vscode.lock\n16529    2526   node             R proc/34120/cmdline\n16529    2526   node             R 34120/cmdline\n16529    2526   node             R cmdline\n16529    2526   node             R proc/4025/cmdline\n16529    2526   node             R 4025/cmdline\n16529    2526   node             R cmdline\n16529    2526   node             R proc/11279/cmdline\n16529    2526   node             R 11279/cmdline\n16529    2526   node             R cmdline\n16681    2526   node             R proc/12596/cmdline\n16681    2526   node             R 12596/cmdline\n16681    2526   node             R cmdline\n16730    2526   node             R proc/34120/cmdline\n16730    2526   node             R 34120/cmdline\n16730    2526   node             R cmdline\n16730    2526   node             R proc/4025/cmdline\n16730    2526   node             R 4025/cmdline\n16730    2526   node             R cmdline\n16730    2526   node             R proc/11279/cmdline\n16730    2526   node             R 11279/cmdline\n16730    2526   node             R cmdline\n16819    32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n16819    32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n16819    32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n16819    32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n16819    32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n16819    32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n16819    32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n16819    32362  node             R vscode.lock\n16819    32362  node             R home\n16819    32362  node             R home/yunwei\n16819    32362  node             R yunwei\n16819    32362  node             R home/yunwei/.vscode-server\n16819    32362  node             R yunwei/.vscode-server\n16819    32362  node             R .vscode-server\n16819    32362  node             R home/yunwei/.vscode-server/data\n16819    32362  node             R yunwei/.vscode-server/data\n16819    32362  node             R .vscode-server/data\n16819    32362  node             R data\n16819    32362  node             R home/yunwei/.vscode-server/data/User\n16819    32362  node             R yunwei/.vscode-server/data/User\n16819    32362  node             R .vscode-server/data/User\n16819    32362  node             R data/User\n16819    32362  node             R User\n16819    32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage\n16819    32362  node             R yunwei/.vscode-server/data/User/workspaceStorage\n16819    32362  node             R .vscode-server/data/User/workspaceStorage\n16819    32362  node             R data/User/workspaceStorage\n16819    32362  node             R User/workspaceStorage\n16819    32362  node             R workspaceStorage\n16819    32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n16819    32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n16819    32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n16819    32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n16819    32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n16819    32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n16819    32362  node             R 683061573fc2bafa947b4d87342b0cd1\n16819    32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n16819    32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n16819    32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n16819    32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n16819    32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n16819    32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n16819    32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n16819    32362  node             R vscode.lock\n16819    32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n16819    32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n16819    32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n16819    32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n16819    32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n16819    32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n16819    32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n16819    32362  node             R vscode.lock\n16819    32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n16819    32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n16819    32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n16819    32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n16819    32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n16819    32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n16819    32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n16819    32362  node             R vscode.lock\n16883    2526   node             R proc/12596/cmdline\n16883    2526   node             R 12596/cmdline\n16883    2526   node             R cmdline\n16931    2526   node             R proc/34120/cmdline\n16931    2526   node             R 34120/cmdline\n16931    2526   node             R cmdline\n16931    2526   node             R proc/4025/cmdline\n16931    2526   node             R 4025/cmdline\n16931    2526   node             R cmdline\n16931    2526   node             R proc/11279/cmdline\n16931    2526   node             R 11279/cmdline\n16931    2526   node             R cmdline\n17091    2526   node             R proc/12596/cmdline\n17091    2526   node             R 12596/cmdline\n17091    2526   node             R cmdline\n17132    2526   node             R proc/34120/cmdline\n17132    2526   node             R 34120/cmdline\n17132    2526   node             R cmdline\n17132    2526   node             R proc/4025/cmdline\n17132    2526   node             R 4025/cmdline\n17132    2526   node             R cmdline\n17132    2526   node             R proc/11279/cmdline\n17132    2526   node             R 11279/cmdline\n17132    2526   node             R cmdline\n17217    31770  node             R proc/meminfo\n17217    31770  node             R meminfo\n17217    31770  node             R home/yunwei/.vscode/c_cpp_properties.json\n17217    31770  node             R yunwei/.vscode/c_cpp_properties.json\n17217    31770  node             R .vscode/c_cpp_properties.json\n17217    31770  node             R c_cpp_properties.json\n17291    2526   node             R proc/12596/cmdline\n17291    2526   node             R 12596/cmdline\n17291    2526   node             R cmdline\n17334    2526   node             R proc/34120/cmdline\n17334    2526   node             R 34120/cmdline\n17334    2526   node             R cmdline\n17334    2526   node             R proc/4025/cmdline\n17334    2526   node             R 4025/cmdline\n17334    2526   node             R cmdline\n17334    2526   node             R proc/11279/cmdline\n17334    2526   node             R 11279/cmdline\n17334    2526   node             R cmdline\n17482    31770  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n17482    31770  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n17482    31770  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n17482    31770  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n17482    31770  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n17482    31770  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n17482    31770  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n17482    31770  node             R vscode.lock\n17482    31770  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n17482    31770  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n17482    31770  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n17482    31770  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n17482    31770  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n17482    31770  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n17482    31770  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n17482    31770  node             R vscode.lock\n17482    31781  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n17482    31781  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n17482    31781  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n17482    31781  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n17482    31781  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n17482    31781  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n17482    31781  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n17482    31781  node             R vscode.lock\n17482    2513   node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n17482    2513   node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n17482    2513   node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n17482    2513   node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n17482    2513   node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n17482    2513   node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n17482    2513   node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n17482    2513   node             R vscode.lock\n17494    2526   node             R proc/12596/cmdline\n17494    2526   node             R 12596/cmdline\n17494    2526   node             R cmdline\n17536    2526   node             R proc/34120/cmdline\n17536    2526   node             R 34120/cmdline\n17536    2526   node             R cmdline\n17536    2526   node             R proc/4025/cmdline\n17536    2526   node             R 4025/cmdline\n17536    2526   node             R cmdline\n17536    2526   node             R proc/11279/cmdline\n17536    2526   node             R 11279/cmdline\n17536    2526   node             R cmdline\n17695    2526   node             R proc/12596/cmdline\n17695    2526   node             R 12596/cmdline\n17695    2526   node             R cmdline\n17737    2526   node             R proc/34120/cmdline\n17737    2526   node             R 34120/cmdline\n17737    2526   node             R cmdline\n17737    2526   node             R proc/4025/cmdline\n17737    2526   node             R 4025/cmdline\n17737    2526   node             R cmdline\n17737    2526   node             R proc/11279/cmdline\n17737    2526   node             R 11279/cmdline\n17737    2526   node             R cmdline\n17823    32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n17823    32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n17823    32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n17823    32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n17823    32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n17823    32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n17823    32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n17823    32362  node             R vscode.lock\n17823    32362  node             R home\n17823    32362  node             R home/yunwei\n17823    32362  node             R yunwei\n17823    32362  node             R home/yunwei/.vscode-server\n17823    32362  node             R yunwei/.vscode-server\n17823    32362  node             R .vscode-server\n17823    32362  node             R home/yunwei/.vscode-server/data\n17823    32362  node             R yunwei/.vscode-server/data\n17823    32362  node             R .vscode-server/data\n17823    32362  node             R data\n17823    32362  node             R home/yunwei/.vscode-server/data/User\n17823    32362  node             R yunwei/.vscode-server/data/User\n17823    32362  node             R .vscode-server/data/User\n17823    32362  node             R data/User\n17823    32362  node             R User\n17823    32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage\n17823    32362  node             R yunwei/.vscode-server/data/User/workspaceStorage\n17823    32362  node             R .vscode-server/data/User/workspaceStorage\n17823    32362  node             R data/User/workspaceStorage\n17823    32362  node             R User/workspaceStorage\n17823    32362  node             R workspaceStorage\n17823    32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n17823    32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n17823    32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n17823    32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n17823    32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n17823    32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n17823    32362  node             R 683061573fc2bafa947b4d87342b0cd1\n17823    32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n17823    32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n17823    32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n17823    32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n17823    32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n17823    32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n17823    32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n17823    32362  node             R vscode.lock\n17824    32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n17824    32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n17824    32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n17824    32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n17824    32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n17824    32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n17824    32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n17824    32362  node             R vscode.lock\n17824    32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n17824    32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n17824    32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n17824    32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n17824    32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n17824    32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n17824    32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n17824    32362  node             R vscode.lock\n17894    2526   node             R proc/12596/cmdline\n17894    2526   node             R 12596/cmdline\n17894    2526   node             R cmdline\n17939    2526   node             R proc/34120/cmdline\n17939    2526   node             R 34120/cmdline\n17939    2526   node             R cmdline\n17939    2526   node             R proc/4025/cmdline\n17939    2526   node             R 4025/cmdline\n17939    2526   node             R cmdline\n17939    2526   node             R proc/11279/cmdline\n17939    2526   node             R 11279/cmdline\n17939    2526   node             R cmdline\n18098    2526   node             R proc/12596/cmdline\n18098    2526   node             R 12596/cmdline\n18098    2526   node             R cmdline\n18139    2526   node             R proc/34120/cmdline\n18139    2526   node             R 34120/cmdline\n18139    2526   node             R cmdline\n18139    2526   node             R proc/4025/cmdline\n18139    2526   node             R 4025/cmdline\n18139    2526   node             R cmdline\n18139    2526   node             R proc/11279/cmdline\n18139    2526   node             R 11279/cmdline\n18139    2526   node             R cmdline\n18299    2526   node             R proc/12596/cmdline\n18299    2526   node             R 12596/cmdline\n18299    2526   node             R cmdline\n18342    2526   node             R proc/34120/cmdline\n18342    2526   node             R 34120/cmdline\n18342    2526   node             R cmdline\n18342    2526   node             R proc/4025/cmdline\n18342    2526   node             R 4025/cmdline\n18342    2526   node             R cmdline\n18342    2526   node             R proc/11279/cmdline\n18342    2526   node             R 11279/cmdline\n18342    2526   node             R cmdline\n18484    31770  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n18484    31770  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n18484    31770  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n18484    31770  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n18484    31770  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n18484    31770  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n18484    31770  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n18484    31770  node             R vscode.lock\n18484    31770  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n18484    31770  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n18484    31770  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n18484    31770  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n18484    31770  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n18484    31770  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n18484    31770  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n18484    31770  node             R vscode.lock\n18484    31781  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n18484    31781  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n18484    31781  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n18484    31781  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n18484    31781  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n18484    31781  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n18484    31781  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n18484    31781  node             R vscode.lock\n18484    2513   node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n18484    2513   node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n18484    2513   node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n18484    2513   node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n18484    2513   node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n18484    2513   node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n18484    2513   node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n18484    2513   node             R vscode.lock\n18499    2526   node             R proc/12596/cmdline\n18499    2526   node             R 12596/cmdline\n18499    2526   node             R cmdline\n18545    2526   node             R proc/34120/cmdline\n18545    2526   node             R 34120/cmdline\n18545    2526   node             R cmdline\n18545    2526   node             R proc/4025/cmdline\n18545    2526   node             R 4025/cmdline\n18545    2526   node             R cmdline\n18545    2526   node             R proc/11279/cmdline\n18545    2526   node             R 11279/cmdline\n18545    2526   node             R cmdline\n18702    2526   node             R proc/12596/cmdline\n18702    2526   node             R 12596/cmdline\n18702    2526   node             R cmdline\n18747    2526   node             R proc/34120/cmdline\n18747    2526   node             R 34120/cmdline\n18747    2526   node             R cmdline\n18747    2526   node             R proc/4025/cmdline\n18747    2526   node             R 4025/cmdline\n18747    2526   node             R cmdline\n18747    2526   node             R proc/11279/cmdline\n18747    2526   node             R 11279/cmdline\n18747    2526   node             R cmdline\n18828    32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n18828    32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n18828    32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n18828    32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n18828    32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n18828    32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n18828    32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n18828    32362  node             R vscode.lock\n18828    32362  node             R home\n18828    32362  node             R home/yunwei\n18828    32362  node             R yunwei\n18828    32362  node             R home/yunwei/.vscode-server\n18828    32362  node             R yunwei/.vscode-server\n18828    32362  node             R .vscode-server\n18828    32362  node             R home/yunwei/.vscode-server/data\n18828    32362  node             R yunwei/.vscode-server/data\n18828    32362  node             R .vscode-server/data\n18828    32362  node             R data\n18828    32362  node             R home/yunwei/.vscode-server/data/User\n18828    32362  node             R yunwei/.vscode-server/data/User\n18828    32362  node             R .vscode-server/data/User\n18828    32362  node             R data/User\n18828    32362  node             R User\n18828    32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage\n18828    32362  node             R yunwei/.vscode-server/data/User/workspaceStorage\n18828    32362  node             R .vscode-server/data/User/workspaceStorage\n18828    32362  node             R data/User/workspaceStorage\n18828    32362  node             R User/workspaceStorage\n18828    32362  node             R workspaceStorage\n18828    32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n18828    32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n18828    32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n18828    32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n18828    32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n18828    32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n18828    32362  node             R 683061573fc2bafa947b4d87342b0cd1\n18828    32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n18828    32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n18828    32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n18828    32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n18828    32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n18828    32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n18828    32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n18828    32362  node             R vscode.lock\n18828    32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n18828    32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n18828    32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n18828    32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n18828    32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n18828    32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n18828    32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n18828    32362  node             R vscode.lock\n18828    32362  node             R home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n18828    32362  node             R yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n18828    32362  node             R .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n18828    32362  node             R data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n18828    32362  node             R User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n18828    32362  node             R workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n18828    32362  node             R 683061573fc2bafa947b4d87342b0cd1/vscode.lock\n18828    32362  node             R vscode.lock\n18903    2526   node             R proc/12596/cmdline\n18903    2526   node             R 12596/cmdline\n18903    2526   node             R cmdline\n18950    2526   node             R proc/34120/cmdline\n18950    2526   node             R 34120/cmdline\n18950    2526   node             R cmdline\n18950    2526   node             R proc/4025/cmdline\n18950    2526   node             R 4025/cmdline\n18950    2526   node             R cmdline\n18950    2526   node             R proc/11279/cmdline\n18950    2526   node             R 11279/cmdline\n18950    2526   node             R cmdline\n19107    2526   node             R proc/12596/cmdline\n19107    2526   node             R 12596/cmdline\n19107    2526   node             R cmdline\n19152    2526   node             R proc/34120/cmdline\n19152    2526   node             R 34120/cmdline\n19152    2526   node             R cmdline\n19152    2526   node             R proc/4025/cmdline\n19152    2526   node             R 4025/cmdline\n19152    2526   node             R cmdline\n19152    2526   node             R proc/11279/cmdline\n19152    2526   node             R 11279/cmdline\n19152    2526   node             R cmdline\n19308    2526   node             R proc/12596/cmdline\n19308    2526   node             R 12596/cmdline\n19308    2526   node             R cmdline\n19355    2526   node             R proc/34120/cmdline\n19355    2526   node             R 34120/cmdline\n19355    2526   node             R cmdline\n19355    2526   node             R proc/4025/cmdline\n19355    2526   node             R 4025/cmdline\n19355    2526   node             R cmdline\n19355    2526   node             R proc/11279/cmdline\n19355    2526   node             R 11279/cmdline\n19355    2526   node             R cmdline\n19327    34358  bpftrace         R sys/kernel/debug/tracing\n19327    34358  bpftrace         R kernel/debug/tracing\n19327    34358  bpftrace         R debug/tracing\n19327    34358  bpftrace         R tracing\n19327    34358  bpftrace         R sys/kernel/debug/tracing/kprobe_events\n19327    34358  bpftrace         R kernel/debug/tracing/kprobe_events\n19327    34358  bpftrace         R debug/tracing/kprobe_events\n19327    34358  bpftrace         R tracing/kprobe_events\n19327    34358  bpftrace         R kprobe_events\n19370    34358  bpftrace         R sys/kernel/debug/tracing\n19370    34358  bpftrace         R kernel/debug/tracing\n19370    34358  bpftrace         R debug/tracing\n19370    34358  bpftrace         R tracing\n19370    34358  bpftrace         R sys/kernel/debug/tracing/kprobe_events\n19370    34358  bpftrace         R kernel/debug/tracing/kprobe_events\n19370    34358  bpftrace         R debug/tracing/kprobe_events\n19370    34358  bpftrace         R tracing/kprobe_events\n19370    34358  bpftrace         R kprobe_events\n\n\n\n", "stderr": "", "returncode": 0, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nTrace directory entry cache (dcache) lookups by process\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace usage:\n\n# trace processes calling sleep\n'kprobe:do_nanosleep { printf(\"PID %d sleeping...\n\", pid); }'\n\n# count syscalls by process name\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Files opened by process\n'tracepoint:syscalls:sys_enter_open { printf(\"%s %s\n\", comm, str(args->filename)); }'\n\n# Syscall count by program\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Read bytes by process:\n'tracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }'\n\n# Read size distribution by process:\n'tracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }'\n\n# Show per-second syscall rates:\n'tracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }'\n\n# Trace disk size by process\n'tracepoint:block:block_rq_issue { printf(\"%d %s %d\n\", pid, comm, args->bytes); }'\n\n# Count page faults by process\n'software:faults:1 { @[comm] = count(); }'\n\n# Count LLC cache misses by process name and PID (uses PMCs):\n'hardware:cache-misses:1000000 { @[comm, pid] = count(); }'\n\n# Profile user-level stacks at 99 Hertz, for PID 189:\n'profile:hz:99 /pid == 189/ { @[ustack] = count(); }'\n\n# Files opened, for processes in the root cgroup-v2\n'tracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\n\", str(args->filename)); }'\n\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces directory entry cache (dcache) lookups in the Linux kernel. The code uses kernel dynamic tracing of functions lookup_fast() and d_lookup() to capture lookup information and prints the time, process ID, command, and file name for each lookup event.\n\n```\n#ifndef BPFTRACE_HAVE_BTF\n#include <linux/fs.h>\n#include <linux/sched.h>\n\n// from fs/namei.c:\nstruct nameidata {\n        struct path     path;\n        struct qstr     last;\n        // [...]\n};\n#endif\n\nBEGIN\n{\n\tprintf(\"Tracing dcache lookups... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-8s %-6s %-16s %1s %s\\n\", \"TIME\", \"PID\", \"COMM\", \"T\", \"FILE\");\n}\n\n// comment out this block to avoid showing hits:\nkprobe:lookup_fast,\nkprobe:lookup_fast.constprop.*\n{\n\t$nd = (struct nameidata *)arg0;\n\tprintf(\"%-8d %-6d %-16s R %s\\n\", elapsed / 1e6, pid, comm,\n\t    str($nd->last.name));\n}\n\nkprobe:d_lookup\n{\n\t$name = (struct qstr *)arg1;\n\t@fname[tid] = $name->name;\n}\n\nkretprobe:d_lookup\n/@fname[tid]/\n{\n\tprintf(\"%-8d %-6d %-16s M %s\\n\", elapsed / 1e6, pid, comm,\n\t    str(@fname[tid]));\n\tdelete(@fname[tid]);\n}\n\n```\n\nexample: Write a BPF code that traces the syscalls statfs(), statx(), newstat(), and newlstat(), providing information about the PID, process name, error code, and path being accessed.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing stat syscalls... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-6s %-16s %3s %s\\n\", \"PID\", \"COMM\", \"ERR\", \"PATH\");\n}\n\ntracepoint:syscalls:sys_enter_statfs\n{\n\t@filename[tid] = args.pathname;\n}\n\ntracepoint:syscalls:sys_enter_statx,\ntracepoint:syscalls:sys_enter_newstat,\ntracepoint:syscalls:sys_enter_newlstat\n{\n\t@filename[tid] = args.filename;\n}\n\ntracepoint:syscalls:sys_exit_statfs,\ntracepoint:syscalls:sys_exit_statx,\ntracepoint:syscalls:sys_exit_newstat,\ntracepoint:syscalls:sys_exit_newlstat\n/@filename[tid]/\n{\n\t$ret = args.ret;\n\t$errno = $ret >= 0 ? 0 : - $ret;\n\n\tprintf(\"%-6d %-16s %3d %s\\n\", pid, comm, $errno,\n\t    str(@filename[tid]));\n\tdelete(@filename[tid]);\n}\n\nEND\n{\n\tclear(@filename);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nTrace directory entry cache (dcache) lookups by process\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself. \n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e #!/usr/bin/bpftrace\n\n// Print header\nprintf(\"Tracing md flush events... Hit Ctrl-C to end.\\n\");\nprintf(\"%-8s %-6s %-16s %s\\n\", \"TIME\", \"PID\", \"COMM\", \"DEVICE\");\n\n// Define kprobe for md_flush_request function\nkprobe:md_flush_request\n{\n    // Get current timestamp and format it\n    time(\"%H:%M:%S \");\n    \n    // Print process ID, command, and device information\n    printf(\"%-6d %-16s \", pid, comm);\n    printf(((struct bio *)arg1)->bi_bdev->bd_disk->disk_name);\n}", "stdout": "", "stderr": "stdin:4:1-8: ERROR: syntax error, unexpected (, expecting {\nprintf(\"Tracing md flush events... Hit Ctrl-C to end.\\n\");\n~~~~~~~\n", "returncode": 1, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nTrace md flush events with pid and process name\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace usage:\n\n# trace processes calling sleep\n'kprobe:do_nanosleep { printf(\"PID %d sleeping...\n\", pid); }'\n\n# count syscalls by process name\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Files opened by process\n'tracepoint:syscalls:sys_enter_open { printf(\"%s %s\n\", comm, str(args->filename)); }'\n\n# Syscall count by program\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Read bytes by process:\n'tracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }'\n\n# Read size distribution by process:\n'tracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }'\n\n# Show per-second syscall rates:\n'tracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }'\n\n# Trace disk size by process\n'tracepoint:block:block_rq_issue { printf(\"%d %s %d\n\", pid, comm, args->bytes); }'\n\n# Count page faults by process\n'software:faults:1 { @[comm] = count(); }'\n\n# Count LLC cache misses by process name and PID (uses PMCs):\n'hardware:cache-misses:1000000 { @[comm, pid] = count(); }'\n\n# Profile user-level stacks at 99 Hertz, for PID 189:\n'profile:hz:99 /pid == 189/ { @[ustack] = count(); }'\n\n# Files opened, for processes in the root cgroup-v2\n'tracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\n\", str(args->filename)); }'\n\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces md flush events and displays the time, process ID, command, and device information of each event.\n\n```\n#ifndef BPFTRACE_HAVE_BTF\n#include <linux/genhd.h>\n#include <linux/bio.h>\n#endif\n\nBEGIN\n{\n\tprintf(\"Tracing md flush events... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-8s %-6s %-16s %s\\n\", \"TIME\", \"PID\", \"COMM\", \"DEVICE\");\n}\n\nkprobe:md_flush_request\n{\n\ttime(\"%H:%M:%S \");\n\tprintf(\"%-6d %-16s %s\\n\", pid, comm,\n\t    ((struct bio *)arg1)->bi_bdev->bd_disk->disk_name);\n}\n\n```\n\nexample: Write a BPF code that traces sync-related system calls, such as sync(), syncfs(), fsync(), and fdatasync(), and prints the time, process ID, command, and event for each traced system call.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing sync syscalls... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-9s %-6s %-16s %s\\n\", \"TIME\", \"PID\", \"COMM\", \"EVENT\");\n}\n\ntracepoint:syscalls:sys_enter_sync,\ntracepoint:syscalls:sys_enter_syncfs,\ntracepoint:syscalls:sys_enter_fsync,\ntracepoint:syscalls:sys_enter_fdatasync,\ntracepoint:syscalls:sys_enter_sync_file_range*,\ntracepoint:syscalls:sys_enter_msync\n{\n\ttime(\"%H:%M:%S  \");\n\tprintf(\"%-6d %-16s %s\\n\", pid, comm, probe);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nTrace md flush events with pid and process name\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself. \n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN\n{\n    // Print message when starting tracing\n    printf(\"Tracing CPU scheduler...\\n\");\n}\n\ntracepoint:sched:sched_switch\n{\n    // Calculate latency between previous task switch\n    $delta = nsecs - (@start[$cpu][$prev_tid]);\n\n    // Save current timestamp for next task switch\n    @start[$cpu][$next_tid] = nsecs;\n\n    // Histogram latency values\n    @latencies = hist($delta / 1000, 0, 5000, 25);\n}\n\nEND\n{\n    // Clear map on exit\n    clear(@start);\n}", "stdout": "", "stderr": "stdin:13:29-30: ERROR: syntax error, unexpected =, expecting }\n    @start[$cpu][$next_tid] = nsecs;\n                            ~\n", "returncode": 1, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nPrint CPU scheduler run queue latency as a histogram\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace usage:\n\n# trace processes calling sleep\n'kprobe:do_nanosleep { printf(\"PID %d sleeping...\n\", pid); }'\n\n# count syscalls by process name\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Files opened by process\n'tracepoint:syscalls:sys_enter_open { printf(\"%s %s\n\", comm, str(args->filename)); }'\n\n# Syscall count by program\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Read bytes by process:\n'tracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }'\n\n# Read size distribution by process:\n'tracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }'\n\n# Show per-second syscall rates:\n'tracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }'\n\n# Trace disk size by process\n'tracepoint:block:block_rq_issue { printf(\"%d %s %d\n\", pid, comm, args->bytes); }'\n\n# Count page faults by process\n'software:faults:1 { @[comm] = count(); }'\n\n# Count LLC cache misses by process name and PID (uses PMCs):\n'hardware:cache-misses:1000000 { @[comm, pid] = count(); }'\n\n# Profile user-level stacks at 99 Hertz, for PID 189:\n'profile:hz:99 /pid == 189/ { @[ustack] = count(); }'\n\n# Files opened, for processes in the root cgroup-v2\n'tracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\n\", str(args->filename)); }'\n\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces the CPU scheduler and records the latency of tasks in the run queue, using the sched_wakeup, sched_wakeup_new, and sched_switch tracepoints, and displays the latency as a histogram.\n\n```\n#include <linux/sched.h>\n\nBEGIN\n{\n\tprintf(\"Tracing CPU scheduler... Hit Ctrl-C to end.\\n\");\n}\n\ntracepoint:sched:sched_wakeup,\ntracepoint:sched:sched_wakeup_new\n{\n\t@qtime[args.pid] = nsecs;\n}\n\ntracepoint:sched:sched_switch\n{\n\tif (args.prev_state == TASK_RUNNING) {\n\t\t@qtime[args.prev_pid] = nsecs;\n\t}\n\n\t$ns = @qtime[args.next_pid];\n\tif ($ns) {\n\t\t@usecs = hist((nsecs - $ns) / 1000);\n\t}\n\tdelete(@qtime[args.next_pid]);\n}\n\nEND\n{\n\tclear(@qtime);\n}\n\n```\n\nexample: Write a BPF code that calculates and samples the length of the CPU scheduler run queue as a histogram, subtracting the currently running task from the total queue length.\n\n```\n#ifndef BPFTRACE_HAVE_BTF\n#include <linux/sched.h>\n\n// Until BTF is available, we'll need to declare some of this struct manually,\n// since it isn't available to be #included. This will need maintenance to match\n// your kernel version. It is from kernel/sched/sched.h:\nstruct cfs_rq {\n\tstruct load_weight load;\n\tunsigned long runnable_weight;\n\tunsigned int nr_running;\n\tunsigned int h_nr_running;\n};\n#endif\n\nBEGIN\n{\n\tprintf(\"Sampling run queue length at 99 Hertz... Hit Ctrl-C to end.\\n\");\n}\n\nprofile:hz:99\n{\n\t$task = (struct task_struct *)curtask;\n\t$my_q = (struct cfs_rq *)$task->se.cfs_rq;\n\t$len = $my_q->nr_running;\n\t$len = $len > 0 ? $len - 1 : 0;\t// subtract currently running task\n\t@runqlen = lhist($len, 0, 100, 1);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nPrint CPU scheduler run queue latency as a histogram\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself. \n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN\n{\n\tprintf(\"Sampling run queue length at 99 Hertz... Hit Ctrl-C to end.\\n\");\n}\n\nprofile:hz:99\n{\n\t$task = (struct task_struct *)curtask;\n\t$my_q = (struct cfs_rq *)$task->se.cfs_rq;\n\t$len = $my_q->nr_running;\n\t$len = $len > 0 ? $len - 1 : 0; //subtract currently running task\n\t@runqlen = lhist($len, 0, 100, 1);\n}", "stdout": "Attaching 2 probes...\nSampling run queue length at 99 Hertz... Hit Ctrl-C to end.\n\n\n@runqlen: \n[0, 1)              3547 |@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@|\n[1, 2)               303 |@@@@                                                |\n[2, 3)                 8 |                                                    |\n\n", "stderr": "", "returncode": 0, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nSummarizes CPU scheduler run queue length as a histogram\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace usage:\n\n# trace processes calling sleep\n'kprobe:do_nanosleep { printf(\"PID %d sleeping...\n\", pid); }'\n\n# count syscalls by process name\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Files opened by process\n'tracepoint:syscalls:sys_enter_open { printf(\"%s %s\n\", comm, str(args->filename)); }'\n\n# Syscall count by program\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Read bytes by process:\n'tracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }'\n\n# Read size distribution by process:\n'tracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }'\n\n# Show per-second syscall rates:\n'tracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }'\n\n# Trace disk size by process\n'tracepoint:block:block_rq_issue { printf(\"%d %s %d\n\", pid, comm, args->bytes); }'\n\n# Count page faults by process\n'software:faults:1 { @[comm] = count(); }'\n\n# Count LLC cache misses by process name and PID (uses PMCs):\n'hardware:cache-misses:1000000 { @[comm, pid] = count(); }'\n\n# Profile user-level stacks at 99 Hertz, for PID 189:\n'profile:hz:99 /pid == 189/ { @[ustack] = count(); }'\n\n# Files opened, for processes in the root cgroup-v2\n'tracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\n\", str(args->filename)); }'\n\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that calculates and samples the length of the CPU scheduler run queue as a histogram, subtracting the currently running task from the total queue length.\n\n```\n#ifndef BPFTRACE_HAVE_BTF\n#include <linux/sched.h>\n\n// Until BTF is available, we'll need to declare some of this struct manually,\n// since it isn't available to be #included. This will need maintenance to match\n// your kernel version. It is from kernel/sched/sched.h:\nstruct cfs_rq {\n\tstruct load_weight load;\n\tunsigned long runnable_weight;\n\tunsigned int nr_running;\n\tunsigned int h_nr_running;\n};\n#endif\n\nBEGIN\n{\n\tprintf(\"Sampling run queue length at 99 Hertz... Hit Ctrl-C to end.\\n\");\n}\n\nprofile:hz:99\n{\n\t$task = (struct task_struct *)curtask;\n\t$my_q = (struct cfs_rq *)$task->se.cfs_rq;\n\t$len = $my_q->nr_running;\n\t$len = $len > 0 ? $len - 1 : 0;\t// subtract currently running task\n\t@runqlen = lhist($len, 0, 100, 1);\n}\n\n```\n\nexample: Write a BPF code that traces the CPU scheduler and records the latency of tasks in the run queue, using the sched_wakeup, sched_wakeup_new, and sched_switch tracepoints, and displays the latency as a histogram.\n\n```\n#include <linux/sched.h>\n\nBEGIN\n{\n\tprintf(\"Tracing CPU scheduler... Hit Ctrl-C to end.\\n\");\n}\n\ntracepoint:sched:sched_wakeup,\ntracepoint:sched:sched_wakeup_new\n{\n\t@qtime[args.pid] = nsecs;\n}\n\ntracepoint:sched:sched_switch\n{\n\tif (args.prev_state == TASK_RUNNING) {\n\t\t@qtime[args.prev_pid] = nsecs;\n\t}\n\n\t$ns = @qtime[args.next_pid];\n\tif ($ns) {\n\t\t@usecs = hist((nsecs - $ns) / 1000);\n\t}\n\tdelete(@qtime[args.next_pid]);\n}\n\nEND\n{\n\tclear(@qtime);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nSummarizes CPU scheduler run queue length as a histogram\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself. \n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e uprobe:libpthread:pthread_create,\nuprobe:libc:pthread_create\n{\n\tprintf(\"%-10u %-6d %-16s %s\\n\", elapsed / 1e6, pid, comm,\n\t    usym(arg2));\n}", "stdout": "Attaching 1 probe...\n\n\n", "stderr": "", "returncode": 0, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nList new thread creation with pid and thread identifies\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace usage:\n\n# trace processes calling sleep\n'kprobe:do_nanosleep { printf(\"PID %d sleeping...\n\", pid); }'\n\n# count syscalls by process name\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Files opened by process\n'tracepoint:syscalls:sys_enter_open { printf(\"%s %s\n\", comm, str(args->filename)); }'\n\n# Syscall count by program\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Read bytes by process:\n'tracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }'\n\n# Read size distribution by process:\n'tracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }'\n\n# Show per-second syscall rates:\n'tracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }'\n\n# Trace disk size by process\n'tracepoint:block:block_rq_issue { printf(\"%d %s %d\n\", pid, comm, args->bytes); }'\n\n# Count page faults by process\n'software:faults:1 { @[comm] = count(); }'\n\n# Count LLC cache misses by process name and PID (uses PMCs):\n'hardware:cache-misses:1000000 { @[comm, pid] = count(); }'\n\n# Profile user-level stacks at 99 Hertz, for PID 189:\n'profile:hz:99 /pid == 189/ { @[ustack] = count(); }'\n\n# Files opened, for processes in the root cgroup-v2\n'tracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\n\", str(args->filename)); }'\n\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that lists new thread creations, printing the time in milliseconds, PID, process name, and function name where the thread was created.\n\n```\nBEGIN\n{\n\tprintf(\"%-10s %-6s %-16s %s\\n\", \"TIME(ms)\", \"PID\", \"COMM\", \"FUNC\");\n}\n\nuprobe:libpthread:pthread_create,\nuprobe:libc:pthread_create\n{\n\tprintf(\"%-10u %-6d %-16s %s\\n\", elapsed / 1e6, pid, comm,\n\t    usym(arg2));\n}\n\n```\n\nexample: Write a BPF code that traces new processes and counts the number of new process creations per second using the eBPF technology.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing new processes... Hit Ctrl-C to end.\\n\");\n\n}\n\ntracepoint:sched:sched_process_fork\n{\n\t@ = count();\n}\n\ninterval:s:1\n{\n\ttime(\"%H:%M:%S PIDs/sec: \");\n\tprint(@);\n\tclear(@);\n}\n\nEND\n{\n\tclear(@);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nList new thread creation with pid and thread identifies\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself. \n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN\n{\n\tprintf(\"Displaying VM exits in KVM ... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-16s %-16s \\n\",\"EXIT REASON\",\"COUNT\");\n\n}\n\nkprobe:kvm_handle_exit_irqoff*\n{\n\t@[exit_code] = count();\n}\n\ninterval:s:1\n{\n\ttime();\n\tprint(@);\n\tclear(@);\n}\n\nEND\n{\n\tclear(@);\n}", "stdout": "", "stderr": "stdin:10:2-13: ERROR: Unknown identifier: 'exit_code'\n    @[exit_code] = count();\n    ~~~~~~~~~~~\n", "returncode": 1, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nDisplay the exit_reason and its statistics of each vm exit in kvm\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace usage:\n\n# trace processes calling sleep\n'kprobe:do_nanosleep { printf(\"PID %d sleeping...\n\", pid); }'\n\n# count syscalls by process name\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Files opened by process\n'tracepoint:syscalls:sys_enter_open { printf(\"%s %s\n\", comm, str(args->filename)); }'\n\n# Syscall count by program\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Read bytes by process:\n'tracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }'\n\n# Read size distribution by process:\n'tracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }'\n\n# Show per-second syscall rates:\n'tracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }'\n\n# Trace disk size by process\n'tracepoint:block:block_rq_issue { printf(\"%d %s %d\n\", pid, comm, args->bytes); }'\n\n# Count page faults by process\n'software:faults:1 { @[comm] = count(); }'\n\n# Count LLC cache misses by process name and PID (uses PMCs):\n'hardware:cache-misses:1000000 { @[comm, pid] = count(); }'\n\n# Profile user-level stacks at 99 Hertz, for PID 189:\n'profile:hz:99 /pid == 189/ { @[ustack] = count(); }'\n\n# Files opened, for processes in the root cgroup-v2\n'tracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\n\", str(args->filename)); }'\n\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces key VFS calls, counts the number of times each call is invoked, and prints a per-second summary.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing key VFS calls... Hit Ctrl-C to end.\\n\");\n\n}\n\nkprobe:vfs_read*,\nkprobe:vfs_write*,\nkprobe:vfs_fsync,\nkprobe:vfs_open,\nkprobe:vfs_create\n{\n\t@[func] = count();\n}\n\ninterval:s:1\n{\n\ttime();\n\tprint(@);\n\tclear(@);\n}\n\nEND\n{\n\tclear(@);\n}\n\n```\n\nexample: Write a BPF code that traces file system writeback events, including the time of occurrence, device information, reason, and duration. This code can help identify performance issues related to writeback events.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing writeback... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-9s %-8s %-8s %-16s %s\\n\", \"TIME\", \"DEVICE\", \"PAGES\",\n\t    \"REASON\", \"ms\");\n\n\t// see /sys/kernel/debug/tracing/events/writeback/writeback_start/format\n\t@reason[0] = \"background\";\n\t@reason[1] = \"vmscan\";\n\t@reason[2] = \"sync\";\n\t@reason[3] = \"periodic\";\n\t@reason[4] = \"laptop_timer\";\n\t@reason[5] = \"free_more_memory\";\n\t@reason[6] = \"fs_free_space\";\n\t@reason[7] = \"forker_thread\";\n}\n\ntracepoint:writeback:writeback_start\n{\n\t@start[args.sb_dev] = nsecs;\n}\n\ntracepoint:writeback:writeback_written\n{\n\t$sb_dev = args.sb_dev;\n\t$s = @start[$sb_dev];\n\tdelete(@start[$sb_dev]);\n\t$lat = $s ? (nsecs - $s) / 1000 : 0;\n\n\ttime(\"%H:%M:%S  \");\n\tprintf(\"%-8s %-8d %-16s %d.%03d\\n\", args.name,\n\t    args.nr_pages & 0xffff,\t// TODO: explain these bitmasks\n\t    @reason[args.reason & 0xffffffff],\n\t    $lat / 1000, $lat % 1000);\n}\n\nEND\n{\n\tclear(@reason);\n\tclear(@start);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nDisplay the exit_reason and its statistics of each vm exit in kvm\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself. \n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter_mount\n{\n    printf(\"%-6d %s\\n\", pid, args.device)\n}\n\ntracepoint:syscalls:sys_enter_umount\n{\n    printf(\"%-6d %s\\n\", pid, args.target)\n}", "stdout": "", "stderr": "stdin:3:30-35: ERROR: Can not access field 'device' on type '(ctx) struct _tracepoint_syscalls_sys_enter_mount *'. Try dereferencing it first, or using '->'\n    printf(\"%-6d %s\\n\", pid, args.device)\n                             ~~~~~\nstdin:8:30-35: ERROR: Can not access field 'target' on type '(ctx) struct _tracepoint_syscalls_sys_enter_umount *'. Try dereferencing it first, or using '->'\n    printf(\"%-6d %s\\n\", pid, args.target)\n                             ~~~~~\n", "returncode": 1, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nTrace mount and umount syscalls system-wide and print with pid\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace usage:\n\n# trace processes calling sleep\n'kprobe:do_nanosleep { printf(\"PID %d sleeping...\n\", pid); }'\n\n# count syscalls by process name\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Files opened by process\n'tracepoint:syscalls:sys_enter_open { printf(\"%s %s\n\", comm, str(args->filename)); }'\n\n# Syscall count by program\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Read bytes by process:\n'tracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }'\n\n# Read size distribution by process:\n'tracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }'\n\n# Show per-second syscall rates:\n'tracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }'\n\n# Trace disk size by process\n'tracepoint:block:block_rq_issue { printf(\"%d %s %d\n\", pid, comm, args->bytes); }'\n\n# Count page faults by process\n'software:faults:1 { @[comm] = count(); }'\n\n# Count LLC cache misses by process name and PID (uses PMCs):\n'hardware:cache-misses:1000000 { @[comm, pid] = count(); }'\n\n# Profile user-level stacks at 99 Hertz, for PID 189:\n'profile:hz:99 /pid == 189/ { @[ustack] = count(); }'\n\n# Files opened, for processes in the root cgroup-v2\n'tracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\n\", str(args->filename)); }'\n\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces the syscalls statfs(), statx(), newstat(), and newlstat(), providing information about the PID, process name, error code, and path being accessed.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing stat syscalls... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-6s %-16s %3s %s\\n\", \"PID\", \"COMM\", \"ERR\", \"PATH\");\n}\n\ntracepoint:syscalls:sys_enter_statfs\n{\n\t@filename[tid] = args.pathname;\n}\n\ntracepoint:syscalls:sys_enter_statx,\ntracepoint:syscalls:sys_enter_newstat,\ntracepoint:syscalls:sys_enter_newlstat\n{\n\t@filename[tid] = args.filename;\n}\n\ntracepoint:syscalls:sys_exit_statfs,\ntracepoint:syscalls:sys_exit_statx,\ntracepoint:syscalls:sys_exit_newstat,\ntracepoint:syscalls:sys_exit_newlstat\n/@filename[tid]/\n{\n\t$ret = args.ret;\n\t$errno = $ret >= 0 ? 0 : - $ret;\n\n\tprintf(\"%-6d %-16s %3d %s\\n\", pid, comm, $errno,\n\t    str(@filename[tid]));\n\tdelete(@filename[tid]);\n}\n\nEND\n{\n\tclear(@filename);\n}\n\n```\n\nexample: Write a BPF code that traces sync-related system calls, such as sync(), syncfs(), fsync(), and fdatasync(), and prints the time, process ID, command, and event for each traced system call.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing sync syscalls... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-9s %-6s %-16s %s\\n\", \"TIME\", \"PID\", \"COMM\", \"EVENT\");\n}\n\ntracepoint:syscalls:sys_enter_sync,\ntracepoint:syscalls:sys_enter_syncfs,\ntracepoint:syscalls:sys_enter_fsync,\ntracepoint:syscalls:sys_enter_fdatasync,\ntracepoint:syscalls:sys_enter_sync_file_range*,\ntracepoint:syscalls:sys_enter_msync\n{\n\ttime(\"%H:%M:%S  \");\n\tprintf(\"%-6d %-16s %s\\n\", pid, comm, probe);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nTrace mount and umount syscalls system-wide and print with pid\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself. \n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN\n{\n\tprintf(\"Tracing JIT Compile Events... Hit Ctrl-C to End.\");\n}\n\nkprobe:jit_compile\n{\n\ttime(%H:%M:%S );\n\tprintf(\"%-6d %-16s %s\\n\", pid, comm, arg3);\n}\n\nINTERVAL: s : 1\n{\n\tprint(@);\n\tClear(@);\n}", "stdout": "", "stderr": "stdin:8:2-8: ERROR: syntax error, unexpected %\n    time(%H:%M:%S );\n    ~~~~~~\n", "returncode": 1, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nTrace bpf jit compile events\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace usage:\n\n# trace processes calling sleep\n'kprobe:do_nanosleep { printf(\"PID %d sleeping...\n\", pid); }'\n\n# count syscalls by process name\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Files opened by process\n'tracepoint:syscalls:sys_enter_open { printf(\"%s %s\n\", comm, str(args->filename)); }'\n\n# Syscall count by program\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Read bytes by process:\n'tracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }'\n\n# Read size distribution by process:\n'tracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }'\n\n# Show per-second syscall rates:\n'tracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }'\n\n# Trace disk size by process\n'tracepoint:block:block_rq_issue { printf(\"%d %s %d\n\", pid, comm, args->bytes); }'\n\n# Count page faults by process\n'software:faults:1 { @[comm] = count(); }'\n\n# Count LLC cache misses by process name and PID (uses PMCs):\n'hardware:cache-misses:1000000 { @[comm, pid] = count(); }'\n\n# Profile user-level stacks at 99 Hertz, for PID 189:\n'profile:hz:99 /pid == 189/ { @[ustack] = count(); }'\n\n# Files opened, for processes in the root cgroup-v2\n'tracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\n\", str(args->filename)); }'\n\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces new processes and counts the number of new process creations per second using the eBPF technology.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing new processes... Hit Ctrl-C to end.\\n\");\n\n}\n\ntracepoint:sched:sched_process_fork\n{\n\t@ = count();\n}\n\ninterval:s:1\n{\n\ttime(\"%H:%M:%S PIDs/sec: \");\n\tprint(@);\n\tclear(@);\n}\n\nEND\n{\n\tclear(@);\n}\n\n```\n\nexample: Write a BPF code that traces md flush events and displays the time, process ID, command, and device information of each event.\n\n```\n#ifndef BPFTRACE_HAVE_BTF\n#include <linux/genhd.h>\n#include <linux/bio.h>\n#endif\n\nBEGIN\n{\n\tprintf(\"Tracing md flush events... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-8s %-6s %-16s %s\\n\", \"TIME\", \"PID\", \"COMM\", \"DEVICE\");\n}\n\nkprobe:md_flush_request\n{\n\ttime(\"%H:%M:%S \");\n\tprintf(\"%-6d %-16s %s\\n\", pid, comm,\n\t    ((struct bio *)arg1)->bi_bdev->bd_disk->disk_name);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nTrace bpf jit compile events\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself. \n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e # Trace block device I/O with PID and latency\n\tBEGIN\n{\n\tprintf(\"%-12s %-7s %-16s %-6s %7s\\n\",\"TIME(ms)\", \"DISK\", \"COMM\", \"PID\", \"LAT(ms)\");\n}\n\nkprobe:blk_account_io_start,\nkprobe:__blk_account_io_start\n{\n\t@start[arg0] = nsecs;\n\t@iopid[arg0] = pid;\n\t@iocomm[arg0] = comm;\n\t@disk[arg0] = ((struct request *)arg0)->q->disk->disk_name;\n}\n\nkprobe:blk_account_io_done,\nkprobe:__blk_account_io_done\n/@start[arg0] != 0 && @iopid[arg0] != 0 && @iocomm[arg0] != \"\"/\n\n{\n\t$now = nsecs;\n\tprintf(\"%-12u %-7s %-16s %-6d %7d\\n\",\n\t    elapsed / 1e6, @disk[arg0], @iocomm[arg0], @iopid[arg0],\n\t    ($now - @start[arg0]) / 1e6);\n\n\tdelete(@start[arg0]);\n\tdelete(@iopid[arg0]);\n\tdelete(@iocomm[arg0]);\n\tdelete(@disk[arg0]);\n}\n\nEND\n{\n\tclear(@start);\n\tclear(@iopid);\n\tclear(@iocomm);\n\tclear(@disk);\n}", "stdout": "", "stderr": "definitions.h:2:3: error: invalid preprocessing directive\n", "returncode": 1, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nTrace block device I/O with PID and latency\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace usage:\n\n# trace processes calling sleep\n'kprobe:do_nanosleep { printf(\"PID %d sleeping...\n\", pid); }'\n\n# count syscalls by process name\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Files opened by process\n'tracepoint:syscalls:sys_enter_open { printf(\"%s %s\n\", comm, str(args->filename)); }'\n\n# Syscall count by program\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Read bytes by process:\n'tracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }'\n\n# Read size distribution by process:\n'tracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }'\n\n# Show per-second syscall rates:\n'tracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }'\n\n# Trace disk size by process\n'tracepoint:block:block_rq_issue { printf(\"%d %s %d\n\", pid, comm, args->bytes); }'\n\n# Count page faults by process\n'software:faults:1 { @[comm] = count(); }'\n\n# Count LLC cache misses by process name and PID (uses PMCs):\n'hardware:cache-misses:1000000 { @[comm, pid] = count(); }'\n\n# Profile user-level stacks at 99 Hertz, for PID 189:\n'profile:hz:99 /pid == 189/ { @[ustack] = count(); }'\n\n# Files opened, for processes in the root cgroup-v2\n'tracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\n\", str(args->filename)); }'\n\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces block I/O operations and displays the latency for each operation, along with the disk, process, and PID associated with it.\n\n```\n#ifndef BPFTRACE_HAVE_BTF\n#include <linux/blkdev.h>\n#include <linux/blk-mq.h>\n#endif\n\nBEGIN\n{\n\tprintf(\"%-12s %-7s %-16s %-6s %7s\\n\", \"TIME(ms)\", \"DISK\", \"COMM\", \"PID\", \"LAT(ms)\");\n}\n\nkprobe:blk_account_io_start,\nkprobe:__blk_account_io_start\n{\n\t@start[arg0] = nsecs;\n\t@iopid[arg0] = pid;\n\t@iocomm[arg0] = comm;\n\t@disk[arg0] = ((struct request *)arg0)->q->disk->disk_name;\n}\n\nkprobe:blk_account_io_done,\nkprobe:__blk_account_io_done\n/@start[arg0] != 0 && @iopid[arg0] != 0 && @iocomm[arg0] != \"\"/\n\n{\n\t$now = nsecs;\n\tprintf(\"%-12u %-7s %-16s %-6d %7d\\n\",\n\t    elapsed / 1e6, @disk[arg0], @iocomm[arg0], @iopid[arg0],\n\t    ($now - @start[arg0]) / 1e6);\n\n\tdelete(@start[arg0]);\n\tdelete(@iopid[arg0]);\n\tdelete(@iocomm[arg0]);\n\tdelete(@disk[arg0]);\n}\n\nEND\n{\n\tclear(@start);\n\tclear(@iopid);\n\tclear(@iocomm);\n\tclear(@disk);\n}\n\n```\n\nexample: Write a BPF code that traces block device I/O latency by calculating the time difference between the start and completion of I/O operations and storing them in a histogram.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing block device I/O... Hit Ctrl-C to end.\\n\");\n}\n\nkprobe:blk_account_io_start,\nkprobe:__blk_account_io_start\n{\n\t@start[arg0] = nsecs;\n}\n\nkprobe:blk_account_io_done,\nkprobe:__blk_account_io_done\n/@start[arg0]/\n{\n\t@usecs = hist((nsecs - @start[arg0]) / 1000);\n\tdelete(@start[arg0]);\n}\n\nEND\n{\n\tclear(@start);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nTrace block device I/O with PID and latency\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself. \n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN\n    {\n        printf(\"Tracing btrfs operations... Hit Ctrl-C to end.\\n\");\n    }\n    \n    kprobe:btrfs* // trace all functions starting with 'btrfs'\n    {\n        @start[tid] = nsecs;\n        @func[tid] = func;\n    }\n    \n    kretprobe:btrfs*\n    /@start[tid]/\n    {\n        @us[@func[tid]] = hist((nsecs - @start[tid]) / 1000);\n        delete(@start[tid]);\n        delete(@func[tid]);\n    }\n    \n    END\n    {\n        clear(@start);\n        clear(@func);\n    }", "stdout": "Attaching 4 probes...\nTracing btrfs operations... Hit Ctrl-C to end.\n\n\n\n\n\n", "stderr": "", "returncode": 0, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nTrace btrfs operations system-wide\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace usage:\n\n# trace processes calling sleep\n'kprobe:do_nanosleep { printf(\"PID %d sleeping...\n\", pid); }'\n\n# count syscalls by process name\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Files opened by process\n'tracepoint:syscalls:sys_enter_open { printf(\"%s %s\n\", comm, str(args->filename)); }'\n\n# Syscall count by program\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Read bytes by process:\n'tracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }'\n\n# Read size distribution by process:\n'tracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }'\n\n# Show per-second syscall rates:\n'tracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }'\n\n# Trace disk size by process\n'tracepoint:block:block_rq_issue { printf(\"%d %s %d\n\", pid, comm, args->bytes); }'\n\n# Count page faults by process\n'software:faults:1 { @[comm] = count(); }'\n\n# Count LLC cache misses by process name and PID (uses PMCs):\n'hardware:cache-misses:1000000 { @[comm, pid] = count(); }'\n\n# Profile user-level stacks at 99 Hertz, for PID 189:\n'profile:hz:99 /pid == 189/ { @[ustack] = count(); }'\n\n# Files opened, for processes in the root cgroup-v2\n'tracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\n\", str(args->filename)); }'\n\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces the latency of four common XFS file system operations (read, write, open, and fsync) and prints a summary of the operation latency, using the bpftrace and eBPF tools.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing XFS operation latency... Hit Ctrl-C to end.\\n\");\n}\n\nkprobe:xfs_file_read_iter,\nkprobe:xfs_file_write_iter,\nkprobe:xfs_file_open,\nkprobe:xfs_file_fsync\n{\n\t@start[tid] = nsecs;\n\t@name[tid] = func;\n}\n\nkretprobe:xfs_file_read_iter,\nkretprobe:xfs_file_write_iter,\nkretprobe:xfs_file_open,\nkretprobe:xfs_file_fsync\n/@start[tid]/\n{\n\t@us[@name[tid]] = hist((nsecs - @start[tid]) / 1000);\n\tdelete(@start[tid]);\n\tdelete(@name[tid]);\n}\n\nEND\n{\n\tclear(@start);\n\tclear(@name);\n}\n\n```\n\nexample: Write a BPF code that traces sync-related system calls, such as sync(), syncfs(), fsync(), and fdatasync(), and prints the time, process ID, command, and event for each traced system call.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing sync syscalls... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-9s %-6s %-16s %s\\n\", \"TIME\", \"PID\", \"COMM\", \"EVENT\");\n}\n\ntracepoint:syscalls:sys_enter_sync,\ntracepoint:syscalls:sys_enter_syncfs,\ntracepoint:syscalls:sys_enter_fsync,\ntracepoint:syscalls:sys_enter_fdatasync,\ntracepoint:syscalls:sys_enter_sync_file_range*,\ntracepoint:syscalls:sys_enter_msync\n{\n\ttime(\"%H:%M:%S  \");\n\tprintf(\"%-6d %-16s %s\\n\", pid, comm, probe);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nTrace btrfs operations system-wide\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself. \n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN\n{\n\tprintf(\"Tracing cap_capable syscalls... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-9s %-6s %-6s %-16s %-4s %-20s AUDIT\\n\", \"TIME\", \"UID\", \"PID\",\n\t    \"COMM\", \"CAP\", \"NAME\");\n\t@cap[0] = \"CAP_CHOWN\";\n\t@cap[1] = \"CAP_DAC_OVERRIDE\";\n\t@cap[2] = \"CAP_DAC_READ_SEARCH\";\n\t@cap[3] = \"CAP_FOWNER\";\n\t@cap[4] = \"CAP_FSETID\";\n\t@cap[5] = \"CAP_KILL\";\n\t@cap[6] = \"CAP_SETGID\";\n\t@cap[7] = \"CAP_SETUID\";\n\t@cap[8] = \"CAP_SETPCAP\";\n\t@cap[9] = \"CAP_LINUX_IMMUTABLE\";\n\t@cap[10] = \"CAP_NET_BIND_SERVICE\";\n\t@cap[11] = \"CAP_NET_BROADCAST\";\n\t@cap[12] = \"CAP_NET_ADMIN\";\n\t@cap[13] = \"CAP_NET_RAW\";\n\t@cap[14] = \"CAP_IPC_LOCK\";\n\t@cap[15] = \"CAP_IPC_OWNER\";\n\t@cap[16] = \"CAP_SYS_MODULE\";\n\t@cap[17] = \"CAP_SYS_RAWIO\";\n\t@cap[18] = \"CAP_SYS_CHROOT\";\n\t@cap[19] = \"CAP_SYS_PTRACE\";\n\t@cap[20] = \"CAP_SYS_PACCT\";\n\t@cap[21] = \"CAP_SYS_ADMIN\";\n\t@cap[22] = \"CAP_SYS_BOOT\";\n\t@cap[23] = \"CAP_SYS_NICE\";\n\t@cap[24] = \"CAP_SYS_RESOURCE\";\n\t@cap[25] = \"CAP_SYS_TIME\";\n\t@cap[26] = \"CAP_SYS_TTY_CONFIG\";\n\t@cap[27] = \"CAP_MKNOD\";\n\t@cap[28] = \"CAP_LEASE\";\n\t@cap[29] = \"CAP_AUDIT_WRITE\";\n\t@cap[30] = \"CAP_AUDIT_CONTROL\";\n\t@cap[31] = \"CAP_SETFCAP\";\n\t@cap[32] = \"CAP_MAC_OVERRIDE\";\n\t@cap[33] = \"CAP_MAC_ADMIN\";\n\t@cap[34] = \"CAP_SYSLOG\";\n\t@cap[35] = \"CAP_WAKE_ALARM\";\n\t@cap[36] = \"CAP_BLOCK_SUSPEND\";\n\t@cap[37] = \"CAP_AUDIT_READ\";\n\t@cap[38] = \"CAP_PERFMON\";\n\t@cap[39] = \"CAP_BPF\";\n\t@cap[40] = \"CAP_CHECKPOINT_RESTORE\";\n}\n\nkprobe:cap_capable\n{\n\t$cap = arg2;\n\t$audit = arg3;\n\ttime(\"%H:%M:%S  \");\n\tprintf(\"%-6d %-6d %-16s %-4d %-20s %d\\n\", uid, pid, comm, $cap,\n\t    @cap[$cap], $audit);\n}\n\nEND\n{\n\tclear(@cap);\n}", "stdout": "Attaching 3 probes...\nTracing cap_capable syscalls... Hit Ctrl-C to end.\nTIME      UID    PID    COMM             CAP  NAME                 AUDIT\n\n\n\n", "stderr": "", "returncode": 0, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nTrace security capability checks events\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace usage:\n\n# trace processes calling sleep\n'kprobe:do_nanosleep { printf(\"PID %d sleeping...\n\", pid); }'\n\n# count syscalls by process name\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Files opened by process\n'tracepoint:syscalls:sys_enter_open { printf(\"%s %s\n\", comm, str(args->filename)); }'\n\n# Syscall count by program\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Read bytes by process:\n'tracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }'\n\n# Read size distribution by process:\n'tracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }'\n\n# Show per-second syscall rates:\n'tracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }'\n\n# Trace disk size by process\n'tracepoint:block:block_rq_issue { printf(\"%d %s %d\n\", pid, comm, args->bytes); }'\n\n# Count page faults by process\n'software:faults:1 { @[comm] = count(); }'\n\n# Count LLC cache misses by process name and PID (uses PMCs):\n'hardware:cache-misses:1000000 { @[comm, pid] = count(); }'\n\n# Profile user-level stacks at 99 Hertz, for PID 189:\n'profile:hz:99 /pid == 189/ { @[ustack] = count(); }'\n\n# Files opened, for processes in the root cgroup-v2\n'tracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\n\", str(args->filename)); }'\n\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces the security capability checks (cap_capable()) and prints the UID, PID, command name, capability, capability name, and audit value for each syscall in a clear and organized manner.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing cap_capable syscalls... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-9s %-6s %-6s %-16s %-4s %-20s AUDIT\\n\", \"TIME\", \"UID\", \"PID\",\n\t    \"COMM\", \"CAP\", \"NAME\");\n\t@cap[0] = \"CAP_CHOWN\";\n\t@cap[1] = \"CAP_DAC_OVERRIDE\";\n\t@cap[2] = \"CAP_DAC_READ_SEARCH\";\n\t@cap[3] = \"CAP_FOWNER\";\n\t@cap[4] = \"CAP_FSETID\";\n\t@cap[5] = \"CAP_KILL\";\n\t@cap[6] = \"CAP_SETGID\";\n\t@cap[7] = \"CAP_SETUID\";\n\t@cap[8] = \"CAP_SETPCAP\";\n\t@cap[9] = \"CAP_LINUX_IMMUTABLE\";\n\t@cap[10] = \"CAP_NET_BIND_SERVICE\";\n\t@cap[11] = \"CAP_NET_BROADCAST\";\n\t@cap[12] = \"CAP_NET_ADMIN\";\n\t@cap[13] = \"CAP_NET_RAW\";\n\t@cap[14] = \"CAP_IPC_LOCK\";\n\t@cap[15] = \"CAP_IPC_OWNER\";\n\t@cap[16] = \"CAP_SYS_MODULE\";\n\t@cap[17] = \"CAP_SYS_RAWIO\";\n\t@cap[18] = \"CAP_SYS_CHROOT\";\n\t@cap[19] = \"CAP_SYS_PTRACE\";\n\t@cap[20] = \"CAP_SYS_PACCT\";\n\t@cap[21] = \"CAP_SYS_ADMIN\";\n\t@cap[22] = \"CAP_SYS_BOOT\";\n\t@cap[23] = \"CAP_SYS_NICE\";\n\t@cap[24] = \"CAP_SYS_RESOURCE\";\n\t@cap[25] = \"CAP_SYS_TIME\";\n\t@cap[26] = \"CAP_SYS_TTY_CONFIG\";\n\t@cap[27] = \"CAP_MKNOD\";\n\t@cap[28] = \"CAP_LEASE\";\n\t@cap[29] = \"CAP_AUDIT_WRITE\";\n\t@cap[30] = \"CAP_AUDIT_CONTROL\";\n\t@cap[31] = \"CAP_SETFCAP\";\n\t@cap[32] = \"CAP_MAC_OVERRIDE\";\n\t@cap[33] = \"CAP_MAC_ADMIN\";\n\t@cap[34] = \"CAP_SYSLOG\";\n\t@cap[35] = \"CAP_WAKE_ALARM\";\n\t@cap[36] = \"CAP_BLOCK_SUSPEND\";\n\t@cap[37] = \"CAP_AUDIT_READ\";\n\t@cap[38] = \"CAP_PERFMON\";\n\t@cap[39] = \"CAP_BPF\";\n\t@cap[40] = \"CAP_CHECKPOINT_RESTORE\";\n}\n\nkprobe:cap_capable\n{\n\t$cap = arg2;\n\t$audit = arg3;\n\ttime(\"%H:%M:%S  \");\n\tprintf(\"%-6d %-6d %-16s %-4d %-20s %d\\n\", uid, pid, comm, $cap,\n\t    @cap[$cap], $audit);\n}\n\nEND\n{\n\tclear(@cap);\n}\n\n```\n\nexample: Write a BPF code that traces sync-related system calls, such as sync(), syncfs(), fsync(), and fdatasync(), and prints the time, process ID, command, and event for each traced system call.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing sync syscalls... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-9s %-6s %-16s %s\\n\", \"TIME\", \"PID\", \"COMM\", \"EVENT\");\n}\n\ntracepoint:syscalls:sys_enter_sync,\ntracepoint:syscalls:sys_enter_syncfs,\ntracepoint:syscalls:sys_enter_fsync,\ntracepoint:syscalls:sys_enter_fdatasync,\ntracepoint:syscalls:sys_enter_sync_file_range*,\ntracepoint:syscalls:sys_enter_msync\n{\n\ttime(\"%H:%M:%S  \");\n\tprintf(\"%-6d %-16s %s\\n\", pid, comm, probe);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nTrace security capability checks events\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself. \n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN\n{\n\tprintf(\"Tracing compact zone events... Hit Ctrl-C to end.\\n\");\n}\n\nkprobe:compact_zone_finished,\nkprobe:__compact_zone_finished\n{\n\t@latency[tid] = nsecs;\n}\n\nEND\n{\n\tprint(@latency);\n}", "stdout": "Attaching 4 probes...\nTracing compact zone events... Hit Ctrl-C to end.\n\n\n\n\n", "stderr": "stdin:4-6: WARNING: compact_zone_finished is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\nstdin:6-7: WARNING: __compact_zone_finished is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\ncannot attach kprobe, probe entry may not exist\nWARNING: could not attach probe kprobe:__compact_zone_finished, skipping.\ncannot attach kprobe, probe entry may not exist\nWARNING: could not attach probe kprobe:compact_zone_finished, skipping.\n", "returncode": 0, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nTrace compact zone events with PID and latency\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace usage:\n\n# trace processes calling sleep\n'kprobe:do_nanosleep { printf(\"PID %d sleeping...\n\", pid); }'\n\n# count syscalls by process name\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Files opened by process\n'tracepoint:syscalls:sys_enter_open { printf(\"%s %s\n\", comm, str(args->filename)); }'\n\n# Syscall count by program\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Read bytes by process:\n'tracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }'\n\n# Read size distribution by process:\n'tracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }'\n\n# Show per-second syscall rates:\n'tracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }'\n\n# Trace disk size by process\n'tracepoint:block:block_rq_issue { printf(\"%d %s %d\n\", pid, comm, args->bytes); }'\n\n# Count page faults by process\n'software:faults:1 { @[comm] = count(); }'\n\n# Count LLC cache misses by process name and PID (uses PMCs):\n'hardware:cache-misses:1000000 { @[comm, pid] = count(); }'\n\n# Profile user-level stacks at 99 Hertz, for PID 189:\n'profile:hz:99 /pid == 189/ { @[ustack] = count(); }'\n\n# Files opened, for processes in the root cgroup-v2\n'tracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\n\", str(args->filename)); }'\n\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces block I/O operations and displays the latency for each operation, along with the disk, process, and PID associated with it.\n\n```\n#ifndef BPFTRACE_HAVE_BTF\n#include <linux/blkdev.h>\n#include <linux/blk-mq.h>\n#endif\n\nBEGIN\n{\n\tprintf(\"%-12s %-7s %-16s %-6s %7s\\n\", \"TIME(ms)\", \"DISK\", \"COMM\", \"PID\", \"LAT(ms)\");\n}\n\nkprobe:blk_account_io_start,\nkprobe:__blk_account_io_start\n{\n\t@start[arg0] = nsecs;\n\t@iopid[arg0] = pid;\n\t@iocomm[arg0] = comm;\n\t@disk[arg0] = ((struct request *)arg0)->q->disk->disk_name;\n}\n\nkprobe:blk_account_io_done,\nkprobe:__blk_account_io_done\n/@start[arg0] != 0 && @iopid[arg0] != 0 && @iocomm[arg0] != \"\"/\n\n{\n\t$now = nsecs;\n\tprintf(\"%-12u %-7s %-16s %-6d %7d\\n\",\n\t    elapsed / 1e6, @disk[arg0], @iocomm[arg0], @iopid[arg0],\n\t    ($now - @start[arg0]) / 1e6);\n\n\tdelete(@start[arg0]);\n\tdelete(@iopid[arg0]);\n\tdelete(@iocomm[arg0]);\n\tdelete(@disk[arg0]);\n}\n\nEND\n{\n\tclear(@start);\n\tclear(@iopid);\n\tclear(@iocomm);\n\tclear(@disk);\n}\n\n```\n\nexample: Write a BPF code that traces block device I/O latency by calculating the time difference between the start and completion of I/O operations and storing them in a histogram.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing block device I/O... Hit Ctrl-C to end.\\n\");\n}\n\nkprobe:blk_account_io_start,\nkprobe:__blk_account_io_start\n{\n\t@start[arg0] = nsecs;\n}\n\nkprobe:blk_account_io_done,\nkprobe:__blk_account_io_done\n/@start[arg0]/\n{\n\t@usecs = hist((nsecs - @start[arg0]) / 1000);\n\tdelete(@start[arg0]);\n}\n\nEND\n{\n\tclear(@start);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nTrace compact zone events with PID and latency\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself. \n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN\n{\nprintf(\"Tracing atomic critical sections... Hit Ctrl-C to end.\\n\");\n}\n\ntracepoint:atomic:atomic_start\n{\n$ts = nsecs;\n}\n\ntracepoint:atomic:atomic_end\n{\n$delta = nsecs - $ts;\nif($delta > 10000){\nprintf(\"Long atomic section detected! Time: %llu ns\\n\", $delta);\n}\n}", "stdout": "", "stderr": "stdin:4-6: ERROR: tracepoint not found: atomic:atomic_start\n", "returncode": 1, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nTrace and report long atomic critical sections in the kernel\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace usage:\n\n# trace processes calling sleep\n'kprobe:do_nanosleep { printf(\"PID %d sleeping...\n\", pid); }'\n\n# count syscalls by process name\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Files opened by process\n'tracepoint:syscalls:sys_enter_open { printf(\"%s %s\n\", comm, str(args->filename)); }'\n\n# Syscall count by program\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Read bytes by process:\n'tracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }'\n\n# Read size distribution by process:\n'tracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }'\n\n# Show per-second syscall rates:\n'tracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }'\n\n# Trace disk size by process\n'tracepoint:block:block_rq_issue { printf(\"%d %s %d\n\", pid, comm, args->bytes); }'\n\n# Count page faults by process\n'software:faults:1 { @[comm] = count(); }'\n\n# Count LLC cache misses by process name and PID (uses PMCs):\n'hardware:cache-misses:1000000 { @[comm, pid] = count(); }'\n\n# Profile user-level stacks at 99 Hertz, for PID 189:\n'profile:hz:99 /pid == 189/ { @[ustack] = count(); }'\n\n# Files opened, for processes in the root cgroup-v2\n'tracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\n\", str(args->filename)); }'\n\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces voluntary sleep calls, printing the time, parent process ID (PPID), parent process command (PCOMM), process ID (PID), process command (COMM), and duration in seconds.\n\n```\n#ifndef BPFTRACE_HAVE_BTF\n#include <linux/time.h>\n#include <linux/sched.h>\n#endif\n\nBEGIN\n{\n\tprintf(\"Tracing sleeps. Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-8s %-6s %-16s %-6s %-16s %s\\n\", \"TIME\", \"PPID\", \"PCOMM\",\n\t    \"PID\", \"COMM\", \"SECONDS\");\n}\n\ntracepoint:syscalls:sys_enter_nanosleep\n/args.rqtp->tv_sec + args.rqtp->tv_nsec/\n{\n\t$task = (struct task_struct *)curtask;\n\ttime(\"%H:%M:%S \");\n\tprintf(\"%-6d %-16s %-6d %-16s %d.%03d\\n\", $task->real_parent->pid,\n\t    $task->real_parent->comm, pid, comm,\n\t    args.rqtp->tv_sec, (uint64)args.rqtp->tv_nsec / 1e6);\n}\n\n```\n\nexample: Write a BPF code that traces the CPU scheduler and records the latency of tasks in the run queue, using the sched_wakeup, sched_wakeup_new, and sched_switch tracepoints, and displays the latency as a histogram.\n\n```\n#include <linux/sched.h>\n\nBEGIN\n{\n\tprintf(\"Tracing CPU scheduler... Hit Ctrl-C to end.\\n\");\n}\n\ntracepoint:sched:sched_wakeup,\ntracepoint:sched:sched_wakeup_new\n{\n\t@qtime[args.pid] = nsecs;\n}\n\ntracepoint:sched:sched_switch\n{\n\tif (args.prev_state == TASK_RUNNING) {\n\t\t@qtime[args.prev_pid] = nsecs;\n\t}\n\n\t$ns = @qtime[args.next_pid];\n\tif ($ns) {\n\t\t@usecs = hist((nsecs - $ns) / 1000);\n\t}\n\tdelete(@qtime[args.next_pid]);\n}\n\nEND\n{\n\tclear(@qtime);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nTrace and report long atomic critical sections in the kernel\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself. \n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN\n{\n\tprintf(\"Tracing kill() signals... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-9s %-6s %-16s %-4s %-6s %s\\n\", \"TIME\", \"PID\", \"COMM\", \"SIG\",\n\t    \"TPID\", \"RESULT\");\n}\n\ntracepoint:syscalls:sys_enter_kill\n{\n\t@tpid[tid] = args.pid;\n\t@tsig[tid] = args.sig;\n}\n\ntracepoint:syscalls:sys_exit_kill\n/@tpid[tid]/\n{\n\ttime(\"%H:%M:%S  \");\n\tprintf(\"%-6d %-16s %-4d %-6d %d\\n\", pid, comm, @tsig[tid], @tpid[tid],\n\t    args.ret);\n\tdelete(@tpid[tid]);\n\tdelete(@tsig[tid]);\n}", "stdout": "", "stderr": "stdin:10:15-20: ERROR: Can not access field 'pid' on type '(ctx) struct _tracepoint_syscalls_sys_enter_kill *'. Try dereferencing it first, or using '->'\n    @tpid[tid] = args.pid;\n                 ~~~~~\nstdin:11:15-20: ERROR: Can not access field 'sig' on type '(ctx) struct _tracepoint_syscalls_sys_enter_kill *'. Try dereferencing it first, or using '->'\n    @tsig[tid] = args.sig;\n                 ~~~~~\nstdin:19:6-11: ERROR: Can not access field 'ret' on type '(ctx) struct _tracepoint_syscalls_sys_exit_kill *'. Try dereferencing it first, or using '->'\n        args.ret);\n        ~~~~~\n", "returncode": 1, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nTrace signals issued by the kill() syscall system-wide\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace usage:\n\n# trace processes calling sleep\n'kprobe:do_nanosleep { printf(\"PID %d sleeping...\n\", pid); }'\n\n# count syscalls by process name\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Files opened by process\n'tracepoint:syscalls:sys_enter_open { printf(\"%s %s\n\", comm, str(args->filename)); }'\n\n# Syscall count by program\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Read bytes by process:\n'tracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }'\n\n# Read size distribution by process:\n'tracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }'\n\n# Show per-second syscall rates:\n'tracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }'\n\n# Trace disk size by process\n'tracepoint:block:block_rq_issue { printf(\"%d %s %d\n\", pid, comm, args->bytes); }'\n\n# Count page faults by process\n'software:faults:1 { @[comm] = count(); }'\n\n# Count LLC cache misses by process name and PID (uses PMCs):\n'hardware:cache-misses:1000000 { @[comm, pid] = count(); }'\n\n# Profile user-level stacks at 99 Hertz, for PID 189:\n'profile:hz:99 /pid == 189/ { @[ustack] = count(); }'\n\n# Files opened, for processes in the root cgroup-v2\n'tracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\n\", str(args->filename)); }'\n\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Please write a BPF code that traces signals issued by the kill() syscall and prints information such as the timestamp, process ID, command, signal, target process ID, and the result of the kill() syscall.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing kill() signals... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-9s %-6s %-16s %-4s %-6s %s\\n\", \"TIME\", \"PID\", \"COMM\", \"SIG\",\n\t    \"TPID\", \"RESULT\");\n}\n\ntracepoint:syscalls:sys_enter_kill\n{\n\t@tpid[tid] = args.pid;\n\t@tsig[tid] = args.sig;\n}\n\ntracepoint:syscalls:sys_exit_kill\n/@tpid[tid]/\n{\n\ttime(\"%H:%M:%S  \");\n\tprintf(\"%-6d %-16s %-4d %-6d %d\\n\", pid, comm, @tsig[tid], @tpid[tid],\n\t    args.ret);\n\tdelete(@tpid[tid]);\n\tdelete(@tsig[tid]);\n}\n\n```\n\nexample: Write a BPF code that traces the syscalls statfs(), statx(), newstat(), and newlstat(), providing information about the PID, process name, error code, and path being accessed.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing stat syscalls... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-6s %-16s %3s %s\\n\", \"PID\", \"COMM\", \"ERR\", \"PATH\");\n}\n\ntracepoint:syscalls:sys_enter_statfs\n{\n\t@filename[tid] = args.pathname;\n}\n\ntracepoint:syscalls:sys_enter_statx,\ntracepoint:syscalls:sys_enter_newstat,\ntracepoint:syscalls:sys_enter_newlstat\n{\n\t@filename[tid] = args.filename;\n}\n\ntracepoint:syscalls:sys_exit_statfs,\ntracepoint:syscalls:sys_exit_statx,\ntracepoint:syscalls:sys_exit_newstat,\ntracepoint:syscalls:sys_exit_newlstat\n/@filename[tid]/\n{\n\t$ret = args.ret;\n\t$errno = $ret >= 0 ? 0 : - $ret;\n\n\tprintf(\"%-6d %-16s %3d %s\\n\", pid, comm, $errno,\n\t    str(@filename[tid]));\n\tdelete(@filename[tid]);\n}\n\nEND\n{\n\tclear(@filename);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nTrace signals issued by the kill() syscall system-wide\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself. \n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e #include <linux/mutex.h>\n\tBEGIN\n\t{\n    \tprintf(\"Tracing Kernel Mutex Lock Events... Hit Ctrl-C to End\\n\");\n\t}\n\ttracepoint:lock:mutex_lock\n\t{\n    \t@stats = count();\n\t}\n\ttracepoint:lock:mutex_unlock\n\t{\n    \t@stats -= count();\n\t}\n\tEND\n\t{\n    \tclear(@stats);\n\t}", "stdout": "", "stderr": "stdin:5-6: ERROR: tracepoint not found: lock:mutex_lock\n", "returncode": 1, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nTraces kernel mutex lock events and display locks statistics.\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace usage:\n\n# trace processes calling sleep\n'kprobe:do_nanosleep { printf(\"PID %d sleeping...\n\", pid); }'\n\n# count syscalls by process name\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Files opened by process\n'tracepoint:syscalls:sys_enter_open { printf(\"%s %s\n\", comm, str(args->filename)); }'\n\n# Syscall count by program\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Read bytes by process:\n'tracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }'\n\n# Read size distribution by process:\n'tracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }'\n\n# Show per-second syscall rates:\n'tracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }'\n\n# Trace disk size by process\n'tracepoint:block:block_rq_issue { printf(\"%d %s %d\n\", pid, comm, args->bytes); }'\n\n# Count page faults by process\n'software:faults:1 { @[comm] = count(); }'\n\n# Count LLC cache misses by process name and PID (uses PMCs):\n'hardware:cache-misses:1000000 { @[comm, pid] = count(); }'\n\n# Profile user-level stacks at 99 Hertz, for PID 189:\n'profile:hz:99 /pid == 189/ { @[ustack] = count(); }'\n\n# Files opened, for processes in the root cgroup-v2\n'tracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\n\", str(args->filename)); }'\n\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces the CPU scheduler and records the latency of tasks in the run queue, using the sched_wakeup, sched_wakeup_new, and sched_switch tracepoints, and displays the latency as a histogram.\n\n```\n#include <linux/sched.h>\n\nBEGIN\n{\n\tprintf(\"Tracing CPU scheduler... Hit Ctrl-C to end.\\n\");\n}\n\ntracepoint:sched:sched_wakeup,\ntracepoint:sched:sched_wakeup_new\n{\n\t@qtime[args.pid] = nsecs;\n}\n\ntracepoint:sched:sched_switch\n{\n\tif (args.prev_state == TASK_RUNNING) {\n\t\t@qtime[args.prev_pid] = nsecs;\n\t}\n\n\t$ns = @qtime[args.next_pid];\n\tif ($ns) {\n\t\t@usecs = hist((nsecs - $ns) / 1000);\n\t}\n\tdelete(@qtime[args.next_pid]);\n}\n\nEND\n{\n\tclear(@qtime);\n}\n\n```\n\nexample: Write a BPF code that traces md flush events and displays the time, process ID, command, and device information of each event.\n\n```\n#ifndef BPFTRACE_HAVE_BTF\n#include <linux/genhd.h>\n#include <linux/bio.h>\n#endif\n\nBEGIN\n{\n\tprintf(\"Tracing md flush events... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-8s %-6s %-16s %s\\n\", \"TIME\", \"PID\", \"COMM\", \"DEVICE\");\n}\n\nkprobe:md_flush_request\n{\n\ttime(\"%H:%M:%S \");\n\tprintf(\"%-6d %-16s %s\\n\", pid, comm,\n\t    ((struct bio *)arg1)->bi_bdev->bd_disk->disk_name);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nTraces kernel mutex lock events and display locks statistics.\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself. \n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN\n\t{\n\t\tprintf(\"Tracing System V Shared Memory... Hit Ctrl-C to end.\\n\");\n\t\tprintf(\"%-6s %-16s %3s \\n\",\"PID\" , \"COMM\", \"SHARED MEMORY SIZE\");\n\t}\n\ttracepoint:syscalls:sys_enter_shmat\n\t{\n\t\tsize=args->size;\n\t}\n\ttracepoint:syscalls:sys_exit_shmat\n\t/{\n\t\tprintf(\"%-6d %-16s %d\\n\",pid,comm,size);\n\t}/", "stdout": "", "stderr": "stdin:8:3-8: ERROR: syntax error, unexpected =, expecting }\n        size=args->size;\n        ~~~~~\n", "returncode": 1, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nTrace System V shared memory syscalls and display the size of the shared memory segment\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace usage:\n\n# trace processes calling sleep\n'kprobe:do_nanosleep { printf(\"PID %d sleeping...\n\", pid); }'\n\n# count syscalls by process name\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Files opened by process\n'tracepoint:syscalls:sys_enter_open { printf(\"%s %s\n\", comm, str(args->filename)); }'\n\n# Syscall count by program\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Read bytes by process:\n'tracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }'\n\n# Read size distribution by process:\n'tracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }'\n\n# Show per-second syscall rates:\n'tracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }'\n\n# Trace disk size by process\n'tracepoint:block:block_rq_issue { printf(\"%d %s %d\n\", pid, comm, args->bytes); }'\n\n# Count page faults by process\n'software:faults:1 { @[comm] = count(); }'\n\n# Count LLC cache misses by process name and PID (uses PMCs):\n'hardware:cache-misses:1000000 { @[comm, pid] = count(); }'\n\n# Profile user-level stacks at 99 Hertz, for PID 189:\n'profile:hz:99 /pid == 189/ { @[ustack] = count(); }'\n\n# Files opened, for processes in the root cgroup-v2\n'tracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\n\", str(args->filename)); }'\n\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces the syscalls statfs(), statx(), newstat(), and newlstat(), providing information about the PID, process name, error code, and path being accessed.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing stat syscalls... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-6s %-16s %3s %s\\n\", \"PID\", \"COMM\", \"ERR\", \"PATH\");\n}\n\ntracepoint:syscalls:sys_enter_statfs\n{\n\t@filename[tid] = args.pathname;\n}\n\ntracepoint:syscalls:sys_enter_statx,\ntracepoint:syscalls:sys_enter_newstat,\ntracepoint:syscalls:sys_enter_newlstat\n{\n\t@filename[tid] = args.filename;\n}\n\ntracepoint:syscalls:sys_exit_statfs,\ntracepoint:syscalls:sys_exit_statx,\ntracepoint:syscalls:sys_exit_newstat,\ntracepoint:syscalls:sys_exit_newlstat\n/@filename[tid]/\n{\n\t$ret = args.ret;\n\t$errno = $ret >= 0 ? 0 : - $ret;\n\n\tprintf(\"%-6d %-16s %3d %s\\n\", pid, comm, $errno,\n\t    str(@filename[tid]));\n\tdelete(@filename[tid]);\n}\n\nEND\n{\n\tclear(@filename);\n}\n\n```\n\nexample: Write a BPF code that traces sync-related system calls, such as sync(), syncfs(), fsync(), and fdatasync(), and prints the time, process ID, command, and event for each traced system call.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing sync syscalls... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-9s %-6s %-16s %s\\n\", \"TIME\", \"PID\", \"COMM\", \"EVENT\");\n}\n\ntracepoint:syscalls:sys_enter_sync,\ntracepoint:syscalls:sys_enter_syncfs,\ntracepoint:syscalls:sys_enter_fsync,\ntracepoint:syscalls:sys_enter_fdatasync,\ntracepoint:syscalls:sys_enter_sync_file_range*,\ntracepoint:syscalls:sys_enter_msync\n{\n\ttime(\"%H:%M:%S  \");\n\tprintf(\"%-6d %-16s %s\\n\", pid, comm, probe);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nTrace System V shared memory syscalls and display the size of the shared memory segment\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself. \n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e @[sluballoc]=count()", "stdout": "", "stderr": "stdin:1:1-2: ERROR: syntax error, unexpected map, expecting {\n@[sluballoc]=count()\n~\n", "returncode": 1, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nSummarizes Kernel SLAB/SLUB memory cache allocation rate top\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace usage:\n\n# trace processes calling sleep\n'kprobe:do_nanosleep { printf(\"PID %d sleeping...\n\", pid); }'\n\n# count syscalls by process name\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Files opened by process\n'tracepoint:syscalls:sys_enter_open { printf(\"%s %s\n\", comm, str(args->filename)); }'\n\n# Syscall count by program\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Read bytes by process:\n'tracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }'\n\n# Read size distribution by process:\n'tracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }'\n\n# Show per-second syscall rates:\n'tracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }'\n\n# Trace disk size by process\n'tracepoint:block:block_rq_issue { printf(\"%d %s %d\n\", pid, comm, args->bytes); }'\n\n# Count page faults by process\n'software:faults:1 { @[comm] = count(); }'\n\n# Count LLC cache misses by process name and PID (uses PMCs):\n'hardware:cache-misses:1000000 { @[comm, pid] = count(); }'\n\n# Profile user-level stacks at 99 Hertz, for PID 189:\n'profile:hz:99 /pid == 189/ { @[ustack] = count(); }'\n\n# Files opened, for processes in the root cgroup-v2\n'tracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\n\", str(args->filename)); }'\n\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces the kernel OOM killer and prints basic details, including the system load averages, providing context on the system state at the time of the OOM.\n\n```\n#ifndef BPFTRACE_HAVE_BTF\n#include <linux/oom.h>\n#endif\n\nBEGIN\n{\n\tprintf(\"Tracing oom_kill_process()... Hit Ctrl-C to end.\\n\");\n}\n\nkprobe:oom_kill_process\n{\n\t$oc = (struct oom_control *)arg0;\n\ttime(\"%H:%M:%S \");\n\tprintf(\"Triggered by PID %d (\\\"%s\\\"), \", pid, comm);\n\tprintf(\"OOM kill of PID %d (\\\"%s\\\"), %d pages, loadavg: \",\n\t    $oc->chosen->pid, $oc->chosen->comm, $oc->totalpages);\n\tcat(\"/proc/loadavg\");\n}\n\n```\n\nexample: Write a BPF code that monitors the swapins by process.\n\n```\nkprobe:swap_readpage\n{\n        @[comm, pid] = count();\n}\n\ninterval:s:1\n{\n        time();\n        print(@);\n        clear(@);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nSummarizes Kernel SLAB/SLUB memory cache allocation rate top\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself. \n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN\n\t{\n\t\tprintf(\"Tracing sync syscalls... Hit Ctrl-C to end.\\n\");\n\t\tprintf(\"%-9s %-6s %-16s %s\\n\", \"TIME\", \"PID\", \"COMM\", \"EVENT\");\n\t}\n\t\n\ttracepoint:syscalls:sys_enter_sync\n\t{\n\t\ttime(\"%H:%M:%S  \");\n\t\tprintf(\"%-6d %-16s %s\\n\", pid, comm, probe);\n\t}", "stdout": "Attaching 2 probes...\nTracing sync syscalls... Hit Ctrl-C to end.\nTIME      PID    COMM             EVENT\n\n\n", "stderr": "", "returncode": 0, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nTrace sync() syscall and print the caller pid\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace usage:\n\n# trace processes calling sleep\n'kprobe:do_nanosleep { printf(\"PID %d sleeping...\n\", pid); }'\n\n# count syscalls by process name\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Files opened by process\n'tracepoint:syscalls:sys_enter_open { printf(\"%s %s\n\", comm, str(args->filename)); }'\n\n# Syscall count by program\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Read bytes by process:\n'tracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }'\n\n# Read size distribution by process:\n'tracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }'\n\n# Show per-second syscall rates:\n'tracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }'\n\n# Trace disk size by process\n'tracepoint:block:block_rq_issue { printf(\"%d %s %d\n\", pid, comm, args->bytes); }'\n\n# Count page faults by process\n'software:faults:1 { @[comm] = count(); }'\n\n# Count LLC cache misses by process name and PID (uses PMCs):\n'hardware:cache-misses:1000000 { @[comm, pid] = count(); }'\n\n# Profile user-level stacks at 99 Hertz, for PID 189:\n'profile:hz:99 /pid == 189/ { @[ustack] = count(); }'\n\n# Files opened, for processes in the root cgroup-v2\n'tracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\n\", str(args->filename)); }'\n\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces sync-related system calls, such as sync(), syncfs(), fsync(), and fdatasync(), and prints the time, process ID, command, and event for each traced system call.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing sync syscalls... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-9s %-6s %-16s %s\\n\", \"TIME\", \"PID\", \"COMM\", \"EVENT\");\n}\n\ntracepoint:syscalls:sys_enter_sync,\ntracepoint:syscalls:sys_enter_syncfs,\ntracepoint:syscalls:sys_enter_fsync,\ntracepoint:syscalls:sys_enter_fdatasync,\ntracepoint:syscalls:sys_enter_sync_file_range*,\ntracepoint:syscalls:sys_enter_msync\n{\n\ttime(\"%H:%M:%S  \");\n\tprintf(\"%-6d %-16s %s\\n\", pid, comm, probe);\n}\n\n```\n\nexample: Write a BPF code that traces the syscalls statfs(), statx(), newstat(), and newlstat(), providing information about the PID, process name, error code, and path being accessed.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing stat syscalls... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-6s %-16s %3s %s\\n\", \"PID\", \"COMM\", \"ERR\", \"PATH\");\n}\n\ntracepoint:syscalls:sys_enter_statfs\n{\n\t@filename[tid] = args.pathname;\n}\n\ntracepoint:syscalls:sys_enter_statx,\ntracepoint:syscalls:sys_enter_newstat,\ntracepoint:syscalls:sys_enter_newlstat\n{\n\t@filename[tid] = args.filename;\n}\n\ntracepoint:syscalls:sys_exit_statfs,\ntracepoint:syscalls:sys_exit_statx,\ntracepoint:syscalls:sys_exit_newstat,\ntracepoint:syscalls:sys_exit_newlstat\n/@filename[tid]/\n{\n\t$ret = args.ret;\n\t$errno = $ret >= 0 ? 0 : - $ret;\n\n\tprintf(\"%-6d %-16s %3d %s\\n\", pid, comm, $errno,\n\t    str(@filename[tid]));\n\tdelete(@filename[tid]);\n}\n\nEND\n{\n\tclear(@filename);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nTrace sync() syscall and print the caller pid\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself. \n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN\n{\n\tprintf(\"Tracing tcp rtt. Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-8s %-8s %-16s \", \"TIME\", \"PID\", \"COMM\");\n\tprintf(\"%-39s %-6s %-39s %-6s\\n\", \"SADDR\", \"SPORT\", \"DADDR\", \"DPORT\");\n}\n\nkprobe:tcp_connect\n{\n  $sk = ((struct sock *) arg0);\n  $inet_family = $sk->__sk_common.skc_family;\n\n  if ($inet_family == AF_INET || $inet_family == AF_INET6) {\n    if ($inet_family == AF_INET) {\n      $daddr = ntop($sk->__sk_common.skc_daddr);\n      $saddr = ntop($sk->__sk_common.skc_rcv_saddr);\n    } else {\n      $daddr = ntop($sk->__sk_common.skc_v6_daddr.in6_u.u6_addr8);\n      $saddr = ntop($sk->__sk_common.skc_v6_rcv_saddr.in6_u.u6_addr8);\n    }\n    $lport = $sk->__sk_common.skc_num;\n    $dport = $sk->__sk_common.skc_dport;\n\n    // Destination port is big endian, it must be flipped\n    $dport = bswap($dport);\n\n    time(\"%H:%M:%S \");\n    printf(\"%-8d %-16s \", pid, comm);\n    printf(\"%-39s %-6d %-39s %-6d\\n\", $saddr, $lport, $daddr, $dport);\n  }\n}", "stdout": "", "stderr": "stdin:13:23-30: ERROR: Unknown identifier: 'AF_INET'\n  if ($inet_family == AF_INET || $inet_family == AF_INET6) {\n                      ~~~~~~~\nstdin:13:50-58: ERROR: Unknown identifier: 'AF_INET6'\n  if ($inet_family == AF_INET || $inet_family == AF_INET6) {\n                                                 ~~~~~~~~\nstdin:14:25-32: ERROR: Unknown identifier: 'AF_INET'\n    if ($inet_family == AF_INET) {\n                        ~~~~~~~\n", "returncode": 1, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nTrace TCP round trip time (RTT) and print the sender and receiver IP addresses and ports\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace usage:\n\n# trace processes calling sleep\n'kprobe:do_nanosleep { printf(\"PID %d sleeping...\n\", pid); }'\n\n# count syscalls by process name\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Files opened by process\n'tracepoint:syscalls:sys_enter_open { printf(\"%s %s\n\", comm, str(args->filename)); }'\n\n# Syscall count by program\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Read bytes by process:\n'tracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }'\n\n# Read size distribution by process:\n'tracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }'\n\n# Show per-second syscall rates:\n'tracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }'\n\n# Trace disk size by process\n'tracepoint:block:block_rq_issue { printf(\"%d %s %d\n\", pid, comm, args->bytes); }'\n\n# Count page faults by process\n'software:faults:1 { @[comm] = count(); }'\n\n# Count LLC cache misses by process name and PID (uses PMCs):\n'hardware:cache-misses:1000000 { @[comm, pid] = count(); }'\n\n# Profile user-level stacks at 99 Hertz, for PID 189:\n'profile:hz:99 /pid == 189/ { @[ustack] = count(); }'\n\n# Files opened, for processes in the root cgroup-v2\n'tracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\n\", str(args->filename)); }'\n\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces TCP connections by dynamically tracing kernel functions and prints out the time, PID, and addresses and ports of the source and destination of each connection.\n\n```\n#ifndef BPFTRACE_HAVE_BTF\n#include <linux/socket.h>\n#include <net/sock.h>\n#else\n#include <sys/socket.h>\n#endif\n\nBEGIN\n{\n  printf(\"Tracing tcp connections. Hit Ctrl-C to end.\\n\");\n  printf(\"%-8s %-8s %-16s \", \"TIME\", \"PID\", \"COMM\");\n  printf(\"%-39s %-6s %-39s %-6s\\n\", \"SADDR\", \"SPORT\", \"DADDR\", \"DPORT\");\n}\n\nkprobe:tcp_connect\n{\n  $sk = ((struct sock *) arg0);\n  $inet_family = $sk->__sk_common.skc_family;\n\n  if ($inet_family == AF_INET || $inet_family == AF_INET6) {\n    if ($inet_family == AF_INET) {\n      $daddr = ntop($sk->__sk_common.skc_daddr);\n      $saddr = ntop($sk->__sk_common.skc_rcv_saddr);\n    } else {\n      $daddr = ntop($sk->__sk_common.skc_v6_daddr.in6_u.u6_addr8);\n      $saddr = ntop($sk->__sk_common.skc_v6_rcv_saddr.in6_u.u6_addr8);\n    }\n    $lport = $sk->__sk_common.skc_num;\n    $dport = $sk->__sk_common.skc_dport;\n\n    // Destination port is big endian, it must be flipped\n    $dport = bswap($dport);\n\n    time(\"%H:%M:%S \");\n    printf(\"%-8d %-16s \", pid, comm);\n    printf(\"%-39s %-6d %-39s %-6d\\n\", $saddr, $lport, $daddr, $dport);\n  }\n}\n\n```\n\nexample: Write a BPF code that traces TCP session lifespans and prints details of the connections, including the process ID, command, local and remote addresses and ports, and data transmission statistics.\n\n```\n#ifndef BPFTRACE_HAVE_BTF\n#include <net/tcp_states.h>\n#include <net/sock.h>\n#include <linux/socket.h>\n#include <linux/tcp.h>\n#else\n#include <sys/socket.h>\n#endif\n\nBEGIN\n{\n\tprintf(\"%-5s %-10s %-15s %-5s %-15s %-5s \", \"PID\", \"COMM\",\n\t    \"LADDR\", \"LPORT\", \"RADDR\", \"RPORT\");\n\tprintf(\"%5s %5s %s\\n\", \"TX_KB\", \"RX_KB\", \"MS\");\n}\n\nkprobe:tcp_set_state\n{\n\t$sk = (struct sock *)arg0;\n\t$newstate = arg1;\n\n\t\n\n\t// record first timestamp seen for this socket\n\tif ($newstate < TCP_FIN_WAIT1 && @birth[$sk] == 0) {\n\t\t@birth[$sk] = nsecs;\n\t}\n\n\t// record PID & comm on SYN_SENT\n\tif ($newstate == TCP_SYN_SENT || $newstate == TCP_LAST_ACK) {\n\t\t@skpid[$sk] = pid;\n\t\t@skcomm[$sk] = comm;\n\t}\n\n\t// session ended: calculate lifespan and print\n\tif ($newstate == TCP_CLOSE && @birth[$sk]) {\n\t\t$delta_ms = (nsecs - @birth[$sk]) / 1e6;\n\t\t$lport = $sk->__sk_common.skc_num;\n\t\t$dport = $sk->__sk_common.skc_dport;\n\t\t$dport = bswap($dport);\n\t\t$tp = (struct tcp_sock *)$sk;\n\t\t$pid = @skpid[$sk];\n\t\t$comm = @skcomm[$sk];\n\t\tif ($comm == \"\") {\n\t\t\t// not cached, use current task\n\t\t\t$pid = pid;\n\t\t\t$comm = comm;\n\t\t}\n\n\t\t$family = $sk->__sk_common.skc_family;\n\t\t$saddr = ntop(0);\n\t\t$daddr = ntop(0);\n\t\tif ($family == AF_INET) {\n\t\t\t$saddr = ntop(AF_INET, $sk->__sk_common.skc_rcv_saddr);\n\t\t\t$daddr = ntop(AF_INET, $sk->__sk_common.skc_daddr);\n\t\t} else {\n\t\t\t// AF_INET6\n\t\t\t$saddr = ntop(AF_INET6,\n\t\t\t    $sk->__sk_common.skc_v6_rcv_saddr.in6_u.u6_addr8);\n\t\t\t$daddr = ntop(AF_INET6,\n\t\t\t    $sk->__sk_common.skc_v6_daddr.in6_u.u6_addr8);\n\t\t}\n\t\tprintf(\"%-5d %-10.10s %-15s %-5d %-15s %-6d \", $pid,\n\t\t    $comm, $saddr, $lport, $daddr, $dport);\n\t\tprintf(\"%5d %5d %d\\n\", $tp->bytes_acked / 1024,\n\t\t    $tp->bytes_received / 1024, $delta_ms);\n\n\t\tdelete(@birth[$sk]);\n\t\tdelete(@skpid[$sk]);\n\t\tdelete(@skcomm[$sk]);\n\t}\n}\n\nEND\n{\n\tclear(@birth); clear(@skpid); clear(@skcomm);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nTrace TCP round trip time (RTT) and print the sender and receiver IP addresses and ports\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself. \n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN\n{\n\tprintf(\"Tracing ZFS operation latency... Hit Ctrl-C to end.\\n\");\n}\n\nkprobe:zfs_operation_latency\n{\n\t@start[tid] = nsecs;\n\t@name[tid] = func;\n}\n\nkretprobe:zfs_operation_latency\n/@start[tid]/\n{\n\t@us[@name[tid]] = hist((nsecs - @start[tid]) / 1000);\n\tdelete(@start[tid]);\n\tdelete(@name[tid]);\n}\n\nEND\n{\n\tclear(@start);\n\tclear(@name);\n}", "stdout": "Attaching 4 probes...\n", "stderr": "stdin:4-6: WARNING: zfs_operation_latency is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\nstdin:10-12: WARNING: zfs_operation_latency is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\ncannot attach kprobe, probe entry may not exist\nERROR: Error attaching probe: 'kretprobe:zfs_operation_latency'\n", "returncode": 255, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nSummarize ZFS operation latency distribution as a histogram\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace usage:\n\n# trace processes calling sleep\n'kprobe:do_nanosleep { printf(\"PID %d sleeping...\n\", pid); }'\n\n# count syscalls by process name\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Files opened by process\n'tracepoint:syscalls:sys_enter_open { printf(\"%s %s\n\", comm, str(args->filename)); }'\n\n# Syscall count by program\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Read bytes by process:\n'tracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }'\n\n# Read size distribution by process:\n'tracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }'\n\n# Show per-second syscall rates:\n'tracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }'\n\n# Trace disk size by process\n'tracepoint:block:block_rq_issue { printf(\"%d %s %d\n\", pid, comm, args->bytes); }'\n\n# Count page faults by process\n'software:faults:1 { @[comm] = count(); }'\n\n# Count LLC cache misses by process name and PID (uses PMCs):\n'hardware:cache-misses:1000000 { @[comm, pid] = count(); }'\n\n# Profile user-level stacks at 99 Hertz, for PID 189:\n'profile:hz:99 /pid == 189/ { @[ustack] = count(); }'\n\n# Files opened, for processes in the root cgroup-v2\n'tracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\n\", str(args->filename)); }'\n\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces the latency of four common XFS file system operations (read, write, open, and fsync) and prints a summary of the operation latency, using the bpftrace and eBPF tools.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing XFS operation latency... Hit Ctrl-C to end.\\n\");\n}\n\nkprobe:xfs_file_read_iter,\nkprobe:xfs_file_write_iter,\nkprobe:xfs_file_open,\nkprobe:xfs_file_fsync\n{\n\t@start[tid] = nsecs;\n\t@name[tid] = func;\n}\n\nkretprobe:xfs_file_read_iter,\nkretprobe:xfs_file_write_iter,\nkretprobe:xfs_file_open,\nkretprobe:xfs_file_fsync\n/@start[tid]/\n{\n\t@us[@name[tid]] = hist((nsecs - @start[tid]) / 1000);\n\tdelete(@start[tid]);\n\tdelete(@name[tid]);\n}\n\nEND\n{\n\tclear(@start);\n\tclear(@name);\n}\n\n```\n\nexample: Write a BPF code that traces block device I/O latency by calculating the time difference between the start and completion of I/O operations and storing them in a histogram.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing block device I/O... Hit Ctrl-C to end.\\n\");\n}\n\nkprobe:blk_account_io_start,\nkprobe:__blk_account_io_start\n{\n\t@start[arg0] = nsecs;\n}\n\nkprobe:blk_account_io_done,\nkprobe:__blk_account_io_done\n/@start[arg0]/\n{\n\t@usecs = hist((nsecs - @start[arg0]) / 1000);\n\tdelete(@start[arg0]);\n}\n\nEND\n{\n\tclear(@start);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nSummarize ZFS operation latency distribution as a histogram\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself. \n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:swap_readpage\n{\n        @[comm, pid] = count();\n}\n\ninterval:s:1\n{\n        time();\n        print(@);\n        clear(@);\n}", "stdout": "Attaching 2 probes...\n16:39:32\n\n16:39:33\n\n16:39:34\n\n16:39:35\n\n16:39:36\n\n16:39:37\n\n16:39:38\n\n16:39:39\n\n16:39:40\n\n16:39:41\n\n16:39:42\n\n16:39:43\n\n16:39:44\n\n16:39:45\n\n16:39:46\n\n16:39:47\n\n16:39:48\n\n16:39:49\n\n16:39:50\n\n\n\n\n", "stderr": "", "returncode": 0, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nCounts swapins by process, to show which process is affected by swapping\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace usage:\n\n# trace processes calling sleep\n'kprobe:do_nanosleep { printf(\"PID %d sleeping...\n\", pid); }'\n\n# count syscalls by process name\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Files opened by process\n'tracepoint:syscalls:sys_enter_open { printf(\"%s %s\n\", comm, str(args->filename)); }'\n\n# Syscall count by program\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Read bytes by process:\n'tracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }'\n\n# Read size distribution by process:\n'tracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }'\n\n# Show per-second syscall rates:\n'tracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }'\n\n# Trace disk size by process\n'tracepoint:block:block_rq_issue { printf(\"%d %s %d\n\", pid, comm, args->bytes); }'\n\n# Count page faults by process\n'software:faults:1 { @[comm] = count(); }'\n\n# Count LLC cache misses by process name and PID (uses PMCs):\n'hardware:cache-misses:1000000 { @[comm, pid] = count(); }'\n\n# Profile user-level stacks at 99 Hertz, for PID 189:\n'profile:hz:99 /pid == 189/ { @[ustack] = count(); }'\n\n# Files opened, for processes in the root cgroup-v2\n'tracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\n\", str(args->filename)); }'\n\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that monitors the swapins by process.\n\n```\nkprobe:swap_readpage\n{\n        @[comm, pid] = count();\n}\n\ninterval:s:1\n{\n        time();\n        print(@);\n        clear(@);\n}\n\n```\n\nexample: Write a BPF code that counts the number of system calls and the number of processes. It also prints the top 10 system call IDs and the top 10 processes at the end.\n\n```\nBEGIN\n{\n\tprintf(\"Counting syscalls... Hit Ctrl-C to end.\\n\");\n\t// ausyscall --dump | awk 'NR > 1 { printf(\"\\t@sysname[%d] = \\\"%s\\\";\\n\", $1, $2); }'\n}\n\ntracepoint:raw_syscalls:sys_enter\n{\n\t@syscall[args.id] = count();\n\t@process[comm] = count();\n}\n\nEND\n{\n\tprintf(\"\\nTop 10 syscalls IDs:\\n\");\n\tprint(@syscall, 10);\n\tclear(@syscall);\n\n\tprintf(\"\\nTop 10 processes:\\n\");\n\tprint(@process, 10);\n\tclear(@process);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nCounts swapins by process, to show which process is affected by swapping\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself. \n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e #!/usr/bin/ 'kprobe:connect { @[comm] = count(); }", "stdout": "", "stderr": "stdin:1:1-2: ERROR: invalid character '#'\n#!/usr/bin/ 'kprobe:connect { @[comm] = count(); }\n~\nstdin:1:1-3: ERROR: syntax error, unexpected !, expecting {\n#!/usr/bin/ 'kprobe:connect { @[comm] = count(); }\n~~\n", "returncode": 1, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\ntraces the kernel function performing active TCP connections(eg, via a connect() syscall; accept() are passive connections).\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace usage:\n\n# trace processes calling sleep\n'kprobe:do_nanosleep { printf(\"PID %d sleeping...\n\", pid); }'\n\n# count syscalls by process name\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Files opened by process\n'tracepoint:syscalls:sys_enter_open { printf(\"%s %s\n\", comm, str(args->filename)); }'\n\n# Syscall count by program\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Read bytes by process:\n'tracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }'\n\n# Read size distribution by process:\n'tracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }'\n\n# Show per-second syscall rates:\n'tracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }'\n\n# Trace disk size by process\n'tracepoint:block:block_rq_issue { printf(\"%d %s %d\n\", pid, comm, args->bytes); }'\n\n# Count page faults by process\n'software:faults:1 { @[comm] = count(); }'\n\n# Count LLC cache misses by process name and PID (uses PMCs):\n'hardware:cache-misses:1000000 { @[comm, pid] = count(); }'\n\n# Profile user-level stacks at 99 Hertz, for PID 189:\n'profile:hz:99 /pid == 189/ { @[ustack] = count(); }'\n\n# Files opened, for processes in the root cgroup-v2\n'tracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\n\", str(args->filename)); }'\n\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces TCP accept()s by dynamically tracing the kernel inet_csk_accept() socket function and prints information such as the time, process ID, communication, remote and local addresses and ports, and backlog length.\n\n```\n#ifndef BPFTRACE_HAVE_BTF\n#include <linux/socket.h>\n#include <net/sock.h>\n#else\n#include <sys/socket.h>\n#endif\n\nBEGIN\n{\n\tprintf(\"Tracing TCP accepts. Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-8s %-6s %-14s \", \"TIME\", \"PID\", \"COMM\");\n\tprintf(\"%-39s %-5s %-39s %-5s %s\\n\", \"RADDR\", \"RPORT\", \"LADDR\",\n\t    \"LPORT\", \"BL\");\n}\n\nkretprobe:inet_csk_accept\n{\n\t$sk = (struct sock *)retval;\n\t$inet_family = $sk->__sk_common.skc_family;\n\n\tif ($inet_family == AF_INET || $inet_family == AF_INET6) {\n\t\t// initialize variable type:\n\t\t$daddr = ntop(0);\n\t\t$saddr = ntop(0);\n\t\tif ($inet_family == AF_INET) {\n\t\t\t$daddr = ntop($sk->__sk_common.skc_daddr);\n\t\t\t$saddr = ntop($sk->__sk_common.skc_rcv_saddr);\n\t\t} else {\n\t\t\t$daddr = ntop(\n\t\t\t    $sk->__sk_common.skc_v6_daddr.in6_u.u6_addr8);\n\t\t\t$saddr = ntop(\n\t\t\t    $sk->__sk_common.skc_v6_rcv_saddr.in6_u.u6_addr8);\n\t\t}\n\t\t$lport = $sk->__sk_common.skc_num;\n\t\t$dport = $sk->__sk_common.skc_dport;\n\t\t$qlen  = $sk->sk_ack_backlog;\n\t\t$qmax  = $sk->sk_max_ack_backlog;\n\n\t\t// Destination port is big endian, it must be flipped\n\t\t$dport = bswap($dport);\n\n\t\ttime(\"%H:%M:%S \");\n\t\tprintf(\"%-6d %-14s \", pid, comm);\n\t\tprintf(\"%-39s %-5d %-39s %-5d \", $daddr, $dport, $saddr,\n\t\t    $lport);\n\t\tprintf(\"%d/%d\\n\", $qlen, $qmax);\n\t}\n}\n\n```\n\nexample: Write a BPF code that traces TCP connections by dynamically tracing kernel functions and prints out the time, PID, and addresses and ports of the source and destination of each connection.\n\n```\n#ifndef BPFTRACE_HAVE_BTF\n#include <linux/socket.h>\n#include <net/sock.h>\n#else\n#include <sys/socket.h>\n#endif\n\nBEGIN\n{\n  printf(\"Tracing tcp connections. Hit Ctrl-C to end.\\n\");\n  printf(\"%-8s %-8s %-16s \", \"TIME\", \"PID\", \"COMM\");\n  printf(\"%-39s %-6s %-39s %-6s\\n\", \"SADDR\", \"SPORT\", \"DADDR\", \"DPORT\");\n}\n\nkprobe:tcp_connect\n{\n  $sk = ((struct sock *) arg0);\n  $inet_family = $sk->__sk_common.skc_family;\n\n  if ($inet_family == AF_INET || $inet_family == AF_INET6) {\n    if ($inet_family == AF_INET) {\n      $daddr = ntop($sk->__sk_common.skc_daddr);\n      $saddr = ntop($sk->__sk_common.skc_rcv_saddr);\n    } else {\n      $daddr = ntop($sk->__sk_common.skc_v6_daddr.in6_u.u6_addr8);\n      $saddr = ntop($sk->__sk_common.skc_v6_rcv_saddr.in6_u.u6_addr8);\n    }\n    $lport = $sk->__sk_common.skc_num;\n    $dport = $sk->__sk_common.skc_dport;\n\n    // Destination port is big endian, it must be flipped\n    $dport = bswap($dport);\n\n    time(\"%H:%M:%S \");\n    printf(\"%-8d %-16s \", pid, comm);\n    printf(\"%-39s %-6d %-39s %-6d\\n\", $saddr, $lport, $daddr, $dport);\n  }\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\ntraces the kernel function performing active TCP connections(eg, via a connect() syscall; accept() are passive connections).\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself. \n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN\n{\n    printf(\"Tracing XFS operation latency... Hit Ctrl-C to end.\\n\");\n}\n\nkprobe:xfs_file_read_iter,\nkprobe:xfs_file_write_iter,\nkprobe:xfs_file_open,\nkprobe:xfs_file_fsync\n{\n    @start[tid] = nsecs;\n    @name[tid] = func;\n}\n\nkretprobe:xfs_file_read_iter,\nkretprobe:xfs_file_write_iter,\nkretprobe:xfs_file_open,\nkretprobe:xfs_file_fsync\n/@start[tid]/\n{\n    @us[@name[tid]] = hist((nsecs - @start[tid]) / 1000);\n    delete(@start[tid]);\n    delete(@name[tid]);\n}\n\nEND\n{\n    clear(@start);\n    clear(@name);\n}", "stdout": "Attaching 10 probes...\nTracing XFS operation latency... Hit Ctrl-C to end.\n\n\n\n\n\n", "stderr": "stdin:4-6: WARNING: xfs_file_read_iter is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\nstdin:6-7: WARNING: xfs_file_write_iter is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\nstdin:7-8: WARNING: xfs_file_open is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\nstdin:8-9: WARNING: xfs_file_fsync is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\nstdin:13-15: WARNING: xfs_file_read_iter is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\nstdin:15-16: WARNING: xfs_file_write_iter is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\nstdin:16-17: WARNING: xfs_file_open is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\nstdin:17-18: WARNING: xfs_file_fsync is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\ncannot attach kprobe, probe entry may not exist\nWARNING: could not attach probe kretprobe:xfs_file_read_iter, skipping.\ncannot attach kprobe, probe entry may not exist\nWARNING: could not attach probe kretprobe:xfs_file_write_iter, skipping.\ncannot attach kprobe, probe entry may not exist\nWARNING: could not attach probe kretprobe:xfs_file_open, skipping.\ncannot attach kprobe, probe entry may not exist\nWARNING: could not attach probe kretprobe:xfs_file_fsync, skipping.\ncannot attach kprobe, probe entry may not exist\nWARNING: could not attach probe kprobe:xfs_file_fsync, skipping.\ncannot attach kprobe, probe entry may not exist\nWARNING: could not attach probe kprobe:xfs_file_open, skipping.\ncannot attach kprobe, probe entry may not exist\nWARNING: could not attach probe kprobe:xfs_file_write_iter, skipping.\ncannot attach kprobe, probe entry may not exist\nWARNING: could not attach probe kprobe:xfs_file_read_iter, skipping.\n", "returncode": 0, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\ntraces XFS reads, writes, opens, and fsyncs, and summarizes their latency as a power-of-2 histogram.\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace usage:\n\n# trace processes calling sleep\n'kprobe:do_nanosleep { printf(\"PID %d sleeping...\n\", pid); }'\n\n# count syscalls by process name\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Files opened by process\n'tracepoint:syscalls:sys_enter_open { printf(\"%s %s\n\", comm, str(args->filename)); }'\n\n# Syscall count by program\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n\n# Read bytes by process:\n'tracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }'\n\n# Read size distribution by process:\n'tracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }'\n\n# Show per-second syscall rates:\n'tracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }'\n\n# Trace disk size by process\n'tracepoint:block:block_rq_issue { printf(\"%d %s %d\n\", pid, comm, args->bytes); }'\n\n# Count page faults by process\n'software:faults:1 { @[comm] = count(); }'\n\n# Count LLC cache misses by process name and PID (uses PMCs):\n'hardware:cache-misses:1000000 { @[comm, pid] = count(); }'\n\n# Profile user-level stacks at 99 Hertz, for PID 189:\n'profile:hz:99 /pid == 189/ { @[ustack] = count(); }'\n\n# Files opened, for processes in the root cgroup-v2\n'tracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\n\", str(args->filename)); }'\n\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces the latency of four common XFS file system operations (read, write, open, and fsync) and prints a summary of the operation latency, using the bpftrace and eBPF tools.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing XFS operation latency... Hit Ctrl-C to end.\\n\");\n}\n\nkprobe:xfs_file_read_iter,\nkprobe:xfs_file_write_iter,\nkprobe:xfs_file_open,\nkprobe:xfs_file_fsync\n{\n\t@start[tid] = nsecs;\n\t@name[tid] = func;\n}\n\nkretprobe:xfs_file_read_iter,\nkretprobe:xfs_file_write_iter,\nkretprobe:xfs_file_open,\nkretprobe:xfs_file_fsync\n/@start[tid]/\n{\n\t@us[@name[tid]] = hist((nsecs - @start[tid]) / 1000);\n\tdelete(@start[tid]);\n\tdelete(@name[tid]);\n}\n\nEND\n{\n\tclear(@start);\n\tclear(@name);\n}\n\n```\n\nexample: Write a BPF code that traces block device I/O latency by calculating the time difference between the start and completion of I/O operations and storing them in a histogram.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing block device I/O... Hit Ctrl-C to end.\\n\");\n}\n\nkprobe:blk_account_io_start,\nkprobe:__blk_account_io_start\n{\n\t@start[arg0] = nsecs;\n}\n\nkprobe:blk_account_io_done,\nkprobe:__blk_account_io_done\n/@start[arg0]/\n{\n\t@usecs = hist((nsecs - @start[arg0]) / 1000);\n\tdelete(@start[arg0]);\n}\n\nEND\n{\n\tclear(@start);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\ntraces XFS reads, writes, opens, and fsyncs, and summarizes their latency as a power-of-2 histogram.\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself. \n"}
