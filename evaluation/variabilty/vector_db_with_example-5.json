{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN { printf(\"Monitoring hardware interrupts... Hit Ctrl-C to end.\\n\"); } hardware:irq:1 { @[comm] = count(); } interval:s:1 { time(); print(@); clear(@); } END { clear(@); }", "stdout": "", "stderr": "stdin:1:76-91: ERROR: irq is not a hardware probe\nBEGIN { printf(\"Monitoring hardware interrupts... Hit Ctrl-C to end.\\n\"); } hardware:irq:1 { @[comm] = count(); } interval:s:1 { time(); print(@); clear(@); } END { clear(@); }\n                                                                           ~~~~~~~~~~~~~~~\n", "returncode": 1, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nMonitors the rate of specific hardware interrupts and logs the interrupt sources\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces new processes and counts the number of new process creations per second using the eBPF technology.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing new processes... Hit Ctrl-C to end.\\n\");\n\n}\n\ntracepoint:sched:sched_process_fork\n{\n\t@ = count();\n}\n\ninterval:s:1\n{\n\ttime(\"%H:%M:%S PIDs/sec: \");\n\tprint(@);\n\tclear(@);\n}\n\nEND\n{\n\tclear(@);\n}\n\n```\n\nexample: Write a BPF code that traces key VFS calls, counts the number of times each call is invoked, and prints a per-second summary.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing key VFS calls... Hit Ctrl-C to end.\\n\");\n\n}\n\nkprobe:vfs_read*,\nkprobe:vfs_write*,\nkprobe:vfs_fsync,\nkprobe:vfs_open,\nkprobe:vfs_create\n{\n\t@[func] = count();\n}\n\ninterval:s:1\n{\n\ttime();\n\tprint(@);\n\tclear(@);\n}\n\nEND\n{\n\tclear(@);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nMonitors the rate of specific hardware interrupts and logs the interrupt sources\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:sched:sched_process_fork { printf(\"Parent PID: %d, Child PID: %d, Parent CMD: %s, Child CMD: %s\\n\", pid, args->child_pid, comm, args->child_comm); }", "stdout": "Attaching 1 probe...\nParent PID: 30949, Child PID: 31002, Parent CMD: python3, Child CMD: python3\n\n\n", "stderr": "", "returncode": 0, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nTraces process forking events and logs the parent and child process IDs and command names.\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces new processes created via the exec() system call, providing the timestamp, process ID, and arguments of the executed command.\n\n```\nBEGIN\n{\n\tprintf(\"%-10s %-5s %s\\n\", \"TIME(ms)\", \"PID\", \"ARGS\");\n}\n\ntracepoint:syscalls:sys_enter_exec*\n{\n\tprintf(\"%-10u %-5d \", elapsed / 1e6, pid);\n\tjoin(args.argv);\n}\n\n```\n\nexample: Write a BPF code that traces new processes and counts the number of new process creations per second using the eBPF technology.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing new processes... Hit Ctrl-C to end.\\n\");\n\n}\n\ntracepoint:sched:sched_process_fork\n{\n\t@ = count();\n}\n\ninterval:s:1\n{\n\ttime(\"%H:%M:%S PIDs/sec: \");\n\tprint(@);\n\tclear(@);\n}\n\nEND\n{\n\tclear(@);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nTraces process forking events and logs the parent and child process IDs and command names.\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:kmalloc { @[comm] = hist(arg0); }", "stdout": "Attaching 1 probe...\n", "stderr": "stdin:1:1-15: WARNING: kmalloc is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\nkprobe:kmalloc { @[comm] = hist(arg0); }\n~~~~~~~~~~~~~~\ncannot attach kprobe, probe entry may not exist\nERROR: Error attaching probe: 'kprobe:kmalloc'\n", "returncode": 255, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nMonitors the rate of memory allocations in the kernel and print histogram of the allocation sizes.\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces the kernel OOM killer and prints basic details, including the system load averages, providing context on the system state at the time of the OOM.\n\n```\n#ifndef BPFTRACE_HAVE_BTF\n#include <linux/oom.h>\n#endif\n\nBEGIN\n{\n\tprintf(\"Tracing oom_kill_process()... Hit Ctrl-C to end.\\n\");\n}\n\nkprobe:oom_kill_process\n{\n\t$oc = (struct oom_control *)arg0;\n\ttime(\"%H:%M:%S \");\n\tprintf(\"Triggered by PID %d (\\\"%s\\\"), \", pid, comm);\n\tprintf(\"OOM kill of PID %d (\\\"%s\\\"), %d pages, loadavg: \",\n\t    $oc->chosen->pid, $oc->chosen->comm, $oc->totalpages);\n\tcat(\"/proc/loadavg\");\n}\n\n```\n\nexample: Write a BPF code that traces block device I/O and creates histograms of I/O size in bytes for each process.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing block device I/O... Hit Ctrl-C to end.\\n\");\n}\n\ntracepoint:block:block_rq_issue\n{\n\t@[args.comm] = hist(args.bytes);\n}\n\nEND\n{\n\tprintf(\"\\nI/O size (bytes) histograms by process name:\");\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nMonitors the rate of memory allocations in the kernel and print histogram of the allocation sizes.\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e #include <linux/sched.h>\n\nBEGIN\n{\n  printf(\"Tracing process resource limits... Hit Ctrl-C to end.\\n\");\n}\n\ntracepoint:sched:sched_process_fork\n{\n  $task = (struct task_struct *)arg0;\n  $rlim = $task->signal->rlim;\n  $max_fd = $rlim[RLIMIT_NOFILE].rlim_cur;\n  $max_mem = $rlim[RLIMIT_AS].rlim_cur;\n\n  if ($max_fd < 1024 || $max_mem < 1024*1024*1024) {\n    printf(\"PID %d (%s) has low resource limits: max_fd=%d, max_mem=%d\\n\", $task->pid, $task->comm, $max_fd, $max_mem);\n  }\n}\n\nEND\n{\n  printf(\"End of tracing.\\n\");\n}", "stdout": "", "stderr": "stdin:10:11-38: ERROR: The arg0 builtin can only be used with 'kprobes', 'uprobes' and 'usdt' probes\n  $task = (struct task_struct *)arg0;\n          ~~~~~~~~~~~~~~~~~~~~~~~~~~~\nstdin:11:11-30: ERROR: Struct/union of type 'struct signal_struct' does not contain a field named 'rlim'\n  $rlim = $task->signal->rlim;\n          ~~~~~~~~~~~~~~~~~~~\n", "returncode": 1, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nTraces process resource limits (e.g., memory, file descriptors) and logs when limits are exceeded.\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces new processes and counts the number of new process creations per second using the eBPF technology.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing new processes... Hit Ctrl-C to end.\\n\");\n\n}\n\ntracepoint:sched:sched_process_fork\n{\n\t@ = count();\n}\n\ninterval:s:1\n{\n\ttime(\"%H:%M:%S PIDs/sec: \");\n\tprint(@);\n\tclear(@);\n}\n\nEND\n{\n\tclear(@);\n}\n\n```\n\nexample: Write a BPF code that traces block device I/O and creates histograms of I/O size in bytes for each process.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing block device I/O... Hit Ctrl-C to end.\\n\");\n}\n\ntracepoint:block:block_rq_issue\n{\n\t@[args.comm] = hist(args.bytes);\n}\n\nEND\n{\n\tprintf(\"\\nI/O size (bytes) histograms by process name:\");\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nTraces process resource limits (e.g., memory, file descriptors) and logs when limits are exceeded.\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:signal:signal_deliver { printf(\"Signal %s delivered to PID %d\", str(sig), pid); }", "stdout": "", "stderr": "stdin:1:76-83: ERROR: Unknown identifier: 'sig'\ntracepoint:signal:signal_deliver { printf(\"Signal %s delivered to PID %d\", str(sig), pid); }\n                                                                           ~~~~~~~\nstdin:1:76-84: ERROR: str() expects an integer or a pointer type as first argument (none provided)\ntracepoint:signal:signal_deliver { printf(\"Signal %s delivered to PID %d\", str(sig), pid); }\n                                                                           ~~~~~~~~\n", "returncode": 1, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nTraces process signals and logs the signal names and process IDs affected.\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Please write a BPF code that traces signals issued by the kill() syscall and prints information such as the timestamp, process ID, command, signal, target process ID, and the result of the kill() syscall.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing kill() signals... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-9s %-6s %-16s %-4s %-6s %s\\n\", \"TIME\", \"PID\", \"COMM\", \"SIG\",\n\t    \"TPID\", \"RESULT\");\n}\n\ntracepoint:syscalls:sys_enter_kill\n{\n\t@tpid[tid] = args.pid;\n\t@tsig[tid] = args.sig;\n}\n\ntracepoint:syscalls:sys_exit_kill\n/@tpid[tid]/\n{\n\ttime(\"%H:%M:%S  \");\n\tprintf(\"%-6d %-16s %-4d %-6d %d\\n\", pid, comm, @tsig[tid], @tpid[tid],\n\t    args.ret);\n\tdelete(@tpid[tid]);\n\tdelete(@tsig[tid]);\n}\n\n```\n\nexample: Write a BPF code that counts the number of system calls and the number of processes. It also prints the top 10 system call IDs and the top 10 processes at the end.\n\n```\nBEGIN\n{\n\tprintf(\"Counting syscalls... Hit Ctrl-C to end.\\n\");\n\t// ausyscall --dump | awk 'NR > 1 { printf(\"\\t@sysname[%d] = \\\"%s\\\";\\n\", $1, $2); }'\n}\n\ntracepoint:raw_syscalls:sys_enter\n{\n\t@syscall[args.id] = count();\n\t@process[comm] = count();\n}\n\nEND\n{\n\tprintf(\"\\nTop 10 syscalls IDs:\\n\");\n\tprint(@syscall, 10);\n\tclear(@syscall);\n\n\tprintf(\"\\nTop 10 processes:\\n\");\n\tprint(@process, 10);\n\tclear(@process);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nTraces process signals and logs the signal names and process IDs affected.\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN\n{\n    printf(\"Tracing syscall errors... Hit Ctrl-C to end.\\n\");\n    printf(\"%-6s %-16s %-6s %-16s\\n\", \"PID\", \"COMM\", \"ERR\", \"SYSCALL\");\n}\n\ntracepoint:raw_syscalls:sys_exit\n/args->ret < 0/\n{\n    $errno = -args->ret;\n    @syscall = probe;\n    printf(\"%-6d %-16s %-6d %-16s\\n\", pid, comm, $errno, str(@syscall));\n    @[comm, str(@syscall), $errno] = count();\n}\n\ninterval:s:1\n{\n    time(\"%H:%M:%S \");\n    print(@);\n    clear(@);\n}\n\nEND\n{\n    clear(@);\n}", "stdout": "", "stderr": "stdin:12:58-71: ERROR: str() expects an integer or a pointer type as first argument (probe provided)\n    printf(\"%-6d %-16s %-6d %-16s\\n\", pid, comm, $errno, str(@syscall));\n                                                         ~~~~~~~~~~~~~\nstdin:13:13-26: ERROR: str() expects an integer or a pointer type as first argument (probe provided)\n    @[comm, str(@syscall), $errno] = count();\n            ~~~~~~~~~~~~~\n", "returncode": 1, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nMonitors the rate of system call errors (e.g., ENOENT, EACCES) for specific processes\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces new processes and counts the number of new process creations per second using the eBPF technology.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing new processes... Hit Ctrl-C to end.\\n\");\n\n}\n\ntracepoint:sched:sched_process_fork\n{\n\t@ = count();\n}\n\ninterval:s:1\n{\n\ttime(\"%H:%M:%S PIDs/sec: \");\n\tprint(@);\n\tclear(@);\n}\n\nEND\n{\n\tclear(@);\n}\n\n```\n\nexample: Write a BPF code that traces the syscalls statfs(), statx(), newstat(), and newlstat(), providing information about the PID, process name, error code, and path being accessed.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing stat syscalls... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-6s %-16s %3s %s\\n\", \"PID\", \"COMM\", \"ERR\", \"PATH\");\n}\n\ntracepoint:syscalls:sys_enter_statfs\n{\n\t@filename[tid] = args.pathname;\n}\n\ntracepoint:syscalls:sys_enter_statx,\ntracepoint:syscalls:sys_enter_newstat,\ntracepoint:syscalls:sys_enter_newlstat\n{\n\t@filename[tid] = args.filename;\n}\n\ntracepoint:syscalls:sys_exit_statfs,\ntracepoint:syscalls:sys_exit_statx,\ntracepoint:syscalls:sys_exit_newstat,\ntracepoint:syscalls:sys_exit_newlstat\n/@filename[tid]/\n{\n\t$ret = args.ret;\n\t$errno = $ret >= 0 ? 0 : - $ret;\n\n\tprintf(\"%-6d %-16s %3d %s\\n\", pid, comm, $errno,\n\t    str(@filename[tid]));\n\tdelete(@filename[tid]);\n}\n\nEND\n{\n\tclear(@filename);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nMonitors the rate of system call errors (e.g., ENOENT, EACCES) for specific processes\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e #include <net/sock.h>\n#include <bcc/proto.h>\n\nkprobe:tcp_v4_connect {\n  $sk = (struct sock *)arg0;\n  $daddr = $sk->__sk_common.skc_daddr;\n  $saddr = $sk->__sk_common.skc_rcv_saddr;\n  $dport = $sk->__sk_common.skc_dport;\n  $sport = $sk->__sk_common.skc_num;\n  printf(\"%s:%d -> %s:%d\\n\", ntop($saddr), $sport, ntop($daddr), ntohs($dport));\n}\nkprobe:tcp_v6_connect {\n  $sk = (struct sock *)arg0;\n  $daddr = $sk->__sk_common.skc_v6_daddr.in6_u.u6_addr32;\n  $saddr = $sk->__sk_common.skc_v6_rcv_saddr.in6_u.u6_addr32;\n  $dport = $sk->__sk_common.skc_dport;\n  $sport = $sk->__sk_common.skc_num;\n  printf(\"%s:%d -> %s:%d\\n\", ntop($saddr), $sport, ntop($daddr), ntohs($dport));\n}", "stdout": "", "stderr": "stdin:10:66-71: ERROR: Unknown function: ntohs\n  printf(\"%s:%d -> %s:%d\\n\", ntop($saddr), $sport, ntop($daddr), ntohs($dport));\n                                                                 ~~~~~\n", "returncode": 1, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nCaptures TCP SYN packets and logs the source and destination IP addresses and ports\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces TCP connections by dynamically tracing kernel functions and prints out the time, PID, and addresses and ports of the source and destination of each connection.\n\n```\n#ifndef BPFTRACE_HAVE_BTF\n#include <linux/socket.h>\n#include <net/sock.h>\n#else\n#include <sys/socket.h>\n#endif\n\nBEGIN\n{\n  printf(\"Tracing tcp connections. Hit Ctrl-C to end.\\n\");\n  printf(\"%-8s %-8s %-16s \", \"TIME\", \"PID\", \"COMM\");\n  printf(\"%-39s %-6s %-39s %-6s\\n\", \"SADDR\", \"SPORT\", \"DADDR\", \"DPORT\");\n}\n\nkprobe:tcp_connect\n{\n  $sk = ((struct sock *) arg0);\n  $inet_family = $sk->__sk_common.skc_family;\n\n  if ($inet_family == AF_INET || $inet_family == AF_INET6) {\n    if ($inet_family == AF_INET) {\n      $daddr = ntop($sk->__sk_common.skc_daddr);\n      $saddr = ntop($sk->__sk_common.skc_rcv_saddr);\n    } else {\n      $daddr = ntop($sk->__sk_common.skc_v6_daddr.in6_u.u6_addr8);\n      $saddr = ntop($sk->__sk_common.skc_v6_rcv_saddr.in6_u.u6_addr8);\n    }\n    $lport = $sk->__sk_common.skc_num;\n    $dport = $sk->__sk_common.skc_dport;\n\n    // Destination port is big endian, it must be flipped\n    $dport = bswap($dport);\n\n    time(\"%H:%M:%S \");\n    printf(\"%-8d %-16s \", pid, comm);\n    printf(\"%-39s %-6d %-39s %-6d\\n\", $saddr, $lport, $daddr, $dport);\n  }\n}\n\n```\n\nexample: Write a BPF code that traces the TCP SYN backlog size and creates a histogram of the backlog sizes, also indicating if any SYN packets are being dropped.\n\n```\n#ifndef BPFTRACE_HAVE_BTF\n#include <net/sock.h>\n#endif\n\nBEGIN\n{\n\tprintf(\"Tracing SYN backlog size. Ctrl-C to end.\\n\");\n}\n\nkprobe:tcp_v4_syn_recv_sock,\nkprobe:tcp_v6_syn_recv_sock\n{\n\t$sock = (struct sock *)arg0;\n\t@backlog[$sock->sk_max_ack_backlog & 0xffffffff] =\n\t    hist($sock->sk_ack_backlog);\n\tif ($sock->sk_ack_backlog > $sock->sk_max_ack_backlog) {\n\t\ttime(\"%H:%M:%S dropping a SYN.\\n\");\n\t}\n}\n\nEND\n{\n\tprintf(\"\\n@backlog[backlog limit]: histogram of backlog size\\n\");\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nCaptures TCP SYN packets and logs the source and destination IP addresses and ports\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN\n{\n\tprintf(\"Monitoring system calls... Hit Ctrl-C to end.\\n\");\n}\n\ntracepoint:raw_syscalls:sys_enter\n{\n\t@syscall[comm, args->id] = count();\n}\n\ninterval:s:1\n{\n\tprintf(\"\\nSystem call rates per second:\\n\");\n\tprint(@syscall);\n\tclear(@syscall);\n}\n\nEND\n{\n\tprintf(\"\\nMonitoring ended.\\n\");\n}", "stdout": "Attaching 4 probes...\nMonitoring system calls... Hit Ctrl-C to end.\n\nSystem call rates per second:\n@syscall[bpftrace, 257]: 1\n@syscall[cpptools, 19]: 1\n@syscall[node, 230]: 1\n@syscall[node, 280]: 1\n@syscall[bpftrace, 32]: 1\n@syscall[cpptools, 0]: 1\n@syscall[multipathd, 230]: 1\n@syscall[bpftrace, 298]: 1\n@syscall[HangDetector, 202]: 1\n@syscall[bpftrace, 186]: 2\n@syscall[containerd, 234]: 2\n@syscall[sshd, 318]: 2\n@syscall[systemd, 232]: 2\n@syscall[systemd, 286]: 2\n@syscall[containerd, 39]: 2\n@syscall[node, 4]: 2\n@syscall[containerd, 15]: 2\n@syscall[pool-/usr/bin/f, 7]: 2\n@syscall[systemd, 186]: 2\n@syscall[systemd, 0]: 2\n@syscall[python3, 0]: 2\n@syscall[bpftrace, 3]: 2\n@syscall[bpftrace, 33]: 2\n@syscall[multipathd, 1]: 2\n@syscall[bpftrace, 1]: 2\n@syscall[node, 39]: 3\n@syscall[bpftrace, 16]: 3\n@syscall[multipathd, 202]: 3\n@syscall[node, 47]: 3\n@syscall[sshd, 1]: 3\n@syscall[sshd, 0]: 3\n@syscall[node, 7]: 4\n@syscall[node, 21]: 4\n@syscall[node, 62]: 4\n@syscall[node, 332]: 6\n@syscall[sshd, 271]: 6\n@syscall[bpftrace, 232]: 11\n@syscall[sshd, 14]: 12\n@syscall[cpptools, 202]: 13\n@syscall[vmtoolsd, 7]: 15\n@syscall[node, 1]: 22\n@syscall[node, 89]: 24\n@syscall[systemd-journal, 47]: 24\n@syscall[fwupdmgr, 7]: 24\n@syscall[systemd-journal, 232]: 24\n@syscall[systemd-journal, 186]: 24\n@syscall[fwupdmgr, 1]: 24\n@syscall[node, 16]: 25\n@syscall[node, 262]: 25\n@syscall[node, 3]: 27\n@syscall[node, 257]: 27\n@syscall[containerd, 35]: 30\n@syscall[node, 0]: 47\n@syscall[node, 202]: 51\n@syscall[vmtoolsd, 100]: 76\n@syscall[node, 232]: 83\n@syscall[containerd, 202]: 91\n@syscall[bpftrace, 321]: 102\n@syscall[containerd, 281]: 102\n\nSystem call rates per second:\n@syscall[vmtoolsd, 49]: 1\n@syscall[node, 230]: 1\n@syscall[node, 280]: 1\n@syscall[vmtoolsd, 137]: 1\n@syscall[bpftrace, 1]: 1\n@syscall[multipathd, 230]: 1\n@syscall[bpftrace, 186]: 1\n@syscall[vmtoolsd, 51]: 1\n@syscall[node, 39]: 1\n@syscall[HangDetector, 202]: 1\n@syscall[python3, 0]: 1\n@syscall[sshd, 318]: 2\n@syscall[node, 4]: 2\n@syscall[cpptools, 202]: 2\n@syscall[systemd, 286]: 2\n@syscall[systemd, 186]: 2\n@syscall[pool-/usr/bin/f, 7]: 2\n@syscall[vmtoolsd, 63]: 2\n@syscall[systemd, 0]: 2\n@syscall[vmtoolsd, 72]: 2\n@syscall[systemd, 232]: 2\n@syscall[node, 62]: 2\n@syscall[sshd, 0]: 3\n@syscall[sshd, 1]: 3\n@syscall[vmtoolsd, 439]: 3\n@syscall[multipathd, 202]: 3\n@syscall[node, 47]: 3\n@syscall[multipathd, 1]: 3\n@syscall[vmtoolsd, 45]: 4\n@syscall[node, 21]: 4\n@syscall[vmtoolsd, 44]: 4\n@syscall[node, 7]: 4\n@syscall[vmtoolsd, 21]: 4\n@syscall[node, 332]: 5\n@syscall[vmtoolsd, 47]: 6\n@syscall[sshd, 271]: 6\n@syscall[vmtoolsd, 257]: 8\n@syscall[vmtoolsd, 262]: 10\n@syscall[bpftrace, 232]: 10\n@syscall[vmtoolsd, 7]: 11\n@syscall[sshd, 14]: 12\n@syscall[vmtoolsd, 0]: 16\n@syscall[node, 1]: 19\n@syscall[systemd-journal, 186]: 23\n@syscall[systemd-journal, 232]: 23\n@syscall[systemd-journal, 47]: 23\n@syscall[fwupdmgr, 1]: 24\n@syscall[node, 16]: 24\n@syscall[fwupdmgr, 7]: 24\n@syscall[node, 262]: 24\n@syscall[node, 89]: 24\n@syscall[node, 257]: 25\n@syscall[node, 3]: 25\n@syscall[vmtoolsd, 16]: 29\n@syscall[vmtoolsd, 41]: 30\n@syscall[containerd, 35]: 32\n@syscall[vmtoolsd, 3]: 37\n@syscall[vmtoolsd, 89]: 38\n@syscall[node, 0]: 44\n@syscall[vmtoolsd, 100]: 54\n@syscall[node, 202]: 64\n@syscall[node, 232]: 67\n@syscall[containerd, 202]: 95\n@syscall[containerd, 281]: 100\n@syscall[bpftrace, 321]: 120\n\nSystem call rates per second:\n@syscall[multipathd, 7]: 1\n@syscall[HangDetector, 202]: 1\n@syscall[cron, 230]: 1\n@syscall[containerd, 15]: 1\n@syscall[dockerd, 35]: 1\n@syscall[multipathd, 230]: 1\n@syscall[bpftrace, 186]: 1\n@syscall[containerd, 234]: 1\n@syscall[node, 230]: 1\n@syscall[node, 280]: 1\n@syscall[bpftrace, 1]: 1\n@syscall[containerd, 39]: 1\n@syscall[systemd, 0]: 2\n@syscall[node, 4]: 2\n@syscall[pool-/usr/bin/f, 7]: 2\n@syscall[containerd, 1]: 2\n@syscall[systemd, 286]: 2\n@syscall[cpptools, 202]: 2\n@syscall[sshd, 318]: 2\n@syscall[systemd, 186]: 2\n@syscall[systemd, 232]: 2\n@syscall[multipathd, 1]: 2\n@syscall[dockerd, 281]: 2\n@syscall[containerd, 0]: 2\n@syscall[multipathd, 202]: 3\n@syscall[dockerd, 202]: 3\n@syscall[node, 39]: 4\n@syscall[node, 21]: 4\n@syscall[node, 47]: 4\n@syscall[sshd, 0]: 5\n@syscall[node, 62]: 5\n@syscall[node, 332]: 5\n@syscall[cron, 262]: 5\n@syscall[sshd, 1]: 5\n@syscall[node, 7]: 6\n@syscall[bpftrace, 232]: 10\n@syscall[sshd, 271]: 10\n@syscall[vmtoolsd, 7]: 11\n@syscall[sshd, 14]: 20\n@syscall[fwupdmgr, 7]: 23\n@syscall[fwupdmgr, 1]: 23\n@syscall[node, 89]: 24\n@syscall[systemd-journal, 186]: 24\n@syscall[systemd-journal, 232]: 24\n@syscall[systemd-journal, 47]: 24\n@syscall[node, 16]: 25\n@syscall[node, 262]: 25\n@syscall[node, 3]: 26\n@syscall[node, 257]: 26\n@syscall[node, 1]: 29\n@syscall[containerd, 35]: 31\n@syscall[vmtoolsd, 100]: 54\n@syscall[node, 0]: 56\n@syscall[containerd, 202]: 93\n@syscall[node, 232]: 98\n@syscall[containerd, 281]: 104\n@syscall[node, 202]: 106\n@syscall[bpftrace, 321]: 107\n\nSystem call rates per second:\n@syscall[cpptools, 0]: 1\n@syscall[node, 230]: 1\n@syscall[cpptools, 19]: 1\n@syscall[node, 280]: 1\n@syscall[bpftrace, 1]: 1\n@syscall[irqbalance, 7]: 1\n@syscall[multipathd, 230]: 1\n@syscall[bpftrace, 186]: 1\n@syscall[HangDetector, 202]: 1\n@syscall[irqbalance, 257]: 2\n@syscall[node, 4]: 2\n@syscall[irqbalance, 3]: 2\n@syscall[pool-/usr/bin/f, 7]: 2\n@syscall[systemd, 286]: 2\n@syscall[systemd, 186]: 2\n@syscall[systemd, 0]: 2\n@syscall[irqbalance, 262]: 2\n@syscall[python3, 0]: 2\n@syscall[systemd, 232]: 2\n@syscall[multipathd, 1]: 2\n@syscall[containerd, 0]: 3\n@syscall[multipathd, 202]: 3\n@syscall[containerd, 1]: 3\n@syscall[node, 47]: 3\n@syscall[node, 21]: 4\n@syscall[node, 7]: 4\n@syscall[node, 39]: 4\n@syscall[sshd, 318]: 4\n@syscall[node, 62]: 5\n@syscall[sshd, 0]: 5\n@syscall[sshd, 1]: 5\n@syscall[node, 332]: 6\n@syscall[irqbalance, 0]: 8\n@syscall[bpftrace, 232]: 10\n@syscall[sshd, 271]: 10\n@syscall[vmtoolsd, 7]: 11\n@syscall[cpptools, 202]: 13\n@syscall[sshd, 14]: 20\n@syscall[systemd-journal, 47]: 24\n@syscall[fwupdmgr, 1]: 24\n@syscall[systemd-journal, 186]: 24\n@syscall[systemd-journal, 232]: 24\n@syscall[node, 89]: 24\n@syscall[fwupdmgr, 7]: 24\n@syscall[node, 16]: 25\n@syscall[node, 262]: 25\n@syscall[node, 257]: 27\n@syscall[node, 3]: 27\n@syscall[node, 1]: 29\n@syscall[containerd, 35]: 31\n@syscall[node, 0]: 52\n@syscall[vmtoolsd, 100]: 54\n@syscall[node, 202]: 87\n@syscall[node, 232]: 91\n@syscall[containerd, 202]: 99\n@syscall[bpftrace, 321]: 105\n@syscall[containerd, 281]: 109\n\nSystem call rates per second:\n@syscall[systemd-timesyn, 232]: 1\n@syscall[node, 230]: 1\n@syscall[systemd-timesyn, 102]: 1\n@syscall[systemd-timesyn, 186]: 1\n@syscall[node, 280]: 1\n@syscall[systemd, 47]: 1\n@syscall[systemd-timesyn, 46]: 1\n@syscall[systemd, 262]: 1\n@syscall[systemd, 3]: 1\n@syscall[systemd, 257]: 1\n@syscall[systemd-timesyn, 257]: 1\n@syscall[systemd, 16]: 1\n@syscall[systemd-timesyn, 107]: 1\n@syscall[bpftrace, 186]: 1\n@syscall[systemd-timesyn, 108]: 1\n@syscall[systemd-timesyn, 41]: 1\n@syscall[systemd-timesyn, 262]: 1\n@syscall[HangDetector, 202]: 1\n@syscall[git, 80]: 1\n@syscall[systemd-timesyn, 104]: 1\n@syscall[bpftrace, 1]: 1\n@syscall[systemd-timesyn, 280]: 1\n@syscall[systemd-timesyn, 0]: 1\n@syscall[multipathd, 230]: 1\n@syscall[pool-/usr/bin/f, 7]: 2\n@syscall[systemd-timesyn, 3]: 2\n@syscall[vmtoolsd, 262]: 2\n@syscall[systemd, 286]: 2\n@syscall[systemd-timesyn, 286]: 2\n@syscall[python3, 0]: 2\n@syscall[multipathd, 1]: 2\n@syscall[git, 1]: 2\n@syscall[systemd-timesyn, 54]: 2\n@syscall[cpptools, 202]: 2\n@syscall[systemd-timesyn, 55]: 2\n@syscall[git, 318]: 3\n@syscall[git, 273]: 3\n@syscall[git, 14]: 3\n@syscall[node, 56]: 3\n@syscall[systemd, 186]: 3\n@syscall[git, 218]: 3\n@syscall[git, 13]: 3\n@syscall[multipathd, 202]: 3\n@syscall[systemd, 232]: 3\n@syscall[node, 273]: 3\n@syscall[git, 231]: 3\n@syscall[git, 334]: 3\n@syscall[node, 15]: 3\n@syscall[node, 62]: 3\n@syscall[node, 80]: 3\n@syscall[git, 302]: 3\n@syscall[systemd, 0]: 4\n@syscall[node, 39]: 5\n@syscall[node, 53]: 6\n@syscall[node, 72]: 6\n@syscall[git, 107]: 6\n@syscall[node, 33]: 6\n@syscall[git, 17]: 6\n@syscall[node, 293]: 6\n@syscall[git, 158]: 6\n@syscall[node, 48]: 6\n@syscall[node, 47]: 7\n@syscall[node, 7]: 8\n@syscall[node, 4]: 8\n@syscall[git, 11]: 9\n@syscall[node, 14]: 9\n@syscall[bpftrace, 232]: 10\n@syscall[git, 79]: 10\n@syscall[node, 233]: 12\n@syscall[vmtoolsd, 7]: 12\n@syscall[node, 217]: 14\n@syscall[git, 10]: 15\n@syscall[node, 59]: 15\n@syscall[git, 12]: 17\n@syscall[node, 21]: 19\n@syscall[node, 28]: 20\n@syscall[node, 61]: 21\n@syscall[systemd-journal, 47]: 23\n@syscall[fwupdmgr, 7]: 23\n@syscall[systemd-journal, 186]: 23\n@syscall[fwupdmgr, 1]: 23\n@syscall[systemd-journal, 232]: 23\n@syscall[sshd, 318]: 25\n@syscall[node, 16]: 31\n@syscall[containerd, 35]: 31\n@syscall[node, 262]: 32\n@syscall[node, 332]: 35\n@syscall[node, 257]: 42\n@syscall[node, 10]: 44\n@syscall[sshd, 0]: 45\n@syscall[sshd, 1]: 47\n@syscall[git, 21]: 48\n@syscall[vmtoolsd, 100]: 57\n@syscall[node, 3]: 62\n@syscall[git, 9]: 62\n@syscall[node, 13]: 87\n@syscall[sshd, 271]: 89\n@syscall[containerd, 202]: 93\n@syscall[containerd, 281]: 96\n@syscall[git, 0]: 97\n@syscall[git, 217]: 104\n@syscall[node, 89]: 105\n@syscall[git, 3]: 126\n@syscall[git, 257]: 161\n@syscall[sshd, 14]: 178\n@syscall[bpftrace, 321]: 189\n@syscall[node, 1]: 192\n@syscall[node, 0]: 226\n@syscall[node, 232]: 308\n@syscall[node, 202]: 925\n@syscall[git, 262]: 929\n\nSystem call rates per second:\n@syscall[git, 80]: 1\n@syscall[python3, 0]: 1\n@syscall[cpptools, 19]: 1\n@syscall[HangDetector, 202]: 1\n@syscall[node, 230]: 1\n@syscall[multipathd, 230]: 1\n@syscall[node, 280]: 1\n@syscall[bpftrace, 186]: 1\n@syscall[bpftrace, 1]: 1\n@syscall[cpptools, 0]: 1\n@syscall[node, 80]: 2\n@syscall[systemd, 232]: 2\n@syscall[systemd, 0]: 2\n@syscall[pool-/usr/bin/f, 7]: 2\n@syscall[git, 318]: 2\n@syscall[node, 4]: 2\n@syscall[git, 14]: 2\n@syscall[systemd, 286]: 2\n@syscall[node, 59]: 2\n@syscall[git, 13]: 2\n@syscall[git, 218]: 2\n@syscall[systemd, 186]: 2\n@syscall[git, 302]: 2\n@syscall[node, 15]: 2\n@syscall[git, 231]: 2\n@syscall[node, 273]: 2\n@syscall[git, 334]: 2\n@syscall[git, 273]: 2\n@syscall[node, 56]: 2\n@syscall[multipathd, 1]: 2\n@syscall[multipathd, 202]: 3\n@syscall[node, 48]: 4\n@syscall[node, 7]: 4\n@syscall[git, 107]: 4\n@syscall[node, 62]: 4\n@syscall[node, 21]: 4\n@syscall[git, 11]: 4\n@syscall[git, 17]: 4\n@syscall[node, 293]: 4\n@syscall[git, 158]: 4\n@syscall[node, 9]: 5\n@syscall[node, 47]: 5\n@syscall[git, 79]: 6\n@syscall[node, 14]: 6\n@syscall[node, 72]: 6\n@syscall[node, 11]: 6\n@syscall[node, 53]: 6\n@syscall[node, 33]: 6\n@syscall[node, 332]: 8\n@syscall[git, 12]: 8\n@syscall[git, 10]: 10\n@syscall[bpftrace, 232]: 10\n@syscall[node, 233]: 10\n@syscall[vmtoolsd, 7]: 11\n@syscall[sshd, 318]: 13\n@syscall[cpptools, 202]: 13\n@syscall[node, 61]: 14\n@syscall[node, 39]: 21\n@syscall[systemd-journal, 47]: 24\n@syscall[systemd-journal, 186]: 24\n@syscall[systemd-journal, 232]: 24\n@syscall[fwupdmgr, 1]: 24\n@syscall[fwupdmgr, 7]: 24\n@syscall[node, 89]: 24\n@syscall[sshd, 1]: 25\n@syscall[sshd, 0]: 25\n@syscall[node, 262]: 25\n@syscall[node, 257]: 27\n@syscall[git, 21]: 28\n@syscall[node, 16]: 31\n@syscall[git, 257]: 32\n@syscall[containerd, 35]: 32\n@syscall[git, 3]: 32\n@syscall[git, 9]: 36\n@syscall[git, 0]: 46\n@syscall[node, 3]: 47\n@syscall[sshd, 271]: 50\n@syscall[vmtoolsd, 100]: 54\n@syscall[node, 13]: 58\n@syscall[node, 28]: 72\n@syscall[git, 262]: 79\n@syscall[containerd, 202]: 96\n@syscall[node, 1]: 97\n@syscall[sshd, 14]: 100\n@syscall[containerd, 281]: 102\n@syscall[node, 0]: 120\n@syscall[bpftrace, 321]: 165\n@syscall[node, 232]: 168\n@syscall[node, 10]: 209\n@syscall[node, 202]: 744\n\nSystem call rates per second:\n@syscall[git, 80]: 1\n@syscall[node, 230]: 1\n@syscall[node, 280]: 1\n@syscall[bpftrace, 1]: 1\n@syscall[containerd, 1]: 1\n@syscall[git, 1]: 1\n@syscall[multipathd, 230]: 1\n@syscall[git, 16]: 1\n@syscall[containerd, 0]: 1\n@syscall[bpftrace, 186]: 1\n@syscall[HangDetector, 202]: 1\n@syscall[containerd, 234]: 2\n@syscall[cpptools, 202]: 2\n@syscall[systemd, 286]: 2\n@syscall[containerd, 15]: 2\n@syscall[pool-/usr/bin/f, 7]: 2\n@syscall[systemd, 186]: 2\n@syscall[systemd, 0]: 2\n@syscall[containerd, 39]: 2\n@syscall[systemd, 232]: 2\n@syscall[multipathd, 1]: 2\n@syscall[node, 332]: 3\n@syscall[multipathd, 202]: 3\n@syscall[node, 62]: 4\n@syscall[git, 14]: 4\n@syscall[git, 13]: 4\n@syscall[git, 318]: 4\n@syscall[git, 218]: 4\n@syscall[node, 39]: 4\n@syscall[git, 334]: 4\n@syscall[node, 56]: 4\n@syscall[git, 231]: 4\n@syscall[git, 302]: 4\n@syscall[node, 80]: 4\n@syscall[node, 273]: 4\n@syscall[git, 273]: 4\n@syscall[node, 15]: 4\n@syscall[node, 4]: 6\n@syscall[node, 28]: 7\n@syscall[git, 158]: 8\n@syscall[git, 107]: 8\n@syscall[git, 11]: 8\n@syscall[git, 17]: 8\n@syscall[node, 48]: 8\n@syscall[node, 293]: 8\n@syscall[node, 7]: 10\n@syscall[node, 72]: 10\n@syscall[vmtoolsd, 7]: 10\n@syscall[bpftrace, 232]: 10\n@syscall[node, 33]: 10\n@syscall[node, 53]: 10\n@syscall[git, 79]: 12\n@syscall[node, 14]: 12\n@syscall[node, 59]: 12\n@syscall[node, 47]: 14\n@syscall[git, 12]: 16\n@syscall[node, 233]: 18\n@syscall[git, 10]: 20\n@syscall[sshd, 318]: 23\n@syscall[systemd-journal, 232]: 24\n@syscall[systemd-journal, 186]: 24\n@syscall[systemd-journal, 47]: 24\n@syscall[fwupdmgr, 7]: 24\n@syscall[fwupdmgr, 1]: 24\n@syscall[node, 10]: 25\n@syscall[node, 262]: 25\n@syscall[node, 257]: 29\n@syscall[node, 61]: 29\n@syscall[containerd, 35]: 31\n@syscall[node, 16]: 35\n@syscall[sshd, 0]: 45\n@syscall[sshd, 1]: 46\n@syscall[vmtoolsd, 100]: 50\n@syscall[git, 21]: 56\n@syscall[node, 3]: 65\n@syscall[git, 3]: 67\n@syscall[git, 9]: 74\n@syscall[git, 257]: 79\n@syscall[sshd, 271]: 85\n@syscall[containerd, 202]: 91\n@syscall[git, 0]: 94\n@syscall[containerd, 281]: 103\n@syscall[node, 13]: 116\n@syscall[git, 262]: 158\n@syscall[bpftrace, 321]: 162\n@syscall[node, 1]: 164\n@syscall[sshd, 14]: 171\n@syscall[node, 0]: 186\n@syscall[node, 232]: 237\n@syscall[node, 202]: 664\n\nSystem call rates per second:\n@syscall[HangDetector, 202]: 1\n@syscall[bpftrace, 186]: 1\n@syscall[multipathd, 230]: 1\n@syscall[node, 280]: 1\n@syscall[bpftrace, 1]: 1\n@syscall[node, 230]: 1\n@syscall[systemd, 232]: 2\n@syscall[systemd, 186]: 2\n@syscall[node, 39]: 2\n@syscall[systemd, 286]: 2\n@syscall[node, 4]: 2\n@syscall[pool-/usr/bin/f, 7]: 2\n@syscall[systemd, 0]: 2\n@syscall[multipathd, 1]: 3\n@syscall[node, 62]: 3\n@syscall[multipathd, 202]: 3\n@syscall[node, 7]: 4\n@syscall[sshd, 318]: 4\n@syscall[node, 47]: 7\n@syscall[sshd, 1]: 9\n@syscall[sshd, 0]: 9\n@syscall[cpptools, 202]: 9\n@syscall[bpftrace, 232]: 10\n@syscall[vmtoolsd, 7]: 11\n@syscall[node, 21]: 12\n@syscall[node, 332]: 13\n@syscall[sshd, 271]: 18\n@syscall[systemd-journal, 47]: 24\n@syscall[fwupdmgr, 7]: 24\n@syscall[systemd-journal, 232]: 24\n@syscall[systemd-journal, 186]: 24\n@syscall[fwupdmgr, 1]: 24\n@syscall[node, 16]: 25\n@syscall[node, 262]: 25\n@syscall[node, 257]: 26\n@syscall[node, 3]: 26\n@syscall[containerd, 35]: 32\n@syscall[sshd, 14]: 36\n@syscall[node, 1]: 43\n@syscall[vmtoolsd, 100]: 54\n@syscall[node, 0]: 67\n@syscall[node, 89]: 75\n@syscall[containerd, 202]: 96\n@syscall[bpftrace, 321]: 101\n@syscall[containerd, 281]: 101\n@syscall[node, 232]: 129\n@syscall[node, 202]: 145\n\nSystem call rates per second:\n@syscall[HangDetector, 202]: 1\n@syscall[bpftrace, 186]: 1\n@syscall[vmtoolsd, 44]: 1\n@syscall[multipathd, 230]: 1\n@syscall[cpptools, 0]: 1\n@syscall[bpftrace, 1]: 1\n@syscall[node, 280]: 1\n@syscall[cpptools, 19]: 1\n@syscall[node, 230]: 1\n@syscall[node, 4]: 2\n@syscall[python3, 0]: 2\n@syscall[systemd, 186]: 2\n@syscall[systemd, 286]: 2\n@syscall[containerd, 1]: 2\n@syscall[pool-/usr/bin/f, 7]: 2\n@syscall[systemd, 0]: 2\n@syscall[systemd, 232]: 2\n@syscall[vmtoolsd, 45]: 2\n@syscall[multipathd, 1]: 2\n@syscall[containerd, 0]: 2\n@syscall[multipathd, 202]: 3\n@syscall[node, 47]: 3\n@syscall[node, 7]: 4\n@syscall[node, 39]: 4\n@syscall[sshd, 318]: 4\n@syscall[node, 21]: 4\n@syscall[node, 62]: 5\n@syscall[sshd, 0]: 5\n@syscall[sshd, 1]: 5\n@syscall[vmtoolsd, 257]: 6\n@syscall[cpptools, 202]: 6\n@syscall[node, 332]: 6\n@syscall[vmtoolsd, 3]: 6\n@syscall[vmtoolsd, 262]: 6\n@syscall[bpftrace, 232]: 10\n@syscall[sshd, 271]: 10\n@syscall[vmtoolsd, 7]: 12\n@syscall[vmtoolsd, 21]: 15\n@syscall[sshd, 14]: 20\n@syscall[vmtoolsd, 0]: 22\n@syscall[systemd-journal, 232]: 23\n@syscall[fwupdmgr, 7]: 23\n@syscall[systemd-journal, 186]: 23\n@syscall[fwupdmgr, 1]: 23\n@syscall[systemd-journal, 47]: 23\n@syscall[node, 89]: 24\n@syscall[node, 16]: 25\n@syscall[node, 262]: 25\n@syscall[node, 3]: 27\n@syscall[node, 257]: 27\n@syscall[node, 1]: 28\n@syscall[containerd, 35]: 33\n@syscall[node, 0]: 51\n@syscall[vmtoolsd, 100]: 58\n@syscall[node, 202]: 72\n@syscall[node, 232]: 94\n@syscall[containerd, 202]: 98\n@syscall[containerd, 281]: 106\n@syscall[bpftrace, 321]: 110\n\nSystem call rates per second:\n@syscall[containerd, 39]: 1\n@syscall[git, 80]: 1\n@syscall[HangDetector, 202]: 1\n@syscall[containerd, 15]: 1\n@syscall[bpftrace, 186]: 1\n@syscall[containerd, 234]: 1\n@syscall[containerd, 1]: 1\n@syscall[node, 280]: 1\n@syscall[node, 230]: 1\n@syscall[bpftrace, 1]: 1\n@syscall[multipathd, 230]: 1\n@syscall[containerd, 0]: 1\n@syscall[systemd, 232]: 2\n@syscall[multipathd, 1]: 2\n@syscall[git, 1]: 2\n@syscall[systemd, 286]: 2\n@syscall[vmtoolsd, 262]: 2\n@syscall[pool-/usr/bin/f, 7]: 2\n@syscall[systemd, 186]: 2\n@syscall[systemd, 0]: 2\n@syscall[python3, 0]: 2\n@syscall[git, 218]: 3\n@syscall[git, 334]: 3\n@syscall[git, 14]: 3\n@syscall[git, 318]: 3\n@syscall[git, 273]: 3\n@syscall[node, 15]: 3\n@syscall[node, 332]: 3\n@syscall[node, 21]: 3\n@syscall[git, 13]: 3\n@syscall[node, 80]: 3\n@syscall[git, 302]: 3\n@syscall[node, 56]: 3\n@syscall[git, 231]: 3\n@syscall[multipathd, 202]: 3\n@syscall[node, 273]: 3\n@syscall[node, 39]: 4\n@syscall[node, 47]: 4\n@syscall[node, 62]: 5\n@syscall[git, 158]: 6\n@syscall[git, 107]: 6\n@syscall[git, 17]: 6\n@syscall[node, 48]: 6\n@syscall[node, 72]: 6\n@syscall[node, 33]: 6\n@syscall[node, 293]: 6\n@syscall[node, 53]: 6\n@syscall[node, 4]: 8\n@syscall[node, 14]: 9\n@syscall[git, 11]: 9\n@syscall[cpptools, 202]: 9\n@syscall[sshd, 318]: 10\n@syscall[bpftrace, 232]: 10\n@syscall[git, 79]: 10\n@syscall[vmtoolsd, 7]: 11\n@syscall[node, 7]: 12\n@syscall[node, 233]: 12\n@syscall[git, 10]: 15\n@syscall[node, 59]: 15\n@syscall[sshd, 0]: 16\n@syscall[git, 12]: 17\n@syscall[sshd, 1]: 17\n@syscall[node, 61]: 22\n@syscall[systemd-journal, 232]: 24\n@syscall[systemd-journal, 186]: 24\n@syscall[systemd-journal, 47]: 24\n@syscall[fwupdmgr, 7]: 24\n@syscall[fwupdmgr, 1]: 24\n@syscall[node, 262]: 25\n@syscall[node, 16]: 31\n@syscall[containerd, 35]: 32\n@syscall[sshd, 271]: 32\n@syscall[node, 257]: 35\n@syscall[git, 21]: 48\n@syscall[vmtoolsd, 100]: 53\n@syscall[node, 3]: 55\n@syscall[git, 9]: 62\n@syscall[sshd, 14]: 64\n@syscall[node, 1]: 79\n@syscall[node, 13]: 87\n@syscall[containerd, 202]: 96\n@syscall[git, 0]: 97\n@syscall[git, 217]: 104\n@syscall[containerd, 281]: 111\n@syscall[node, 0]: 120\n@syscall[git, 3]: 126\n@syscall[bpftrace, 321]: 151\n@syscall[git, 257]: 161\n@syscall[node, 232]: 161\n@syscall[node, 202]: 284\n@syscall[git, 262]: 929\n\nSystem call rates per second:\n@syscall[bpftrace, 186]: 1\n@syscall[node, 230]: 1\n@syscall[cpptools, 19]: 1\n@syscall[cpptools, 0]: 1\n@syscall[containerd, 1]: 1\n@syscall[containerd, 39]: 1\n@syscall[bpftrace, 1]: 1\n@syscall[node, 280]: 1\n@syscall[containerd, 234]: 1\n@syscall[multipathd, 230]: 1\n@syscall[node, 39]: 1\n@syscall[containerd, 15]: 1\n@syscall[containerd, 0]: 1\n@syscall[HangDetector, 202]: 1\n@syscall[python3, 0]: 1\n@syscall[systemd, 0]: 2\n@syscall[node, 4]: 2\n@syscall[pool-/usr/bin/f, 7]: 2\n@syscall[systemd, 286]: 2\n@syscall[systemd, 186]: 2\n@syscall[systemd, 232]: 2\n@syscall[multipathd, 1]: 2\n@syscall[node, 62]: 2\n@syscall[multipathd, 202]: 3\n@syscall[node, 7]: 4\n@syscall[node, 47]: 4\n@syscall[sshd, 318]: 4\n@syscall[sshd, 0]: 6\n@syscall[cpptools, 202]: 6\n@syscall[sshd, 1]: 6\n@syscall[bpftrace, 232]: 10\n@syscall[vmtoolsd, 7]: 11\n@syscall[sshd, 271]: 12\n@syscall[node, 21]: 16\n@syscall[node, 332]: 18\n@syscall[sshd, 14]: 24\n@syscall[fwupdmgr, 7]: 24\n@syscall[systemd-journal, 186]: 24\n@syscall[fwupdmgr, 1]: 24\n@syscall[systemd-journal, 47]: 24\n@syscall[systemd-journal, 232]: 24\n@syscall[node, 262]: 25\n@syscall[node, 16]: 25\n@syscall[node, 3]: 27\n@syscall[node, 257]: 27\n@syscall[containerd, 35]: 31\n@syscall[node, 1]: 36\n@syscall[vmtoolsd, 100]: 54\n@syscall[node, 0]: 59\n@syscall[node, 202]: 93\n@syscall[containerd, 202]: 94\n@syscall[containerd, 281]: 100\n@syscall[node, 232]: 100\n@syscall[node, 89]: 102\n@syscall[bpftrace, 321]: 113\n\nSystem call rates per second:\n@syscall[python3, 0]: 1\n@syscall[HangDetector, 202]: 1\n@syscall[bpftrace, 186]: 1\n@syscall[bpftrace, 1]: 1\n@syscall[node, 280]: 1\n@syscall[node, 230]: 1\n@syscall[node, 4]: 2\n@syscall[systemd, 186]: 2\n@syscall[sshd, 318]: 2\n@syscall[systemd, 286]: 2\n@syscall[pool-/usr/bin/f, 7]: 2\n@syscall[systemd, 0]: 2\n@syscall[systemd, 232]: 2\n@syscall[node, 39]: 3\n@syscall[node, 47]: 3\n@syscall[sshd, 1]: 3\n@syscall[sshd, 0]: 3\n@syscall[node, 21]: 4\n@syscall[node, 62]: 4\n@syscall[node, 332]: 5\n@syscall[sshd, 271]: 6\n@syscall[node, 7]: 6\n@syscall[cpptools, 202]: 9\n@syscall[bpftrace, 232]: 10\n@syscall[vmtoolsd, 7]: 10\n@syscall[sshd, 14]: 12\n@syscall[node, 1]: 19\n@syscall[fwupdmgr, 1]: 24\n@syscall[fwupdmgr, 7]: 24\n@syscall[node, 89]: 24\n@syscall[systemd-journal, 47]: 24\n@syscall[systemd-journal, 232]: 24\n@syscall[systemd-journal, 186]: 24\n@syscall[node, 16]: 25\n@syscall[node, 262]: 25\n@syscall[node, 257]: 26\n@syscall[node, 3]: 26\n@syscall[containerd, 35]: 31\n@syscall[node, 0]: 45\n@syscall[vmtoolsd, 100]: 50\n@syscall[node, 202]: 52\n@syscall[node, 232]: 74\n@syscall[bpftrace, 321]: 84\n@syscall[containerd, 202]: 93\n@syscall[containerd, 281]: 104\n\nSystem call rates per second:\n@syscall[python3, 0]: 1\n@syscall[node, 230]: 1\n@syscall[node, 280]: 1\n@syscall[bpftrace, 1]: 1\n@syscall[containerd, 1]: 1\n@syscall[multipathd, 230]: 1\n@syscall[bpftrace, 186]: 1\n@syscall[containerd, 0]: 1\n@syscall[HangDetector, 202]: 1\n@syscall[sshd, 318]: 2\n@syscall[cpptools, 202]: 2\n@syscall[systemd, 286]: 2\n@syscall[node, 4]: 2\n@syscall[systemd, 186]: 2\n@syscall[pool-/usr/bin/f, 7]: 2\n@syscall[systemd, 0]: 2\n@syscall[dockerd, 35]: 2\n@syscall[systemd, 232]: 2\n@syscall[multipathd, 1]: 2\n@syscall[multipathd, 202]: 3\n@syscall[dockerd, 281]: 4\n@syscall[node, 47]: 4\n@syscall[node, 21]: 4\n@syscall[node, 39]: 5\n@syscall[sshd, 1]: 5\n@syscall[node, 62]: 5\n@syscall[sshd, 0]: 5\n@syscall[node, 332]: 5\n@syscall[node, 7]: 6\n@syscall[sshd, 271]: 10\n@syscall[bpftrace, 232]: 10\n@syscall[vmtoolsd, 7]: 11\n@syscall[dockerd, 202]: 12\n@syscall[sshd, 14]: 20\n@syscall[fwupdmgr, 7]: 24\n@syscall[fwupdmgr, 1]: 24\n@syscall[systemd-journal, 232]: 24\n@syscall[systemd-journal, 186]: 24\n@syscall[node, 89]: 24\n@syscall[systemd-journal, 47]: 24\n@syscall[node, 16]: 25\n@syscall[node, 262]: 25\n@syscall[node, 257]: 26\n@syscall[node, 3]: 26\n@syscall[node, 1]: 31\n@syscall[containerd, 35]: 32\n@syscall[vmtoolsd, 100]: 54\n@syscall[node, 0]: 57\n@syscall[node, 10]: 60\n@syscall[node, 28]: 60\n@syscall[node, 232]: 92\n@syscall[containerd, 202]: 95\n@syscall[bpftrace, 321]: 103\n@syscall[containerd, 281]: 105\n@syscall[node, 202]: 161\n\nSystem call rates per second:\n@syscall[python3, 0]: 1\n@syscall[cpptools, 19]: 1\n@syscall[node, 230]: 1\n@syscall[containerd, 24]: 1\n@syscall[node, 280]: 1\n@syscall[cpptools, 0]: 1\n@syscall[bpftrace, 1]: 1\n@syscall[irqbalance, 7]: 1\n@syscall[multipathd, 230]: 1\n@syscall[bpftrace, 186]: 1\n@syscall[HangDetector, 202]: 1\n@syscall[irqbalance, 257]: 2\n@syscall[containerd, 1]: 2\n@syscall[node, 4]: 2\n@syscall[systemd, 286]: 2\n@syscall[pool-/usr/bin/f, 7]: 2\n@syscall[node, 39]: 2\n@syscall[systemd, 0]: 2\n@syscall[systemd, 186]: 2\n@syscall[irqbalance, 3]: 2\n@syscall[irqbalance, 262]: 2\n@syscall[systemd, 232]: 2\n@syscall[containerd, 0]: 2\n@syscall[multipathd, 1]: 2\n@syscall[node, 47]: 3\n@syscall[node, 62]: 3\n@syscall[sshd, 318]: 4\n@syscall[node, 21]: 4\n@syscall[node, 7]: 4\n@syscall[sshd, 0]: 5\n@syscall[sshd, 1]: 5\n@syscall[node, 332]: 6\n@syscall[multipathd, 202]: 6\n@syscall[irqbalance, 0]: 8\n@syscall[bpftrace, 232]: 10\n@syscall[sshd, 271]: 10\n@syscall[vmtoolsd, 7]: 11\n@syscall[cpptools, 202]: 13\n@syscall[sshd, 14]: 20\n@syscall[node, 89]: 24\n@syscall[systemd-journal, 47]: 24\n@syscall[fwupdmgr, 7]: 24\n@syscall[fwupdmgr, 1]: 24\n@syscall[systemd-journal, 186]: 24\n@syscall[systemd-journal, 232]: 24\n@syscall[node, 16]: 25\n@syscall[node, 262]: 25\n@syscall[node, 257]: 27\n@syscall[node, 3]: 27\n@syscall[node, 1]: 29\n@syscall[containerd, 35]: 33\n@syscall[node, 0]: 52\n@syscall[vmtoolsd, 100]: 54\n@syscall[node, 232]: 83\n@syscall[node, 202]: 91\n@syscall[bpftrace, 321]: 105\n@syscall[containerd, 281]: 111\n@syscall[containerd, 202]: 115\n\nSystem call rates per second:\n@syscall[python3, 0]: 1\n@syscall[HangDetector, 202]: 1\n@syscall[bpftrace, 186]: 1\n@syscall[multipathd, 230]: 1\n@syscall[bpftrace, 1]: 1\n@syscall[node, 280]: 1\n@syscall[node, 230]: 1\n@syscall[containerd, 24]: 1\n@syscall[node, 4]: 2\n@syscall[systemd, 186]: 2\n@syscall[sshd, 318]: 2\n@syscall[cpptools, 202]: 2\n@syscall[systemd, 286]: 2\n@syscall[vmtoolsd, 262]: 2\n@syscall[pool-/usr/bin/f, 7]: 2\n@syscall[systemd, 0]: 2\n@syscall[systemd, 232]: 2\n@syscall[multipathd, 1]: 3\n@syscall[containerd, 0]: 3\n@syscall[multipathd, 202]: 3\n@syscall[node, 47]: 3\n@syscall[sshd, 0]: 3\n@syscall[sshd, 1]: 3\n@syscall[containerd, 1]: 3\n@syscall[node, 7]: 4\n@syscall[node, 39]: 4\n@syscall[node, 21]: 4\n@syscall[node, 62]: 5\n@syscall[node, 332]: 5\n@syscall[sshd, 271]: 6\n@syscall[bpftrace, 232]: 10\n@syscall[vmtoolsd, 7]: 11\n@syscall[sshd, 14]: 12\n@syscall[node, 1]: 19\n@syscall[systemd-journal, 232]: 24\n@syscall[fwupdmgr, 7]: 24\n@syscall[fwupdmgr, 1]: 24\n@syscall[systemd-journal, 186]: 24\n@syscall[systemd-journal, 47]: 24\n@syscall[node, 89]: 24\n@syscall[node, 16]: 25\n@syscall[node, 262]: 25\n@syscall[node, 257]: 26\n@syscall[node, 3]: 26\n@syscall[containerd, 35]: 31\n@syscall[node, 0]: 45\n@syscall[vmtoolsd, 100]: 53\n@syscall[node, 232]: 68\n@syscall[node, 202]: 70\n@syscall[containerd, 202]: 94\n@syscall[bpftrace, 321]: 99\n@syscall[containerd, 281]: 101\n\nSystem call rates per second:\n@syscall[python3, 0]: 1\n@syscall[HangDetector, 202]: 1\n@syscall[containerd, 0]: 1\n@syscall[bpftrace, 186]: 1\n@syscall[multipathd, 230]: 1\n@syscall[containerd, 1]: 1\n@syscall[cpptools, 0]: 1\n@syscall[bpftrace, 1]: 1\n@syscall[node, 280]: 1\n@syscall[cpptools, 19]: 1\n@syscall[node, 230]: 1\n@syscall[node, 4]: 2\n@syscall[systemd, 186]: 2\n@syscall[systemd, 286]: 2\n@syscall[pool-/usr/bin/f, 7]: 2\n@syscall[systemd, 0]: 2\n@syscall[systemd, 232]: 2\n@syscall[multipathd, 1]: 2\n@syscall[multipathd, 202]: 3\n@syscall[node, 47]: 3\n@syscall[node, 7]: 4\n@syscall[node, 39]: 4\n@syscall[node, 62]: 4\n@syscall[node, 21]: 4\n@syscall[node, 28]: 4\n@syscall[node, 10]: 8\n@syscall[sshd, 318]: 9\n@syscall[bpftrace, 232]: 10\n@syscall[node, 332]: 10\n@syscall[cpptools, 202]: 12\n@syscall[vmtoolsd, 7]: 15\n@syscall[sshd, 0]: 16\n@syscall[sshd, 1]: 17\n@syscall[systemd-journal, 186]: 23\n@syscall[systemd-journal, 232]: 23\n@syscall[fwupdmgr, 7]: 23\n@syscall[systemd-journal, 47]: 23\n@syscall[fwupdmgr, 1]: 23\n@syscall[node, 89]: 24\n@syscall[node, 16]: 25\n@syscall[node, 262]: 25\n@syscall[node, 257]: 27\n@syscall[node, 3]: 27\n@syscall[containerd, 35]: 31\n@syscall[sshd, 271]: 32\n@syscall[sshd, 14]: 64\n@syscall[node, 1]: 68\n@syscall[vmtoolsd, 100]: 77\n@syscall[node, 0]: 92\n@syscall[containerd, 202]: 93\n@syscall[containerd, 281]: 96\n@syscall[bpftrace, 321]: 101\n@syscall[node, 232]: 130\n@syscall[node, 202]: 283\n\nSystem call rates per second:\n@syscall[python3, 0]: 1\n@syscall[HangDetector, 202]: 1\n@syscall[containerd, 0]: 1\n@syscall[node, 39]: 1\n@syscall[bpftrace, 186]: 1\n@syscall[multipathd, 230]: 1\n@syscall[containerd, 1]: 1\n@syscall[bpftrace, 1]: 1\n@syscall[node, 280]: 1\n@syscall[node, 230]: 1\n@syscall[node, 4]: 2\n@syscall[systemd, 186]: 2\n@syscall[cpptools, 202]: 2\n@syscall[systemd, 286]: 2\n@syscall[pool-/usr/bin/f, 7]: 2\n@syscall[systemd, 0]: 2\n@syscall[systemd, 232]: 2\n@syscall[node, 62]: 2\n@syscall[multipathd, 1]: 2\n@syscall[multipathd, 202]: 3\n@syscall[node, 47]: 3\n@syscall[node, 21]: 4\n@syscall[node, 7]: 6\n@syscall[bpftrace, 232]: 10\n@syscall[vmtoolsd, 7]: 11\n@syscall[node, 262]: 21\n@syscall[node, 16]: 21\n@syscall[node, 332]: 22\n@syscall[node, 3]: 22\n@syscall[node, 257]: 22\n@syscall[sshd, 318]: 23\n@syscall[systemd-journal, 47]: 24\n@syscall[fwupdmgr, 7]: 24\n@syscall[node, 89]: 24\n@syscall[fwupdmgr, 1]: 24\n@syscall[systemd-journal, 186]: 24\n@syscall[systemd-journal, 232]: 24\n@syscall[containerd, 35]: 32\n@syscall[sshd, 0]: 47\n@syscall[sshd, 1]: 48\n@syscall[vmtoolsd, 100]: 54\n@syscall[bpftrace, 321]: 93\n@syscall[sshd, 271]: 94\n@syscall[containerd, 202]: 94\n@syscall[containerd, 281]: 102\n@syscall[node, 1]: 161\n@syscall[node, 0]: 185\n@syscall[sshd, 14]: 188\n@syscall[node, 232]: 314\n@syscall[node, 202]: 559\n\nSystem call rates per second:\n@syscall[python3, 0]: 1\n@syscall[HangDetector, 202]: 1\n@syscall[bpftrace, 186]: 1\n@syscall[node, 10]: 1\n@syscall[multipathd, 230]: 1\n@syscall[node, 9]: 1\n@syscall[bpftrace, 1]: 1\n@syscall[node, 280]: 1\n@syscall[node, 11]: 1\n@syscall[node, 230]: 1\n@syscall[node, 4]: 2\n@syscall[systemd, 186]: 2\n@syscall[systemd, 286]: 2\n@syscall[pool-/usr/bin/f, 7]: 2\n@syscall[systemd, 0]: 2\n@syscall[systemd, 232]: 2\n@syscall[multipathd, 1]: 2\n@syscall[node, 7]: 4\n@syscall[node, 39]: 4\n@syscall[node, 21]: 4\n@syscall[node, 62]: 5\n@syscall[node, 332]: 5\n@syscall[sshd, 318]: 6\n@syscall[node, 47]: 6\n@syscall[multipathd, 202]: 7\n@syscall[bpftrace, 232]: 10\n@syscall[cpptools, 202]: 10\n@syscall[vmtoolsd, 7]: 10\n@syscall[sshd, 0]: 11\n@syscall[sshd, 1]: 12\n@syscall[sshd, 271]: 22\n@syscall[systemd-journal, 186]: 24\n@syscall[node, 89]: 24\n@syscall[fwupdmgr, 7]: 24\n@syscall[systemd-journal, 47]: 24\n@syscall[fwupdmgr, 1]: 24\n@syscall[systemd-journal, 232]: 24\n@syscall[node, 16]: 25\n@syscall[node, 262]: 25\n@syscall[node, 257]: 26\n@syscall[node, 3]: 26\n@syscall[containerd, 35]: 31\n@syscall[sshd, 14]: 44\n@syscall[vmtoolsd, 100]: 49\n@syscall[node, 1]: 55\n@syscall[node, 0]: 80\n@syscall[bpftrace, 321]: 95\n@syscall[containerd, 202]: 95\n@syscall[containerd, 281]: 98\n@syscall[node, 232]: 137\n@syscall[node, 202]: 199\n\nSystem call rates per second:\n@syscall[containerd, 39]: 1\n@syscall[cpptools, 19]: 1\n@syscall[node, 230]: 1\n@syscall[node, 280]: 1\n@syscall[cpptools, 0]: 1\n@syscall[bpftrace, 1]: 1\n@syscall[multipathd, 230]: 1\n@syscall[containerd, 234]: 1\n@syscall[bpftrace, 186]: 1\n@syscall[containerd, 15]: 1\n@syscall[HangDetector, 202]: 1\n@syscall[python3, 0]: 1\n@syscall[systemd, 286]: 2\n@syscall[systemd, 232]: 2\n@syscall[node, 4]: 2\n@syscall[pool-/usr/bin/f, 7]: 2\n@syscall[systemd, 186]: 2\n@syscall[systemd, 0]: 2\n@syscall[multipathd, 1]: 2\n@syscall[multipathd, 202]: 3\n@syscall[node, 47]: 3\n@syscall[containerd, 0]: 3\n@syscall[containerd, 1]: 3\n@syscall[node, 21]: 4\n@syscall[sshd, 318]: 5\n@syscall[cpptools, 202]: 5\n@syscall[node, 39]: 5\n@syscall[node, 62]: 5\n@syscall[node, 7]: 6\n@syscall[node, 332]: 6\n@syscall[sshd, 0]: 7\n@syscall[sshd, 1]: 7\n@syscall[bpftrace, 232]: 10\n@syscall[vmtoolsd, 7]: 11\n@syscall[node, 28]: 12\n@syscall[sshd, 271]: 14\n@syscall[fwupdmgr, 1]: 24\n@syscall[systemd-journal, 232]: 24\n@syscall[systemd-journal, 186]: 24\n@syscall[node, 10]: 24\n@syscall[fwupdmgr, 7]: 24\n@syscall[node, 89]: 24\n@syscall[systemd-journal, 47]: 24\n@syscall[node, 16]: 25\n@syscall[node, 262]: 25\n@syscall[node, 3]: 27\n@syscall[node, 257]: 27\n@syscall[sshd, 14]: 28\n@syscall[containerd, 35]: 32\n@syscall[node, 1]: 34\n@syscall[vmtoolsd, 100]: 54\n@syscall[node, 0]: 57\n@syscall[node, 232]: 90\n@syscall[containerd, 202]: 94\n@syscall[bpftrace, 321]: 105\n@syscall[containerd, 281]: 109\n@syscall[node, 202]: 138\n\nMonitoring ended.\n\n\n@syscall[python3, 0]: 1\n@syscall[timeout, 15]: 1\n@syscall[bpftrace, 3]: 1\n@syscall[HangDetector, 202]: 1\n@syscall[multipathd, 230]: 1\n@syscall[timeout, 61]: 1\n@syscall[timeout, 130]: 1\n@syscall[bpftrace, 15]: 1\n@syscall[bpftrace, 16]: 1\n@syscall[pool-/usr/bin/f, 7]: 2\n@syscall[node, 7]: 2\n@syscall[timeout, 13]: 2\n@syscall[multipathd, 1]: 2\n@syscall[vmtoolsd, 7]: 3\n@syscall[timeout, 62]: 4\n@syscall[bpftrace, 232]: 4\n@syscall[multipathd, 202]: 5\n@syscall[fwupdmgr, 7]: 7\n@syscall[systemd-journal, 232]: 7\n@syscall[systemd-journal, 47]: 7\n@syscall[fwupdmgr, 1]: 7\n@syscall[systemd-journal, 186]: 7\n@syscall[cpptools, 202]: 8\n@syscall[node, 232]: 8\n@syscall[node, 16]: 9\n@syscall[containerd, 35]: 9\n@syscall[node, 0]: 9\n@syscall[bpftrace, 321]: 9\n@syscall[node, 257]: 9\n@syscall[node, 262]: 9\n@syscall[node, 3]: 9\n@syscall[vmtoolsd, 100]: 15\n@syscall[containerd, 202]: 28\n@syscall[containerd, 281]: 29\n", "stderr": "", "returncode": 0, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nmonitors the rate of system calls made by specific user-space processes and identifies heavily used system calls\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that counts the number of system calls and the number of processes. It also prints the top 10 system call IDs and the top 10 processes at the end.\n\n```\nBEGIN\n{\n\tprintf(\"Counting syscalls... Hit Ctrl-C to end.\\n\");\n\t// ausyscall --dump | awk 'NR > 1 { printf(\"\\t@sysname[%d] = \\\"%s\\\";\\n\", $1, $2); }'\n}\n\ntracepoint:raw_syscalls:sys_enter\n{\n\t@syscall[args.id] = count();\n\t@process[comm] = count();\n}\n\nEND\n{\n\tprintf(\"\\nTop 10 syscalls IDs:\\n\");\n\tprint(@syscall, 10);\n\tclear(@syscall);\n\n\tprintf(\"\\nTop 10 processes:\\n\");\n\tprint(@process, 10);\n\tclear(@process);\n}\n\n```\n\nexample: Write a BPF code that traces sync-related system calls, such as sync(), syncfs(), fsync(), and fdatasync(), and prints the time, process ID, command, and event for each traced system call.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing sync syscalls... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-9s %-6s %-16s %s\\n\", \"TIME\", \"PID\", \"COMM\", \"EVENT\");\n}\n\ntracepoint:syscalls:sys_enter_sync,\ntracepoint:syscalls:sys_enter_syncfs,\ntracepoint:syscalls:sys_enter_fsync,\ntracepoint:syscalls:sys_enter_fdatasync,\ntracepoint:syscalls:sys_enter_sync_file_range*,\ntracepoint:syscalls:sys_enter_msync\n{\n\ttime(\"%H:%M:%S  \");\n\tprintf(\"%-6d %-16s %s\\n\", pid, comm, probe);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nmonitors the rate of system calls made by specific user-space processes and identifies heavily used system calls\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }", "stdout": "Attaching 2 probes...\n@: 3767\n@: 846\n@: 999\n@: 912\n@: 833\n@: 1082\n@: 822\n@: 4240\n@: 3831\n@: 3759\n@: 1067\n@: 844\n@: 1092\n@: 3207\n@: 5233\n@: 7561\n@: 1035\n@: 2305\n@: 1173\n\n\n@: 683\n", "stderr": "", "returncode": 0, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nMonitors the rate of syscall by second globally\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces key VFS calls, counts the number of times each call is invoked, and prints a per-second summary.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing key VFS calls... Hit Ctrl-C to end.\\n\");\n\n}\n\nkprobe:vfs_read*,\nkprobe:vfs_write*,\nkprobe:vfs_fsync,\nkprobe:vfs_open,\nkprobe:vfs_create\n{\n\t@[func] = count();\n}\n\ninterval:s:1\n{\n\ttime();\n\tprint(@);\n\tclear(@);\n}\n\nEND\n{\n\tclear(@);\n}\n\n```\n\nexample: Write a BPF code that traces new processes and counts the number of new process creations per second using the eBPF technology.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing new processes... Hit Ctrl-C to end.\\n\");\n\n}\n\ntracepoint:sched:sched_process_fork\n{\n\t@ = count();\n}\n\ninterval:s:1\n{\n\ttime(\"%H:%M:%S PIDs/sec: \");\n\tprint(@);\n\tclear(@);\n}\n\nEND\n{\n\tclear(@);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nMonitors the rate of syscall by second globally\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e #include <net/sock.h>\n\nBEGIN\n{\n  printf(\"Tracing socket operations. Hit Ctrl-C to end.\\n\");\n  printf(\"%-8s %-6s %-14s %-6s\\n\", \"TIME\", \"PID\", \"COMM\", \"SOCK_TYPE\");\n}\n\nkprobe:sock_init_data\n{\n  $sock = (struct sock *)arg0;\n  $sock_type = $sock->sk_type;\n\n  time(\"%H:%M:%S \");\n  printf(\"%-6d %-14s %-6d\\n\", pid, comm, $sock_type);\n}", "stdout": "Attaching 2 probes...\nTracing socket operations. Hit Ctrl-C to end.\nTIME     PID    COMM           SOCK_TYPE\n23:57:09 10038  node           0     \n23:57:09 10038  node           0     \n23:57:09 10038  node           0     \n23:57:09 10038  node           0     \n23:57:09 10038  node           0     \n23:57:09 10038  node           0     \n23:57:13 31237  sudo           0     \n23:57:13 31237  sudo           0     \n23:57:13 31237  sudo           0     \n23:57:13 31237  sudo           0     \n23:57:13 31237  sudo           0     \n23:57:13 31237  sudo           0     \n23:57:13 31237  sudo           0     \n23:57:13 31237  sudo           0     \n23:57:13 31237  sudo           0     \n23:57:13 31237  sudo           0     \n23:57:13 31237  sudo           0     \n23:57:13 31237  sudo           0     \n23:57:13 31237  sudo           0     \n23:57:13 31237  sudo           0     \n23:57:13 31237  sudo           0     \n23:57:13 31237  sudo           0     \n23:57:13 31237  sudo           0     \n23:57:13 31237  sudo           0     \n23:57:13 31237  sudo           0     \n23:57:13 31237  sudo           0     \n23:57:13 563    systemd-timesyn 0     \n23:57:18 572    vmtoolsd       0     \n\n\n", "stderr": "", "returncode": 0, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\ntraces socket operations and logs the socket types and process IDs involved.\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces TCP accept()s by dynamically tracing the kernel inet_csk_accept() socket function and prints information such as the time, process ID, communication, remote and local addresses and ports, and backlog length.\n\n```\n#ifndef BPFTRACE_HAVE_BTF\n#include <linux/socket.h>\n#include <net/sock.h>\n#else\n#include <sys/socket.h>\n#endif\n\nBEGIN\n{\n\tprintf(\"Tracing TCP accepts. Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-8s %-6s %-14s \", \"TIME\", \"PID\", \"COMM\");\n\tprintf(\"%-39s %-5s %-39s %-5s %s\\n\", \"RADDR\", \"RPORT\", \"LADDR\",\n\t    \"LPORT\", \"BL\");\n}\n\nkretprobe:inet_csk_accept\n{\n\t$sk = (struct sock *)retval;\n\t$inet_family = $sk->__sk_common.skc_family;\n\n\tif ($inet_family == AF_INET || $inet_family == AF_INET6) {\n\t\t// initialize variable type:\n\t\t$daddr = ntop(0);\n\t\t$saddr = ntop(0);\n\t\tif ($inet_family == AF_INET) {\n\t\t\t$daddr = ntop($sk->__sk_common.skc_daddr);\n\t\t\t$saddr = ntop($sk->__sk_common.skc_rcv_saddr);\n\t\t} else {\n\t\t\t$daddr = ntop(\n\t\t\t    $sk->__sk_common.skc_v6_daddr.in6_u.u6_addr8);\n\t\t\t$saddr = ntop(\n\t\t\t    $sk->__sk_common.skc_v6_rcv_saddr.in6_u.u6_addr8);\n\t\t}\n\t\t$lport = $sk->__sk_common.skc_num;\n\t\t$dport = $sk->__sk_common.skc_dport;\n\t\t$qlen  = $sk->sk_ack_backlog;\n\t\t$qmax  = $sk->sk_max_ack_backlog;\n\n\t\t// Destination port is big endian, it must be flipped\n\t\t$dport = bswap($dport);\n\n\t\ttime(\"%H:%M:%S \");\n\t\tprintf(\"%-6d %-14s \", pid, comm);\n\t\tprintf(\"%-39s %-5d %-39s %-5d \", $daddr, $dport, $saddr,\n\t\t    $lport);\n\t\tprintf(\"%d/%d\\n\", $qlen, $qmax);\n\t}\n}\n\n```\n\nexample: Write a BPF code that traces TCP connections by dynamically tracing kernel functions and prints out the time, PID, and addresses and ports of the source and destination of each connection.\n\n```\n#ifndef BPFTRACE_HAVE_BTF\n#include <linux/socket.h>\n#include <net/sock.h>\n#else\n#include <sys/socket.h>\n#endif\n\nBEGIN\n{\n  printf(\"Tracing tcp connections. Hit Ctrl-C to end.\\n\");\n  printf(\"%-8s %-8s %-16s \", \"TIME\", \"PID\", \"COMM\");\n  printf(\"%-39s %-6s %-39s %-6s\\n\", \"SADDR\", \"SPORT\", \"DADDR\", \"DPORT\");\n}\n\nkprobe:tcp_connect\n{\n  $sk = ((struct sock *) arg0);\n  $inet_family = $sk->__sk_common.skc_family;\n\n  if ($inet_family == AF_INET || $inet_family == AF_INET6) {\n    if ($inet_family == AF_INET) {\n      $daddr = ntop($sk->__sk_common.skc_daddr);\n      $saddr = ntop($sk->__sk_common.skc_rcv_saddr);\n    } else {\n      $daddr = ntop($sk->__sk_common.skc_v6_daddr.in6_u.u6_addr8);\n      $saddr = ntop($sk->__sk_common.skc_v6_rcv_saddr.in6_u.u6_addr8);\n    }\n    $lport = $sk->__sk_common.skc_num;\n    $dport = $sk->__sk_common.skc_dport;\n\n    // Destination port is big endian, it must be flipped\n    $dport = bswap($dport);\n\n    time(\"%H:%M:%S \");\n    printf(\"%-8d %-16s \", pid, comm);\n    printf(\"%-39s %-6d %-39s %-6d\\n\", $saddr, $lport, $daddr, $dport);\n  }\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\ntraces socket operations and logs the socket types and process IDs involved.\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN\n{\n\tprintf(\"Tracing hardware interrupts... Hit Ctrl-C to end.\\n\");\n}\n\ntracepoint:irq:irq_handler_entry\n{\n\t@[args->irq] = count();\n}\n\ninterval:s:1\n{\n\ttime();\n\tprint(@);\n\tclear(@);\n}\n\nEND\n{\n\tclear(@);\n}\n", "stdout": "Attaching 4 probes...\nTracing hardware interrupts... Hit Ctrl-C to end.\n23:57:14\n@[17]: 2\n@[19]: 4\n23:57:15\n@[17]: 1\n@[56]: 1\n@[19]: 5\n23:57:16\n@[19]: 4\n23:57:17\n@[56]: 1\n@[19]: 15\n23:57:18\n@[19]: 8\n@[17]: 19\n23:57:19\n@[57]: 1\n@[56]: 1\n@[17]: 2\n@[19]: 5\n23:57:20\n@[17]: 1\n@[19]: 4\n23:57:21\n@[56]: 1\n@[19]: 5\n23:57:22\n@[19]: 39\n23:57:23\n@[56]: 1\n@[19]: 53\n23:57:24\n@[17]: 2\n@[19]: 48\n23:57:25\n@[17]: 9\n@[19]: 13\n23:57:26\n@[56]: 1\n@[19]: 4\n23:57:27\n@[17]: 9\n@[19]: 10\n23:57:28\n@[57]: 1\n@[56]: 1\n@[19]: 8\n23:57:29\n@[19]: 5\n23:57:30\n@[56]: 1\n@[17]: 3\n@[19]: 4\n23:57:31\n@[57]: 2\n@[19]: 5\n23:57:32\n@[56]: 1\n@[19]: 9\n\n\n\n", "stderr": "", "returncode": 0, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nMonitors the rate of specific hardware interrupts and logs the interrupt sources\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces key VFS calls, counts the number of times each call is invoked, and prints a per-second summary.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing key VFS calls... Hit Ctrl-C to end.\\n\");\n\n}\n\nkprobe:vfs_read*,\nkprobe:vfs_write*,\nkprobe:vfs_fsync,\nkprobe:vfs_open,\nkprobe:vfs_create\n{\n\t@[func] = count();\n}\n\ninterval:s:1\n{\n\ttime();\n\tprint(@);\n\tclear(@);\n}\n\nEND\n{\n\tclear(@);\n}\n\n```\n\nexample: Write a BPF code that traces new processes and counts the number of new process creations per second using the eBPF technology.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing new processes... Hit Ctrl-C to end.\\n\");\n\n}\n\ntracepoint:sched:sched_process_fork\n{\n\t@ = count();\n}\n\ninterval:s:1\n{\n\ttime(\"%H:%M:%S PIDs/sec: \");\n\tprint(@);\n\tclear(@);\n}\n\nEND\n{\n\tclear(@);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nMonitors the rate of specific hardware interrupts and logs the interrupt sources\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN\n{\n\tprintf(\"Tracing file read and write events... Hit Ctrl-C to end.\\n\");\n}\n\ntracepoint:syscalls:sys_enter_read,\ntracepoint:syscalls:sys_enter_write\n{\n\t@filename[tid, comm] = str(args->filename);\n\t@bytes[tid, comm] = args->count;\n}\n\ntracepoint:syscalls:sys_exit_read,\ntracepoint:syscalls:sys_exit_write\n/@filename[tid, comm]/\n{\n\t@IO[tid, comm, @filename[tid, comm]] = hist(@bytes[tid, comm]);\n\tdelete(@filename[tid, comm]);\n\tdelete(@bytes[tid, comm]);\n}\n\nEND\n{\n\tprintf(\"\\nI/O size (bytes) distribution by process and file:\");\n}", "stdout": "", "stderr": "stdin:9:25-43: ERROR: Struct/union of type 'struct _tracepoint_syscalls_sys_enter_read' does not contain a field named 'filename'\n    @filename[tid, comm] = str(args->filename);\n                           ~~~~~~~~~~~~~~~~~~\nstdin:9:25-43: ERROR: Struct/union of type 'struct _tracepoint_syscalls_sys_enter_write' does not contain a field named 'filename'\n    @filename[tid, comm] = str(args->filename);\n                           ~~~~~~~~~~~~~~~~~~\nstdin:9:25-44: ERROR: str() expects an integer or a pointer type as first argument (none provided)\n    @filename[tid, comm] = str(args->filename);\n                           ~~~~~~~~~~~~~~~~~~~\n", "returncode": 1, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\ntraces file read and write events and calculates the I/O size distribution for each file.\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces block device I/O and creates histograms of I/O size in bytes for each process.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing block device I/O... Hit Ctrl-C to end.\\n\");\n}\n\ntracepoint:block:block_rq_issue\n{\n\t@[args.comm] = hist(args.bytes);\n}\n\nEND\n{\n\tprintf(\"\\nI/O size (bytes) histograms by process name:\");\n}\n\n```\n\nexample: Write a BPF code that traces block device I/O latency by calculating the time difference between the start and completion of I/O operations and storing them in a histogram.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing block device I/O... Hit Ctrl-C to end.\\n\");\n}\n\nkprobe:blk_account_io_start,\nkprobe:__blk_account_io_start\n{\n\t@start[arg0] = nsecs;\n}\n\nkprobe:blk_account_io_done,\nkprobe:__blk_account_io_done\n/@start[arg0]/\n{\n\t@usecs = hist((nsecs - @start[arg0]) / 1000);\n\tdelete(@start[arg0]);\n}\n\nEND\n{\n\tclear(@start);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\ntraces file read and write events and calculates the I/O size distribution for each file.\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:sched:sched_process_fork\n{\n    printf(\"Parent PID: %d, Parent CMD: %s, Child PID: %d, Child CMD: %s\\n\", pid, comm, args->child_pid, args->child_comm);\n}", "stdout": "Attaching 1 probe...\nParent PID: 30931, Parent CMD: python3, Child PID: 31274, Child CMD: python3\nParent PID: 31274, Parent CMD: sudo, Child PID: 31275, Child CMD: sudo\nParent PID: 31275, Parent CMD: sudo, Child PID: 31276, Child CMD: sudo\nParent PID: 31276, Parent CMD: timeout, Child PID: 31277, Child CMD: timeout\nParent PID: 31277, Parent CMD: bpftrace, Child PID: 31278, Child CMD: bpftrace\nParent PID: 31277, Parent CMD: bpftrace, Child PID: 31279, Child CMD: bpftrace\nParent PID: 31277, Parent CMD: bpftrace, Child PID: 31280, Child CMD: bpftrace\nParent PID: 31277, Parent CMD: bpftrace, Child PID: 31281, Child CMD: bpftrace\nParent PID: 31277, Parent CMD: bpftrace, Child PID: 31282, Child CMD: bpftrace\nParent PID: 31277, Parent CMD: bpftrace, Child PID: 31283, Child CMD: bpftrace\nParent PID: 31277, Parent CMD: bpftrace, Child PID: 31284, Child CMD: bpftrace\nParent PID: 2, Parent CMD: kthreadd, Child PID: 31285, Child CMD: kthreadd\nParent PID: 10038, Parent CMD: node, Child PID: 31286, Child CMD: node\nParent PID: 10038, Parent CMD: node, Child PID: 31287, Child CMD: node\nParent PID: 10038, Parent CMD: node, Child PID: 31288, Child CMD: node\nParent PID: 859, Parent CMD: pool-spawner, Child PID: 31289, Child CMD: pool-spawner\n\n\n", "stderr": "", "returncode": 0, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nTraces process forking events and logs the parent and child process IDs and command names.\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces new processes created via the exec() system call, providing the timestamp, process ID, and arguments of the executed command.\n\n```\nBEGIN\n{\n\tprintf(\"%-10s %-5s %s\\n\", \"TIME(ms)\", \"PID\", \"ARGS\");\n}\n\ntracepoint:syscalls:sys_enter_exec*\n{\n\tprintf(\"%-10u %-5d \", elapsed / 1e6, pid);\n\tjoin(args.argv);\n}\n\n```\n\nexample: Write a BPF code that traces new processes and counts the number of new process creations per second using the eBPF technology.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing new processes... Hit Ctrl-C to end.\\n\");\n\n}\n\ntracepoint:sched:sched_process_fork\n{\n\t@ = count();\n}\n\ninterval:s:1\n{\n\ttime(\"%H:%M:%S PIDs/sec: \");\n\tprint(@);\n\tclear(@);\n}\n\nEND\n{\n\tclear(@);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nTraces process forking events and logs the parent and child process IDs and command names.\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter_read,tracepoint:syscalls:sys_enter_write { @[comm] = sum(args->count); }", "stdout": "Attaching 2 probes...\n\n\n@[pool-udisksd]: 8\n@[udisksd]: 16\n@[dockerd]: 17\n@[multipathd]: 336\n@[containerd]: 493\n@[systemd-logind]: 544\n@[timeout]: 832\n@[cpptools]: 8192\n@[rs:main Q:Reg]: 8597\n@[snapd]: 13064\n@[irqbalance]: 16384\n@[systemd]: 16824\n@[fwupdmgr]: 30558\n@[vmtoolsd]: 48128\n@[systemd-journal]: 84028\n@[git]: 221413\n@[sudo]: 438437\n@[python3]: 477083\n@[bpftrace]: 2470977\n@[node]: 8114765\n@[sshd]: 21420122\n", "stderr": "", "returncode": 0, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\ntraces file read and write events and summarizes the Read bytes by process.\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces block device I/O and creates histograms of I/O size in bytes for each process.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing block device I/O... Hit Ctrl-C to end.\\n\");\n}\n\ntracepoint:block:block_rq_issue\n{\n\t@[args.comm] = hist(args.bytes);\n}\n\nEND\n{\n\tprintf(\"\\nI/O size (bytes) histograms by process name:\");\n}\n\n```\n\nexample: Write a BPF code that traces file system writeback events, including the time of occurrence, device information, reason, and duration. This code can help identify performance issues related to writeback events.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing writeback... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-9s %-8s %-8s %-16s %s\\n\", \"TIME\", \"DEVICE\", \"PAGES\",\n\t    \"REASON\", \"ms\");\n\n\t// see /sys/kernel/debug/tracing/events/writeback/writeback_start/format\n\t@reason[0] = \"background\";\n\t@reason[1] = \"vmscan\";\n\t@reason[2] = \"sync\";\n\t@reason[3] = \"periodic\";\n\t@reason[4] = \"laptop_timer\";\n\t@reason[5] = \"free_more_memory\";\n\t@reason[6] = \"fs_free_space\";\n\t@reason[7] = \"forker_thread\";\n}\n\ntracepoint:writeback:writeback_start\n{\n\t@start[args.sb_dev] = nsecs;\n}\n\ntracepoint:writeback:writeback_written\n{\n\t$sb_dev = args.sb_dev;\n\t$s = @start[$sb_dev];\n\tdelete(@start[$sb_dev]);\n\t$lat = $s ? (nsecs - $s) / 1000 : 0;\n\n\ttime(\"%H:%M:%S  \");\n\tprintf(\"%-8s %-8d %-16s %d.%03d\\n\", args.name,\n\t    args.nr_pages & 0xffff,\t// TODO: explain these bitmasks\n\t    @reason[args.reason & 0xffffffff],\n\t    $lat / 1000, $lat % 1000);\n}\n\nEND\n{\n\tclear(@reason);\n\tclear(@start);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\ntraces file read and write events and summarizes the Read bytes by process.\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:kmalloc { @[comm] = hist(arg0); }", "stdout": "Attaching 1 probe...\n", "stderr": "stdin:1:1-15: WARNING: kmalloc is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\nkprobe:kmalloc { @[comm] = hist(arg0); }\n~~~~~~~~~~~~~~\ncannot attach kprobe, probe entry may not exist\nERROR: Error attaching probe: 'kprobe:kmalloc'\n", "returncode": 255, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nMonitors the rate of memory allocations in the kernel and print histogram of the allocation sizes.\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces the kernel OOM killer and prints basic details, including the system load averages, providing context on the system state at the time of the OOM.\n\n```\n#ifndef BPFTRACE_HAVE_BTF\n#include <linux/oom.h>\n#endif\n\nBEGIN\n{\n\tprintf(\"Tracing oom_kill_process()... Hit Ctrl-C to end.\\n\");\n}\n\nkprobe:oom_kill_process\n{\n\t$oc = (struct oom_control *)arg0;\n\ttime(\"%H:%M:%S \");\n\tprintf(\"Triggered by PID %d (\\\"%s\\\"), \", pid, comm);\n\tprintf(\"OOM kill of PID %d (\\\"%s\\\"), %d pages, loadavg: \",\n\t    $oc->chosen->pid, $oc->chosen->comm, $oc->totalpages);\n\tcat(\"/proc/loadavg\");\n}\n\n```\n\nexample: Write a BPF code that traces block device I/O and creates histograms of I/O size in bytes for each process.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing block device I/O... Hit Ctrl-C to end.\\n\");\n}\n\ntracepoint:block:block_rq_issue\n{\n\t@[args.comm] = hist(args.bytes);\n}\n\nEND\n{\n\tprintf(\"\\nI/O size (bytes) histograms by process name:\");\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nMonitors the rate of memory allocations in the kernel and print histogram of the allocation sizes.\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e #include <linux/sched.h>\n\nBEGIN\n{\n  printf(\"Tracing process resource limits... Hit Ctrl-C to end.\\n\");\n}\n\ntracepoint:sched:sched_process_fork\n{\n  $task = (struct task_struct *)arg0;\n  $rlim = $task->signal->rlim;\n  $max_fd = $rlim[RLIMIT_NOFILE].rlim_cur;\n  $max_mem = $rlim[RLIMIT_AS].rlim_cur;\n\n  if ($max_fd < 1024 || $max_mem < 1024*1024*1024) {\n    printf(\"PID %d (%s) has low resource limits: max_fd=%d, max_mem=%d\\n\", $task->pid, $task->comm, $max_fd, $max_mem);\n  }\n}\n\nEND\n{\n  printf(\"End of tracing.\\n\");\n}", "stdout": "", "stderr": "stdin:10:11-38: ERROR: The arg0 builtin can only be used with 'kprobes', 'uprobes' and 'usdt' probes\n  $task = (struct task_struct *)arg0;\n          ~~~~~~~~~~~~~~~~~~~~~~~~~~~\nstdin:11:11-30: ERROR: Struct/union of type 'struct signal_struct' does not contain a field named 'rlim'\n  $rlim = $task->signal->rlim;\n          ~~~~~~~~~~~~~~~~~~~\n", "returncode": 1, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nTraces process resource limits (e.g., memory, file descriptors) and logs when limits are exceeded.\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces new processes and counts the number of new process creations per second using the eBPF technology.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing new processes... Hit Ctrl-C to end.\\n\");\n\n}\n\ntracepoint:sched:sched_process_fork\n{\n\t@ = count();\n}\n\ninterval:s:1\n{\n\ttime(\"%H:%M:%S PIDs/sec: \");\n\tprint(@);\n\tclear(@);\n}\n\nEND\n{\n\tclear(@);\n}\n\n```\n\nexample: Write a BPF code that traces block device I/O and creates histograms of I/O size in bytes for each process.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing block device I/O... Hit Ctrl-C to end.\\n\");\n}\n\ntracepoint:block:block_rq_issue\n{\n\t@[args.comm] = hist(args.bytes);\n}\n\nEND\n{\n\tprintf(\"\\nI/O size (bytes) histograms by process name:\");\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nTraces process resource limits (e.g., memory, file descriptors) and logs when limits are exceeded.\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:signal:signal_deliver { printf(\"Signal %s delivered to PID %d\", str(sig), pid); }", "stdout": "", "stderr": "stdin:1:76-83: ERROR: Unknown identifier: 'sig'\ntracepoint:signal:signal_deliver { printf(\"Signal %s delivered to PID %d\", str(sig), pid); }\n                                                                           ~~~~~~~\nstdin:1:76-84: ERROR: str() expects an integer or a pointer type as first argument (none provided)\ntracepoint:signal:signal_deliver { printf(\"Signal %s delivered to PID %d\", str(sig), pid); }\n                                                                           ~~~~~~~~\n", "returncode": 1, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nTraces process signals and logs the signal names and process IDs affected.\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Please write a BPF code that traces signals issued by the kill() syscall and prints information such as the timestamp, process ID, command, signal, target process ID, and the result of the kill() syscall.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing kill() signals... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-9s %-6s %-16s %-4s %-6s %s\\n\", \"TIME\", \"PID\", \"COMM\", \"SIG\",\n\t    \"TPID\", \"RESULT\");\n}\n\ntracepoint:syscalls:sys_enter_kill\n{\n\t@tpid[tid] = args.pid;\n\t@tsig[tid] = args.sig;\n}\n\ntracepoint:syscalls:sys_exit_kill\n/@tpid[tid]/\n{\n\ttime(\"%H:%M:%S  \");\n\tprintf(\"%-6d %-16s %-4d %-6d %d\\n\", pid, comm, @tsig[tid], @tpid[tid],\n\t    args.ret);\n\tdelete(@tpid[tid]);\n\tdelete(@tsig[tid]);\n}\n\n```\n\nexample: Write a BPF code that counts the number of system calls and the number of processes. It also prints the top 10 system call IDs and the top 10 processes at the end.\n\n```\nBEGIN\n{\n\tprintf(\"Counting syscalls... Hit Ctrl-C to end.\\n\");\n\t// ausyscall --dump | awk 'NR > 1 { printf(\"\\t@sysname[%d] = \\\"%s\\\";\\n\", $1, $2); }'\n}\n\ntracepoint:raw_syscalls:sys_enter\n{\n\t@syscall[args.id] = count();\n\t@process[comm] = count();\n}\n\nEND\n{\n\tprintf(\"\\nTop 10 syscalls IDs:\\n\");\n\tprint(@syscall, 10);\n\tclear(@syscall);\n\n\tprintf(\"\\nTop 10 processes:\\n\");\n\tprint(@process, 10);\n\tclear(@process);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nTraces process signals and logs the signal names and process IDs affected.\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:copy_net_ns { printf(\"Network namespace created: PID %d, COMM %s\", pid, comm); }\nkprobe:cleanup_net { printf(\"Network namespace deleted: PID %d, COMM %s\", pid, comm); }", "stdout": "Attaching 2 probes...\n\n\n", "stderr": "", "returncode": 0, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\ntracks the creation and deletion of network namespaces.\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces block device I/O latency by calculating the time difference between the start and completion of I/O operations and storing them in a histogram.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing block device I/O... Hit Ctrl-C to end.\\n\");\n}\n\nkprobe:blk_account_io_start,\nkprobe:__blk_account_io_start\n{\n\t@start[arg0] = nsecs;\n}\n\nkprobe:blk_account_io_done,\nkprobe:__blk_account_io_done\n/@start[arg0]/\n{\n\t@usecs = hist((nsecs - @start[arg0]) / 1000);\n\tdelete(@start[arg0]);\n}\n\nEND\n{\n\tclear(@start);\n}\n\n```\n\nexample: Write a BPF code that traces block I/O and measures the latency by initializing stacks, using kprobes and histogram.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing block I/O with init stacks. Hit Ctrl-C to end.\\n\");\n}\n\nkprobe:blk_account_io_start,\nkprobe:__blk_account_io_start\n{\n\t@reqstack[arg0] = kstack;\n\t@reqts[arg0] = nsecs;\n}\n\nkprobe:blk_start_request,\nkprobe:blk_mq_start_request\n/@reqts[arg0]/\n{\n\t@usecs[@reqstack[arg0]] = hist(nsecs - @reqts[arg0]);\n\tdelete(@reqstack[arg0]);\n\tdelete(@reqts[arg0]);\n}\n\nEND\n{\n\tclear(@reqstack); clear(@reqts);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\ntracks the creation and deletion of network namespaces.\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN\n{\n    printf(\"Tracing syscall errors... Hit Ctrl-C to end.\\n\");\n    printf(\"%-6s %-16s %-6s %-16s\\n\", \"PID\", \"COMM\", \"ERR\", \"SYSCALL\");\n}\n\ntracepoint:syscalls:sys_exit\n{\n    $ret = args->ret;\n    $errno = $ret >= 0 ? 0 : - $ret;\n    if ($errno != 0) {\n        @syscall_errors[pid, comm, $errno, probe] = count();\n    }\n}\n\ninterval:s:1\n{\n    time(\"%H:%M:%S \");\n    print(@syscall_errors);\n    clear(@syscall_errors);\n}\n\nEND\n{\n    clear(@syscall_errors);\n}", "stdout": "", "stderr": "stdin:5-7: ERROR: tracepoint not found: syscalls:sys_exit\n", "returncode": 1, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nMonitors the rate of system call errors (e.g., ENOENT, EACCES) for specific processes\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces new processes and counts the number of new process creations per second using the eBPF technology.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing new processes... Hit Ctrl-C to end.\\n\");\n\n}\n\ntracepoint:sched:sched_process_fork\n{\n\t@ = count();\n}\n\ninterval:s:1\n{\n\ttime(\"%H:%M:%S PIDs/sec: \");\n\tprint(@);\n\tclear(@);\n}\n\nEND\n{\n\tclear(@);\n}\n\n```\n\nexample: Write a BPF code that traces the syscalls statfs(), statx(), newstat(), and newlstat(), providing information about the PID, process name, error code, and path being accessed.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing stat syscalls... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-6s %-16s %3s %s\\n\", \"PID\", \"COMM\", \"ERR\", \"PATH\");\n}\n\ntracepoint:syscalls:sys_enter_statfs\n{\n\t@filename[tid] = args.pathname;\n}\n\ntracepoint:syscalls:sys_enter_statx,\ntracepoint:syscalls:sys_enter_newstat,\ntracepoint:syscalls:sys_enter_newlstat\n{\n\t@filename[tid] = args.filename;\n}\n\ntracepoint:syscalls:sys_exit_statfs,\ntracepoint:syscalls:sys_exit_statx,\ntracepoint:syscalls:sys_exit_newstat,\ntracepoint:syscalls:sys_exit_newlstat\n/@filename[tid]/\n{\n\t$ret = args.ret;\n\t$errno = $ret >= 0 ? 0 : - $ret;\n\n\tprintf(\"%-6d %-16s %3d %s\\n\", pid, comm, $errno,\n\t    str(@filename[tid]));\n\tdelete(@filename[tid]);\n}\n\nEND\n{\n\tclear(@filename);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nMonitors the rate of system call errors (e.g., ENOENT, EACCES) for specific processes\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter_open, tracepoint:syscalls:sys_enter_openat { printf(\"%s opened file %s\", comm, str(args->filename)); }", "stdout": "Attaching 2 probes...\nnode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /home/yunwei/.vscode-server/data/User/workspaceStorage/68306157node opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/meminfonode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /home/yunwei/.vscode-server/data/User/workspaceStorage/68306157node opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /home/yunwei/.vscode-server/data/User/workspaceStorage/68306157node opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /home/yunwei/.vscode-server/data/User/workspaceStorage/68306157node opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/meminfonode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinevmtoolsd opened file /proc/meminfovmtoolsd opened file /proc/vmstatvmtoolsd opened file /proc/statvmtoolsd opened file /proc/zoneinfovmtoolsd opened file /proc/uptimevmtoolsd opened file /proc/diskstatsnode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /home/yunwei/.vscode-server/data/User/workspaceStorage/68306157node opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /home/yunwei/.vscode-server/data/User/workspaceStorage/68306157node opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/meminfonode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /home/yunwei/.vscode-server/data/User/workspaceStorage/68306157node opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /home/yunwei/.vscode-server/data/User/workspaceStorage/68306157node opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /home/yunwei/.vscode-server/data/User/workspaceStorage/68306157irqbalance opened file /proc/interruptsirqbalance opened file /proc/statnode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/meminfonode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinesudo opened file /usr/libexec/sudo/glibc-hwcaps/x86-64-v3/libaudit.so.1sudo opened file /usr/libexec/sudo/glibc-hwcaps/x86-64-v2/libaudit.so.1sudo opened file /usr/libexec/sudo/libaudit.so.1sudo opened file /etc/ld.so.cachesudo opened file /lib/x86_64-linux-gnu/libaudit.so.1sudo opened file /usr/libexec/sudo/libselinux.so.1sudo opened file /lib/x86_64-linux-gnu/libselinux.so.1sudo opened file /usr/libexec/sudo/libsudo_util.so.0sudo opened file /usr/libexec/sudo/libc.so.6sudo opened file /lib/x86_64-linux-gnu/libc.so.6sudo opened file /lib/x86_64-linux-gnu/libcap-ng.so.0sudo opened file /lib/x86_64-linux-gnu/libpcre2-8.so.0sudo opened file sudo opened file /proc/filesystemssudo opened file /usr/lib/locale/locale-archivesudo opened file /etc/localtimesudo opened file /etc/sudo.confsudo opened file /etc/sudo.confsudo opened file /dev/ttysudo opened file /etc/nsswitch.confsudo opened file /etc/passwdsudo opened file /proc/sys/kernel/ngroups_maxsudo opened file /proc/self/statsudo opened file /proc/sys/kernel/seccomp/actions_availsudo opened file /usr/libexec/sudo/sudoers.sosudo opened file /usr/libexec/sudo/libpam.so.0sudo opened file /etc/ld.so.cachesudo opened file /lib/x86_64-linux-gnu/libpam.so.0sudo opened file /usr/libexec/sudo/libz.so.1sudo opened file /lib/x86_64-linux-gnu/libz.so.1sudo opened file /usr/share/locale/locale.aliassudo opened file /usr/share/locale/en_US.UTF-8/LC_MESSAGES/sudoers.mosudo opened file /usr/share/locale/en_US.utf8/LC_MESSAGES/sudoers.mosudo opened file /usr/share/locale/en_US/LC_MESSAGES/sudoers.mosudo opened file /usr/share/locale/en.UTF-8/LC_MESSAGES/sudoers.mosudo opened file /usr/share/locale/en.utf8/LC_MESSAGES/sudoers.mosudo opened file /usr/share/locale/en/LC_MESSAGES/sudoers.mosudo opened file /usr/share/locale-langpack/en_US.UTF-8/LC_MESSAGES/sudoers.mosudo opened file /usr/share/locale-langpack/en_US.utf8/LC_MESSAGES/sudoers.mosudo opened file /usr/share/locale-langpack/en_US/LC_MESSAGES/sudoers.mosudo opened file /usr/share/locale-langpack/en.UTF-8/LC_MESSAGES/sudoers.mosudo opened file /usr/share/locale-langpack/en.utf8/LC_MESSAGES/sudoers.mosudo opened file /usr/share/locale-langpack/en/LC_MESSAGES/sudoers.mosudo opened file /etc/passwdsudo opened file /etc/passwdsudo opened file /etc/nsswitch.confsudo opened file /etc/sudoerssudo opened file /etc/sudoers.dsudo opened file /etc/sudoers.d/READMEsudo opened file /etc/host.confsudo opened file /etc/resolv.confsudo opened file /etc/hostssudo opened file /proc/sys/kernel/ngroups_maxsudo opened file /etc/groupsudo opened file /etc/ld.so.cachesudo opened file /lib/x86_64-linux-gnu/libnss_systemd.so.2sudo opened file /lib/x86_64-linux-gnu/libcap.so.2sudo opened file /lib/x86_64-linux-gnu/libm.so.6sudo opened file /etc/groupsudo opened file /etc/groupsudo opened file /etc/groupsudo opened file /etc/groupsudo opened file /etc/groupsudo opened file /etc/groupsudo opened file /etc/groupsudo opened file /etc/pam.d/sudosudo opened file /lib/x86_64-linux-gnu/security/pam_limits.sosudo opened file /lib/x86_64-linux-gnu/security/pam_env.sosudo opened file /etc/pam.d/common-authsudo opened file /lib/x86_64-linux-gnu/security/pam_unix.sosudo opened file /etc/ld.so.cachesudo opened file /lib/x86_64-linux-gnu/libcrypt.so.1sudo opened file /lib/x86_64-linux-gnu/security/pam_deny.sosudo opened file /lib/x86_64-linux-gnu/security/pam_permit.sosudo opened file /lib/x86_64-linux-gnu/security/pam_cap.sosudo opened file /etc/pam.d/common-accountsudo opened file /etc/pam.d/common-session-noninteractivesudo opened file /lib/x86_64-linux-gnu/security/pam_umask.sosudo opened file /etc/pam.d/othersudo opened file /etc/pam.d/common-authsudo opened file /etc/pam.d/common-accountsudo opened file /etc/pam.d/common-passwordsudo opened file /etc/pam.d/common-sessionsudo opened file /lib/x86_64-linux-gnu/security/pam_systemd.sosudo opened file /etc/ld.so.cachesudo opened file /lib/x86_64-linux-gnu/libpam_misc.so.0sudo opened file /run/sudo/tssudo opened file yunweisudo opened file /proc/statsudo opened file /proc/1813/statsudo opened file sudo opened file /etc/passwdsudo opened file /etc/shadowsudo opened file /home/yunwei/.sudo_as_admin_successfulsudo opened file /etc/passwdsudo opened file /etc/groupsudo opened file /etc/passwdsudo opened file /dev/ttysudo opened file /etc/groupsudo opened file /dev/ptmxsudo opened file /var/run/utmpsudo opened file /var/run/utmpsystemd-logind opened file /var/run/utmpsudo opened file /etc/login.defssudo opened file /etc/passwdsudo opened file /etc/groupsudo opened file /etc/groupsudo opened file /etc/security/capability.confsudo opened file /etc/passwdsudo opened file /proc/1/limitssudo opened file /etc/security/limits.confsudo opened file /etc/security/limits.dsudo opened file /usr/lib/x86_64-linux-gnu/gconv/gconv-modules.cachesudo opened file /etc/security/pam_env.confsudo opened file /etc/environmentsudo opened file /etc/security/pam_env.confsudo opened file /etc/default/localesudo opened file sudo opened file /etc/login.defssudo opened file /etc/passwdsudo opened file /etc/login.defssudo opened file /var/run/utmpsudo opened file /etc/passwdsystemd-journal opened file /proc/31332/commsystemd-journal opened file /proc/31332/cmdlinesystemd-journal opened file /proc/31332/statussystemd-journal opened file /proc/31332/attr/currentsystemd-journal opened file /proc/31332/sessionidsystemd-journal opened file /proc/31332/loginuidsystemd-journal opened file /proc/31332/cgroupsystemd-journal opened file /run/systemd/units/log-extra-fields:session-1.scopesystemd-journal opened file /run/log/journal/67922be613574cad92bec8b012036c37/system.journasystemd-journal opened file /proc/31332/commsystemd-journal opened file /proc/31332/cmdlinesystemd-journal opened file /proc/31332/statussystemd-journal opened file /proc/31332/attr/currentsystemd-journal opened file /proc/31332/sessionidsystemd-journal opened file /proc/31332/loginuidsystemd-journal opened file /proc/31332/cgroupsystemd-journal opened file /run/systemd/units/log-extra-fields:session-1.scopesystemd-journal opened file /run/log/journal/67922be613574cad92bec8b012036c37/system.journatimeout opened file /etc/ld.so.cachetimeout opened file /lib/x86_64-linux-gnu/libc.so.6timeout opened file /usr/lib/locale/locale-archivebpftrace opened file /etc/ld.so.cachebpftrace opened file /lib/x86_64-linux-gnu/libbpf.so.1bpftrace opened file /lib/x86_64-linux-gnu/libbcc_bpf.so.0bpftrace opened file /lib/x86_64-linux-gnu/libdw.so.1bpftrace opened file /lib/x86_64-linux-gnu/libclang-14.so.13bpftrace opened file /lib/x86_64-linux-gnu/libLLVM-14.so.1bpftrace opened file /lib/x86_64-linux-gnu/libstdc++.so.6bpftrace opened file /lib/x86_64-linux-gnu/libgcc_s.so.1bpftrace opened file /lib/x86_64-linux-gnu/libc.so.6bpftrace opened file /lib/x86_64-linux-gnu/libelf.so.1bpftrace opened file /lib/x86_64-linux-gnu/libz.so.1bpftrace opened file /lib/x86_64-linux-gnu/libm.so.6bpftrace opened file /lib/x86_64-linux-gnu/liblzma.so.5bpftrace opened file /lib/x86_64-linux-gnu/libbz2.so.1.0bpftrace opened file /lib/x86_64-linux-gnu/../lib/glibc-hwcaps/x86-64-v3/libffi.so.8bpftrace opened file /lib/x86_64-linux-gnu/../lib/glibc-hwcaps/x86-64-v2/libffi.so.8bpftrace opened file /lib/x86_64-linux-gnu/../lib/libffi.so.8bpftrace opened file /lib/x86_64-linux-gnu/libffi.so.8bpftrace opened file /lib/x86_64-linux-gnu/libedit.so.2bpftrace opened file /lib/x86_64-linux-gnu/libtinfo.so.6bpftrace opened file /lib/x86_64-linux-gnu/libxml2.so.2bpftrace opened file /lib/x86_64-linux-gnu/libbsd.so.0bpftrace opened file /lib/x86_64-linux-gnu/libicuuc.so.72bpftrace opened file /lib/x86_64-linux-gnu/libmd.so.0bpftrace opened file /lib/x86_64-linux-gnu/libicudata.so.72node opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinebpftrace opened file /sys/kernel/debug/tracing/available_filter_functionsnode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /home/yunwei/.vscode-server/data/User/workspaceStorage/68306157bpftrace opened file /sys/devices/system/cpu/possiblebpftrace opened file /proc/sys/kernel/randomize_va_spacebpftrace opened file /sys/kernel/security/lockdownbpftrace opened file /sys/kernel/debug/tracing/events/syscalls/sys_exit/formatsudo opened file /var/run/utmpsudo opened file /var/run/utmpsystemd-logind opened file /var/run/utmpsudo opened file /etc/login.defssudo opened file /etc/login.defssystemd-journal opened file /run/log/journal/67922be613574cad92bec8b012036c37/system.journasystemd opened file /proc/31333/commsystemd opened file /proc/31333/commsystemd opened file /proc/31333/cgroupsystemd opened file /sys/fs/cgroup/user.slice/user-1000.slice/session-1.scope/memorpython3 opened file vector_db_with_example.jsonpython3 opened file data_save/vector_db.faisspython3 opened file data_save/vector_db.pklnode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /home/yunwei/OpenCopilot/evaluation/vector_db_with_example.jsonnode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /home/yunwei/.vscode-server/data/User/workspaceStorage/68306157node opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/meminfonode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /home/yunwei/.vscode-server/data/User/workspaceStorage/68306157node opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /home/yunwei/.vscode-server/data/User/workspaceStorage/68306157node opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /home/yunwei/.vscode-server/data/User/workspaceStorage/68306157node opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/meminfonode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /home/yunwei/.vscode-server/data/User/workspaceStorage/68306157node opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /home/yunwei/.vscode-server/data/User/workspaceStorage/68306157node opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinesystemd-journal opened file /proc/19214/statussystemd-journal opened file /proc/19214/statussystemd-journal opened file /proc/19214/commsystemd-journal opened file /proc/19214/cmdlinesystemd-journal opened file /proc/19214/statussystemd-journal opened file /proc/19214/attr/currentsystemd-journal opened file /proc/19214/sessionidsystemd-journal opened file /proc/19214/loginuidsystemd-journal opened file /proc/19214/cgroupsystemd-journal opened file /run/systemd/units/log-extra-fields:fwupd-refresh.servicesystemd-journal opened file /var/log/journal/67922be613574cad92bec8b012036c37systemd-journal opened file /run/log/journal/67922be613574cad92bec8b012036c37/system.journanode opened file /proc/meminfonode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /home/yunwei/.vscode-server/data/User/workspaceStorage/68306157node opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinevmtoolsd opened file /etc/mtabvmtoolsd opened file /proc/devicesvmtoolsd opened file /sys/class/block/sda2/../device/../../../classvmtoolsd opened file /sys/class/block/sda2/../device/../../../labelvmtoolsd opened file /run/systemd/resolve/resolv.confvmtoolsd opened file /proc/net/routevmtoolsd opened file /proc/net/ipv6_routevmtoolsd opened file /proc/uptimenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /home/yunwei/.vscode-server/data/User/workspaceStorage/68306157node opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlineirqbalance opened file /proc/interruptsirqbalance opened file /proc/statnode opened file /home/yunwei/.vscode-server/data/User/workspaceStorage/68306157node opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/meminfonode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /home/yunwei/.vscode-server/data/User/workspaceStorage/68306157\n\n", "stderr": "", "returncode": 0, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nPrint files opened events by process\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces open() and openat() syscalls, displaying the process ID, command name, file descriptor, error code, and file path.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing open syscalls... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-6s %-16s %4s %3s %s\\n\", \"PID\", \"COMM\", \"FD\", \"ERR\", \"PATH\");\n}\n\ntracepoint:syscalls:sys_enter_open,\ntracepoint:syscalls:sys_enter_openat\n{\n\t@filename[tid] = args.filename;\n}\n\ntracepoint:syscalls:sys_exit_open,\ntracepoint:syscalls:sys_exit_openat\n/@filename[tid]/\n{\n\t$ret = args.ret;\n\t$fd = $ret >= 0 ? $ret : -1;\n\t$errno = $ret >= 0 ? 0 : - $ret;\n\n\tprintf(\"%-6d %-16s %4d %3d %s\\n\", pid, comm, $fd, $errno,\n\t    str(@filename[tid]));\n\tdelete(@filename[tid]);\n}\n\nEND\n{\n\tclear(@filename);\n}\n\n```\n\nexample: Write a BPF code that traces new processes and counts the number of new process creations per second using the eBPF technology.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing new processes... Hit Ctrl-C to end.\\n\");\n\n}\n\ntracepoint:sched:sched_process_fork\n{\n\t@ = count();\n}\n\ninterval:s:1\n{\n\ttime(\"%H:%M:%S PIDs/sec: \");\n\tprint(@);\n\tclear(@);\n}\n\nEND\n{\n\tclear(@);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nPrint files opened events by process\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e hardware:cache-misses:1000000 { @[comm] = count(); }", "stdout": "Attaching 1 probe...\n", "stderr": "perf_event_open failed: No such file or directory\nERROR: Error attaching probe: hardware:cache-misses:1000000\n", "returncode": 255, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nCount LLC cache misses by process name\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces new processes and counts the number of new process creations per second using the eBPF technology.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing new processes... Hit Ctrl-C to end.\\n\");\n\n}\n\ntracepoint:sched:sched_process_fork\n{\n\t@ = count();\n}\n\ninterval:s:1\n{\n\ttime(\"%H:%M:%S PIDs/sec: \");\n\tprint(@);\n\tclear(@);\n}\n\nEND\n{\n\tclear(@);\n}\n\n```\n\nexample: Write a BPF code that traces directory entry cache (dcache) lookups in the Linux kernel. The code uses kernel dynamic tracing of functions lookup_fast() and d_lookup() to capture lookup information and prints the time, process ID, command, and file name for each lookup event.\n\n```\n#ifndef BPFTRACE_HAVE_BTF\n#include <linux/fs.h>\n#include <linux/sched.h>\n\n// from fs/namei.c:\nstruct nameidata {\n        struct path     path;\n        struct qstr     last;\n        // [...]\n};\n#endif\n\nBEGIN\n{\n\tprintf(\"Tracing dcache lookups... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-8s %-6s %-16s %1s %s\\n\", \"TIME\", \"PID\", \"COMM\", \"T\", \"FILE\");\n}\n\n// comment out this block to avoid showing hits:\nkprobe:lookup_fast,\nkprobe:lookup_fast.constprop.*\n{\n\t$nd = (struct nameidata *)arg0;\n\tprintf(\"%-8d %-6d %-16s R %s\\n\", elapsed / 1e6, pid, comm,\n\t    str($nd->last.name));\n}\n\nkprobe:d_lookup\n{\n\t$name = (struct qstr *)arg1;\n\t@fname[tid] = $name->name;\n}\n\nkretprobe:d_lookup\n/@fname[tid]/\n{\n\tprintf(\"%-8d %-6d %-16s M %s\\n\", elapsed / 1e6, pid, comm,\n\t    str(@fname[tid]));\n\tdelete(@fname[tid]);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nCount LLC cache misses by process name\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e #include <net/sock.h>\n#include <bcc/proto.h>\n\nkprobe:tcp_v4_connect\n{\n  $sk = (struct sock *)arg0;\n  $daddr = $sk->__sk_common.skc_daddr;\n  $saddr = $sk->__sk_common.skc_rcv_saddr;\n  $dport = $sk->__sk_common.skc_dport;\n  $sport = $sk->__sk_common.skc_num;\n\n  printf(\"%s:%d -> %s:%d\\n\", ntop($saddr), $sport, ntop($daddr), ntohs($dport));\n}\n\nkprobe:tcp_v6_connect\n{\n  $sk = (struct sock *)arg0;\n  $daddr = $sk->__sk_common.skc_v6_daddr.in6_u.u6_addr32;\n  $saddr = $sk->__sk_common.skc_v6_rcv_saddr.in6_u.u6_addr32;\n  $dport = $sk->__sk_common.skc_dport;\n  $sport = $sk->__sk_common.skc_num;\n\n  printf(\"%s:%d -> %s:%d\\n\", ntop($saddr), $sport, ntop($daddr), ntohs($dport));\n}", "stdout": "", "stderr": "stdin:12:66-71: ERROR: Unknown function: ntohs\n  printf(\"%s:%d -> %s:%d\\n\", ntop($saddr), $sport, ntop($daddr), ntohs($dport));\n                                                                 ~~~~~\n", "returncode": 1, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nCaptures TCP SYN packets and logs the source and destination IP addresses and ports\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces TCP connections by dynamically tracing kernel functions and prints out the time, PID, and addresses and ports of the source and destination of each connection.\n\n```\n#ifndef BPFTRACE_HAVE_BTF\n#include <linux/socket.h>\n#include <net/sock.h>\n#else\n#include <sys/socket.h>\n#endif\n\nBEGIN\n{\n  printf(\"Tracing tcp connections. Hit Ctrl-C to end.\\n\");\n  printf(\"%-8s %-8s %-16s \", \"TIME\", \"PID\", \"COMM\");\n  printf(\"%-39s %-6s %-39s %-6s\\n\", \"SADDR\", \"SPORT\", \"DADDR\", \"DPORT\");\n}\n\nkprobe:tcp_connect\n{\n  $sk = ((struct sock *) arg0);\n  $inet_family = $sk->__sk_common.skc_family;\n\n  if ($inet_family == AF_INET || $inet_family == AF_INET6) {\n    if ($inet_family == AF_INET) {\n      $daddr = ntop($sk->__sk_common.skc_daddr);\n      $saddr = ntop($sk->__sk_common.skc_rcv_saddr);\n    } else {\n      $daddr = ntop($sk->__sk_common.skc_v6_daddr.in6_u.u6_addr8);\n      $saddr = ntop($sk->__sk_common.skc_v6_rcv_saddr.in6_u.u6_addr8);\n    }\n    $lport = $sk->__sk_common.skc_num;\n    $dport = $sk->__sk_common.skc_dport;\n\n    // Destination port is big endian, it must be flipped\n    $dport = bswap($dport);\n\n    time(\"%H:%M:%S \");\n    printf(\"%-8d %-16s \", pid, comm);\n    printf(\"%-39s %-6d %-39s %-6d\\n\", $saddr, $lport, $daddr, $dport);\n  }\n}\n\n```\n\nexample: Write a BPF code that traces the TCP SYN backlog size and creates a histogram of the backlog sizes, also indicating if any SYN packets are being dropped.\n\n```\n#ifndef BPFTRACE_HAVE_BTF\n#include <net/sock.h>\n#endif\n\nBEGIN\n{\n\tprintf(\"Tracing SYN backlog size. Ctrl-C to end.\\n\");\n}\n\nkprobe:tcp_v4_syn_recv_sock,\nkprobe:tcp_v6_syn_recv_sock\n{\n\t$sock = (struct sock *)arg0;\n\t@backlog[$sock->sk_max_ack_backlog & 0xffffffff] =\n\t    hist($sock->sk_ack_backlog);\n\tif ($sock->sk_ack_backlog > $sock->sk_max_ack_backlog) {\n\t\ttime(\"%H:%M:%S dropping a SYN.\\n\");\n\t}\n}\n\nEND\n{\n\tprintf(\"\\n@backlog[backlog limit]: histogram of backlog size\\n\");\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nCaptures TCP SYN packets and logs the source and destination IP addresses and ports\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e software:faults:1 { @[comm] = count(); }", "stdout": "Attaching 1 probe...\n\n\n@[journal-offline]: 2\n@[python3]: 2\n@[sh]: 63\n@[systemd-journal]: 87\n@[timeout]: 173\n@[sudo]: 950\n@[node]: 1045\n@[bpftrace]: 29296\n", "stderr": "", "returncode": 0, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nCount page faults events by process\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that monitors the swapins by process.\n\n```\nkprobe:swap_readpage\n{\n        @[comm, pid] = count();\n}\n\ninterval:s:1\n{\n        time();\n        print(@);\n        clear(@);\n}\n\n```\n\nexample: Write a BPF code that traces new processes and counts the number of new process creations per second using the eBPF technology.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing new processes... Hit Ctrl-C to end.\\n\");\n\n}\n\ntracepoint:sched:sched_process_fork\n{\n\t@ = count();\n}\n\ninterval:s:1\n{\n\ttime(\"%H:%M:%S PIDs/sec: \");\n\tprint(@);\n\tclear(@);\n}\n\nEND\n{\n\tclear(@);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nCount page faults events by process\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN { printf(\"Tracing bash commands and their exit codes... Hit Ctrl-C to end.\\n\"); printf(\"%-9s %-6s %-20s %s\\n\", \"TIME\", \"PID\", \"COMMAND\", \"EXIT CODE\"); } uretprobe:/bin/bash:readline { @command[pid] = str(retval); } tracepoint:syscalls:sys_exit_execve { if (@command[pid]) { time(\"%H:%M:%S  \"); printf(\"%-6d %-20s %d\\n\", pid, @command[pid], args->ret); delete(@command[pid]); } }", "stdout": "", "stderr": "stdin:1:1-1: ERROR: Invalid condition in if(): string\nBEGIN { printf(\"Tracing bash commands and their exit codes... Hit Ctrl-C to end.\\n\"); printf(\"%-9s %-6s %-20s %s\\n\", \"TIME\", \"PID\", \"COMMAND\", \"EXIT CODE\"); } uretprobe:/bin/bash:readline { @command[pid] = str(retval); } tracepoint:syscalls:sys_exit_execve { if (@command[pid]) { time(\"%H:%M:%S  \"); printf(\"%-6d %-20s %d\\n\", pid, @command[pid], args->ret); delete(@command[pid]); } }\n\n", "returncode": 1, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nPrint entered bash commands system wide and the exit code\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that counts the number of system calls and the number of processes. It also prints the top 10 system call IDs and the top 10 processes at the end.\n\n```\nBEGIN\n{\n\tprintf(\"Counting syscalls... Hit Ctrl-C to end.\\n\");\n\t// ausyscall --dump | awk 'NR > 1 { printf(\"\\t@sysname[%d] = \\\"%s\\\";\\n\", $1, $2); }'\n}\n\ntracepoint:raw_syscalls:sys_enter\n{\n\t@syscall[args.id] = count();\n\t@process[comm] = count();\n}\n\nEND\n{\n\tprintf(\"\\nTop 10 syscalls IDs:\\n\");\n\tprint(@syscall, 10);\n\tclear(@syscall);\n\n\tprintf(\"\\nTop 10 processes:\\n\");\n\tprint(@process, 10);\n\tclear(@process);\n}\n\n```\n\nexample: Write a BPF code that traces the readline function in the /bin/bash program and prints the timestamp, process ID, and command entered by the user.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing bash commands... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-9s %-6s %s\\n\", \"TIME\", \"PID\", \"COMMAND\");\n}\n\nuretprobe:/bin/bash:readline\n{\n\ttime(\"%H:%M:%S  \");\n\tprintf(\"%-6d %s\\n\", pid, str(retval));\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nPrint entered bash commands system wide and the exit code\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN\n{\n\tprintf(\"Monitoring system calls... Hit Ctrl-C to end.\\n\");\n}\n\ntracepoint:raw_syscalls:sys_enter\n{\n\t@syscall[comm, args->id] = count();\n}\n\ninterval:s:1\n{\n\tprintf(\"\\nSystem call rates per second:\\n\");\n\tprint(@syscall);\n\tclear(@syscall);\n}\n\nEND\n{\n\tprintf(\"\\nTop system calls:\\n\");\n\tprint(@syscall);\n}", "stdout": "Attaching 4 probes...\nMonitoring system calls... Hit Ctrl-C to end.\n\nSystem call rates per second:\n@syscall[node, 280]: 1\n@syscall[node, 230]: 1\n@syscall[bpftrace, 257]: 1\n@syscall[HangDetector, 202]: 1\n@syscall[bpftrace, 32]: 1\n@syscall[cpptools, 0]: 1\n@syscall[bpftrace, 298]: 1\n@syscall[multipathd, 230]: 1\n@syscall[python3, 0]: 2\n@syscall[bpftrace, 186]: 2\n@syscall[bpftrace, 1]: 2\n@syscall[systemd, 232]: 2\n@syscall[node, 4]: 2\n@syscall[systemd, 0]: 2\n@syscall[bpftrace, 3]: 2\n@syscall[bpftrace, 33]: 2\n@syscall[multipathd, 1]: 2\n@syscall[systemd, 286]: 2\n@syscall[systemd, 186]: 2\n@syscall[pool-/usr/bin/f, 7]: 2\n@syscall[multipathd, 202]: 3\n@syscall[bpftrace, 16]: 3\n@syscall[node, 47]: 3\n@syscall[node, 39]: 4\n@syscall[sshd, 318]: 4\n@syscall[node, 7]: 4\n@syscall[node, 21]: 4\n@syscall[sshd, 0]: 5\n@syscall[sshd, 1]: 5\n@syscall[node, 62]: 5\n@syscall[containerd, 1]: 5\n@syscall[containerd, 0]: 5\n@syscall[cpptools, 202]: 6\n@syscall[node, 332]: 6\n@syscall[sshd, 271]: 10\n@syscall[vmtoolsd, 7]: 11\n@syscall[sshd, 14]: 20\n@syscall[bpftrace, 232]: 21\n@syscall[systemd-journal, 232]: 23\n@syscall[fwupdmgr, 1]: 23\n@syscall[systemd-journal, 186]: 23\n@syscall[systemd-journal, 47]: 23\n@syscall[fwupdmgr, 7]: 23\n@syscall[node, 89]: 24\n@syscall[node, 16]: 25\n@syscall[node, 262]: 25\n@syscall[node, 257]: 27\n@syscall[node, 3]: 27\n@syscall[node, 1]: 28\n@syscall[containerd, 35]: 32\n@syscall[node, 0]: 51\n@syscall[vmtoolsd, 100]: 54\n@syscall[bpftrace, 321]: 60\n@syscall[node, 202]: 67\n@syscall[containerd, 202]: 98\n@syscall[node, 232]: 102\n@syscall[containerd, 281]: 106\n\nSystem call rates per second:\n@syscall[systemd, 47]: 1\n@syscall[systemd-timesyn, 0]: 1\n@syscall[multipathd, 230]: 1\n@syscall[python3, 0]: 1\n@syscall[systemd, 257]: 1\n@syscall[systemd-timesyn, 186]: 1\n@syscall[systemd-timesyn, 41]: 1\n@syscall[systemd-timesyn, 102]: 1\n@syscall[systemd-timesyn, 257]: 1\n@syscall[systemd-timesyn, 104]: 1\n@syscall[bpftrace, 1]: 1\n@syscall[systemd-timesyn, 232]: 1\n@syscall[bpftrace, 186]: 1\n@syscall[systemd, 16]: 1\n@syscall[systemd-timesyn, 262]: 1\n@syscall[node, 280]: 1\n@syscall[systemd-timesyn, 108]: 1\n@syscall[systemd-timesyn, 107]: 1\n@syscall[systemd, 3]: 1\n@syscall[systemd, 262]: 1\n@syscall[HangDetector, 202]: 1\n@syscall[node, 230]: 1\n@syscall[systemd-timesyn, 46]: 1\n@syscall[systemd-timesyn, 280]: 1\n@syscall[sshd, 318]: 2\n@syscall[systemd-timesyn, 55]: 2\n@syscall[node, 4]: 2\n@syscall[multipathd, 1]: 2\n@syscall[vmtoolsd, 262]: 2\n@syscall[pool-/usr/bin/f, 7]: 2\n@syscall[systemd-timesyn, 286]: 2\n@syscall[systemd-timesyn, 54]: 2\n@syscall[systemd, 286]: 2\n@syscall[systemd-timesyn, 3]: 2\n@syscall[sshd, 0]: 3\n@syscall[node, 47]: 3\n@syscall[systemd, 186]: 3\n@syscall[multipathd, 202]: 3\n@syscall[node, 39]: 3\n@syscall[systemd, 232]: 3\n@syscall[node, 62]: 3\n@syscall[sshd, 1]: 3\n@syscall[node, 7]: 4\n@syscall[node, 28]: 4\n@syscall[node, 21]: 4\n@syscall[systemd, 0]: 4\n@syscall[node, 332]: 5\n@syscall[sshd, 271]: 6\n@syscall[node, 10]: 8\n@syscall[vmtoolsd, 7]: 11\n@syscall[sshd, 14]: 12\n@syscall[cpptools, 202]: 13\n@syscall[bpftrace, 232]: 20\n@syscall[node, 1]: 22\n@syscall[systemd-journal, 186]: 24\n@syscall[systemd-journal, 47]: 24\n@syscall[fwupdmgr, 7]: 24\n@syscall[systemd-journal, 232]: 24\n@syscall[fwupdmgr, 1]: 24\n@syscall[node, 89]: 24\n@syscall[node, 16]: 25\n@syscall[node, 262]: 25\n@syscall[node, 257]: 26\n@syscall[node, 3]: 26\n@syscall[containerd, 35]: 32\n@syscall[node, 0]: 48\n@syscall[vmtoolsd, 100]: 53\n@syscall[node, 202]: 70\n@syscall[node, 232]: 78\n@syscall[containerd, 202]: 96\n@syscall[containerd, 281]: 100\n@syscall[bpftrace, 321]: 105\n\nSystem call rates per second:\n@syscall[bpftrace, 13]: 1\n@syscall[HangDetector, 202]: 1\n@syscall[systemd-logind, 257]: 1\n@syscall[sudo, 33]: 1\n@syscall[node, 9]: 1\n@syscall[bpftrace, 15]: 1\n@syscall[timeout, 231]: 1\n@syscall[multipathd, 230]: 1\n@syscall[python3, 61]: 1\n@syscall[systemd-logind, 3]: 1\n@syscall[node, 11]: 1\n@syscall[cpptools, 19]: 1\n@syscall[in:imuxsock, 7]: 1\n@syscall[rs:main Q:Reg, 1]: 1\n@syscall[cpptools, 0]: 1\n@syscall[sudo, 61]: 1\n@syscall[systemd-journal, 77]: 1\n@syscall[timeout, 130]: 1\n@syscall[node, 280]: 1\n@syscall[systemd-logind, 186]: 1\n@syscall[sudo, 16]: 1\n@syscall[systemd-logind, 0]: 1\n@syscall[systemd, 192]: 1\n@syscall[systemd-journal, 46]: 1\n@syscall[sshd, 39]: 1\n@syscall[in:imuxsock, 202]: 1\n@syscall[systemd-logind, 232]: 1\n@syscall[systemd-logind, 21]: 1\n@syscall[node, 230]: 1\n@syscall[in:imuxsock, 47]: 1\n@syscall[sudo, 293]: 1\n@syscall[systemd-logind, 8]: 1\n@syscall[bpftrace, 231]: 1\n@syscall[sudo, 14]: 2\n@syscall[sudo, 41]: 2\n@syscall[systemd-journal, 286]: 2\n@syscall[multipathd, 1]: 2\n@syscall[timeout, 13]: 2\n@syscall[timeout, 3]: 2\n@syscall[sudo, 102]: 2\n@syscall[rs:main Q:Reg, 202]: 2\n@syscall[sudo, 262]: 2\n@syscall[pool-/usr/bin/f, 7]: 2\n@syscall[sudo, 21]: 2\n@syscall[timeout, 61]: 2\n@syscall[timeout, 15]: 2\n@syscall[sudo, 15]: 2\n@syscall[sudo, 231]: 2\n@syscall[sudo, 7]: 2\n@syscall[sudo, 8]: 2\n@syscall[python3, 257]: 3\n@syscall[systemd, 16]: 3\n@syscall[systemd-journal, 16]: 3\n@syscall[sudo, 1]: 3\n@syscall[multipathd, 202]: 3\n@syscall[systemd, 247]: 3\n@syscall[bpftrace, 186]: 3\n@syscall[bpftrace, 1]: 4\n@syscall[python3, 8]: 4\n@syscall[bpftrace, 16]: 4\n@syscall[python3, 16]: 4\n@syscall[node, 62]: 4\n@syscall[sudo, 44]: 4\n@syscall[systemd, 3]: 4\n@syscall[systemd, 286]: 4\n@syscall[systemd, 257]: 4\n@syscall[timeout, 62]: 4\n@syscall[node, 28]: 4\n@syscall[python3, 1]: 4\n@syscall[node, 39]: 4\n@syscall[sudo, 257]: 4\n@syscall[bpftrace, 11]: 4\n@syscall[sudo, 45]: 5\n@syscall[systemd, 262]: 5\n@syscall[python3, 3]: 5\n@syscall[systemd-journal, 267]: 5\n@syscall[python3, 7]: 5\n@syscall[systemd, 186]: 6\n@syscall[systemd-journal, 262]: 6\n@syscall[cpptools, 202]: 6\n@syscall[sudo, 37]: 6\n@syscall[systemd, 232]: 6\n@syscall[node, 4]: 6\n@syscall[systemd-journal, 3]: 7\n@syscall[node, 7]: 7\n@syscall[bpftrace, 3]: 7\n@syscall[sudo, 72]: 8\n@syscall[node, 10]: 9\n@syscall[sudo, 17]: 9\n@syscall[node, 47]: 9\n@syscall[systemd-journal, 257]: 9\n@syscall[sshd, 318]: 9\n@syscall[sudo, 0]: 9\n@syscall[python3, 262]: 10\n@syscall[systemd-logind, 17]: 10\n@syscall[sudo, 11]: 10\n@syscall[systemd, 0]: 11\n@syscall[vmtoolsd, 7]: 11\n@syscall[sudo, 3]: 11\n@syscall[python3, 0]: 11\n@syscall[systemd-journal, 0]: 11\n@syscall[node, 21]: 12\n@syscall[bpftrace, 232]: 14\n@syscall[node, 332]: 15\n@syscall[sudo, 13]: 16\n@syscall[sshd, 0]: 18\n@syscall[sshd, 1]: 18\n@syscall[systemd-logind, 13]: 20\n@syscall[systemd-logind, 72]: 20\n@syscall[fwupdmgr, 1]: 25\n@syscall[fwupdmgr, 7]: 25\n@syscall[node, 16]: 25\n@syscall[node, 262]: 25\n@syscall[systemd-journal, 47]: 26\n@syscall[systemd-journal, 232]: 27\n@syscall[systemd-journal, 186]: 27\n@syscall[node, 257]: 28\n@syscall[node, 3]: 28\n@syscall[systemd-logind, 37]: 30\n@syscall[containerd, 35]: 31\n@syscall[sshd, 271]: 35\n@syscall[vmtoolsd, 100]: 54\n@syscall[node, 89]: 54\n@syscall[sshd, 14]: 70\n@syscall[node, 1]: 84\n@syscall[containerd, 202]: 93\n@syscall[containerd, 281]: 95\n@syscall[node, 0]: 109\n@syscall[bpftrace, 321]: 191\n@syscall[node, 232]: 204\n@syscall[node, 202]: 265\n\nSystem call rates per second:\n@syscall[containerd, 15]: 1\n@syscall[multipathd, 230]: 1\n@syscall[containerd, 0]: 1\n@syscall[containerd, 39]: 1\n@syscall[containerd, 1]: 1\n@syscall[containerd, 234]: 1\n@syscall[HangDetector, 202]: 1\n@syscall[bpftrace, 1]: 1\n@syscall[bpftrace, 186]: 1\n@syscall[node, 280]: 1\n@syscall[python3, 230]: 1\n@syscall[node, 230]: 1\n@syscall[sshd, 318]: 2\n@syscall[systemd, 232]: 2\n@syscall[node, 4]: 2\n@syscall[python3, 202]: 2\n@syscall[systemd, 186]: 2\n@syscall[systemd, 0]: 2\n@syscall[multipathd, 1]: 2\n@syscall[pool-/usr/bin/f, 7]: 2\n@syscall[systemd, 286]: 2\n@syscall[sshd, 1]: 3\n@syscall[multipathd, 202]: 3\n@syscall[python3, 7]: 3\n@syscall[sshd, 0]: 3\n@syscall[node, 39]: 4\n@syscall[node, 21]: 4\n@syscall[node, 7]: 4\n@syscall[node, 47]: 4\n@syscall[node, 332]: 5\n@syscall[node, 62]: 5\n@syscall[sshd, 271]: 6\n@syscall[cpptools, 202]: 9\n@syscall[vmtoolsd, 7]: 10\n@syscall[bpftrace, 232]: 10\n@syscall[sshd, 14]: 12\n@syscall[python3, 0]: 13\n@syscall[node, 1]: 22\n@syscall[fwupdmgr, 7]: 24\n@syscall[fwupdmgr, 1]: 24\n@syscall[systemd-journal, 47]: 24\n@syscall[systemd-journal, 186]: 24\n@syscall[node, 89]: 24\n@syscall[systemd-journal, 232]: 24\n@syscall[node, 16]: 25\n@syscall[node, 262]: 25\n@syscall[node, 257]: 26\n@syscall[node, 3]: 26\n@syscall[containerd, 35]: 31\n@syscall[node, 0]: 47\n@syscall[vmtoolsd, 100]: 50\n@syscall[node, 202]: 60\n@syscall[node, 232]: 84\n@syscall[containerd, 202]: 93\n@syscall[containerd, 281]: 104\n@syscall[bpftrace, 321]: 121\n\nSystem call rates per second:\n@syscall[node, 280]: 1\n@syscall[bpftrace, 1]: 1\n@syscall[node, 39]: 1\n@syscall[bpftrace, 186]: 1\n@syscall[containerd, 1]: 1\n@syscall[multipathd, 230]: 1\n@syscall[containerd, 0]: 1\n@syscall[HangDetector, 202]: 1\n@syscall[node, 230]: 1\n@syscall[sshd, 318]: 2\n@syscall[multipathd, 1]: 2\n@syscall[systemd, 286]: 2\n@syscall[node, 62]: 2\n@syscall[python3, 0]: 2\n@syscall[systemd, 186]: 2\n@syscall[node, 4]: 2\n@syscall[pool-/usr/bin/f, 7]: 2\n@syscall[systemd, 232]: 2\n@syscall[systemd, 0]: 2\n@syscall[cpptools, 202]: 2\n@syscall[multipathd, 202]: 3\n@syscall[node, 47]: 3\n@syscall[node, 21]: 4\n@syscall[node, 7]: 4\n@syscall[sshd, 0]: 5\n@syscall[node, 332]: 5\n@syscall[sshd, 1]: 5\n@syscall[sshd, 271]: 10\n@syscall[bpftrace, 232]: 10\n@syscall[vmtoolsd, 7]: 11\n@syscall[sshd, 14]: 20\n@syscall[systemd-journal, 186]: 24\n@syscall[fwupdmgr, 1]: 24\n@syscall[fwupdmgr, 7]: 24\n@syscall[systemd-journal, 47]: 24\n@syscall[node, 89]: 24\n@syscall[systemd-journal, 232]: 24\n@syscall[node, 262]: 25\n@syscall[node, 16]: 25\n@syscall[node, 3]: 26\n@syscall[node, 257]: 26\n@syscall[node, 1]: 28\n@syscall[containerd, 35]: 32\n@syscall[vmtoolsd, 100]: 54\n@syscall[node, 0]: 56\n@syscall[bpftrace, 321]: 80\n@syscall[containerd, 202]: 95\n@syscall[node, 232]: 96\n@syscall[node, 202]: 99\n@syscall[containerd, 281]: 110\n\nSystem call rates per second:\n@syscall[node, 280]: 1\n@syscall[bpftrace, 1]: 1\n@syscall[cpptools, 19]: 1\n@syscall[cpptools, 0]: 1\n@syscall[bpftrace, 186]: 1\n@syscall[multipathd, 230]: 1\n@syscall[HangDetector, 202]: 1\n@syscall[node, 230]: 1\n@syscall[systemd, 286]: 2\n@syscall[containerd, 1]: 2\n@syscall[systemd, 232]: 2\n@syscall[pool-/usr/bin/f, 7]: 2\n@syscall[node, 4]: 2\n@syscall[python3, 1]: 2\n@syscall[systemd, 0]: 2\n@syscall[python3, 0]: 2\n@syscall[systemd, 186]: 2\n@syscall[containerd, 0]: 2\n@syscall[python3, 318]: 2\n@syscall[python3, 16]: 2\n@syscall[multipathd, 1]: 3\n@syscall[multipathd, 202]: 3\n@syscall[node, 47]: 3\n@syscall[node, 21]: 4\n@syscall[node, 39]: 4\n@syscall[node, 7]: 4\n@syscall[sshd, 318]: 4\n@syscall[python3, 7]: 4\n@syscall[sshd, 0]: 5\n@syscall[node, 62]: 5\n@syscall[sshd, 1]: 5\n@syscall[node, 332]: 6\n@syscall[python3, 262]: 7\n@syscall[sshd, 271]: 10\n@syscall[bpftrace, 232]: 10\n@syscall[vmtoolsd, 7]: 11\n@syscall[cpptools, 202]: 13\n@syscall[sshd, 14]: 20\n@syscall[systemd-journal, 186]: 24\n@syscall[fwupdmgr, 1]: 24\n@syscall[fwupdmgr, 7]: 24\n@syscall[systemd-journal, 47]: 24\n@syscall[systemd-journal, 232]: 24\n@syscall[node, 89]: 24\n@syscall[node, 262]: 25\n@syscall[node, 16]: 25\n@syscall[node, 3]: 27\n@syscall[node, 257]: 27\n@syscall[node, 1]: 29\n@syscall[containerd, 35]: 31\n@syscall[node, 0]: 52\n@syscall[vmtoolsd, 100]: 54\n@syscall[node, 202]: 83\n@syscall[bpftrace, 321]: 87\n@syscall[node, 232]: 96\n@syscall[containerd, 202]: 96\n@syscall[containerd, 281]: 103\n\nSystem call rates per second:\n@syscall[containerd, 15]: 1\n@syscall[containerd, 234]: 1\n@syscall[python3, 0]: 1\n@syscall[multipathd, 230]: 1\n@syscall[containerd, 0]: 1\n@syscall[containerd, 39]: 1\n@syscall[bpftrace, 1]: 1\n@syscall[bpftrace, 186]: 1\n@syscall[HangDetector, 202]: 1\n@syscall[node, 280]: 1\n@syscall[containerd, 1]: 1\n@syscall[node, 230]: 1\n@syscall[vmtoolsd, 262]: 2\n@syscall[cpptools, 202]: 2\n@syscall[node, 4]: 2\n@syscall[sshd, 318]: 2\n@syscall[systemd, 186]: 2\n@syscall[systemd, 232]: 2\n@syscall[pool-/usr/bin/f, 7]: 2\n@syscall[systemd, 286]: 2\n@syscall[systemd, 0]: 2\n@syscall[multipathd, 1]: 2\n@syscall[multipathd, 202]: 3\n@syscall[sshd, 0]: 3\n@syscall[node, 47]: 3\n@syscall[sshd, 1]: 3\n@syscall[node, 39]: 4\n@syscall[node, 7]: 4\n@syscall[node, 21]: 4\n@syscall[node, 332]: 5\n@syscall[node, 62]: 5\n@syscall[sshd, 271]: 6\n@syscall[bpftrace, 232]: 10\n@syscall[vmtoolsd, 7]: 11\n@syscall[sshd, 14]: 12\n@syscall[node, 1]: 19\n@syscall[node, 262]: 22\n@syscall[node, 16]: 22\n@syscall[systemd-journal, 232]: 23\n@syscall[node, 257]: 23\n@syscall[fwupdmgr, 7]: 23\n@syscall[node, 3]: 23\n@syscall[systemd-journal, 47]: 23\n@syscall[systemd-journal, 186]: 23\n@syscall[fwupdmgr, 1]: 23\n@syscall[node, 89]: 24\n@syscall[containerd, 35]: 31\n@syscall[node, 0]: 42\n@syscall[vmtoolsd, 100]: 53\n@syscall[node, 202]: 64\n@syscall[node, 232]: 76\n@syscall[bpftrace, 321]: 83\n@syscall[containerd, 202]: 95\n@syscall[containerd, 281]: 103\n\nSystem call rates per second:\n@syscall[HangDetector, 202]: 1\n@syscall[cpptools, 0]: 1\n@syscall[python3, 0]: 1\n@syscall[multipathd, 230]: 1\n@syscall[node, 39]: 1\n@syscall[bpftrace, 1]: 1\n@syscall[bpftrace, 186]: 1\n@syscall[node, 280]: 1\n@syscall[cpptools, 19]: 1\n@syscall[node, 230]: 1\n@syscall[containerd, 15]: 2\n@syscall[sshd, 318]: 2\n@syscall[node, 62]: 2\n@syscall[systemd, 186]: 2\n@syscall[systemd, 232]: 2\n@syscall[containerd, 234]: 2\n@syscall[systemd, 0]: 2\n@syscall[node, 4]: 2\n@syscall[containerd, 39]: 2\n@syscall[pool-/usr/bin/f, 7]: 2\n@syscall[multipathd, 1]: 2\n@syscall[systemd, 286]: 2\n@syscall[sshd, 0]: 3\n@syscall[sshd, 1]: 3\n@syscall[multipathd, 202]: 3\n@syscall[node, 47]: 3\n@syscall[node, 7]: 4\n@syscall[node, 21]: 4\n@syscall[sshd, 271]: 6\n@syscall[node, 332]: 6\n@syscall[bpftrace, 232]: 10\n@syscall[vmtoolsd, 7]: 11\n@syscall[sshd, 14]: 12\n@syscall[cpptools, 202]: 13\n@syscall[node, 1]: 24\n@syscall[fwupdmgr, 1]: 24\n@syscall[systemd-journal, 232]: 24\n@syscall[fwupdmgr, 7]: 24\n@syscall[systemd-journal, 47]: 24\n@syscall[systemd-journal, 186]: 24\n@syscall[node, 89]: 24\n@syscall[node, 16]: 25\n@syscall[node, 262]: 25\n@syscall[node, 3]: 27\n@syscall[node, 257]: 27\n@syscall[containerd, 35]: 32\n@syscall[node, 0]: 49\n@syscall[vmtoolsd, 100]: 54\n@syscall[node, 202]: 61\n@syscall[bpftrace, 321]: 83\n@syscall[node, 232]: 83\n@syscall[containerd, 202]: 95\n@syscall[containerd, 281]: 103\n\nSystem call rates per second:\n@syscall[node, 230]: 1\n@syscall[node, 280]: 1\n@syscall[bpftrace, 186]: 1\n@syscall[bpftrace, 1]: 1\n@syscall[HangDetector, 202]: 1\n@syscall[multipathd, 230]: 1\n@syscall[cpptools, 202]: 2\n@syscall[systemd, 186]: 2\n@syscall[sshd, 318]: 2\n@syscall[systemd, 232]: 2\n@syscall[node, 4]: 2\n@syscall[systemd, 0]: 2\n@syscall[python3, 0]: 2\n@syscall[multipathd, 1]: 2\n@syscall[pool-/usr/bin/f, 7]: 2\n@syscall[systemd, 286]: 2\n@syscall[sshd, 1]: 3\n@syscall[sshd, 0]: 3\n@syscall[node, 21]: 4\n@syscall[node, 39]: 4\n@syscall[node, 47]: 4\n@syscall[node, 7]: 4\n@syscall[node, 62]: 5\n@syscall[node, 332]: 5\n@syscall[sshd, 271]: 6\n@syscall[multipathd, 202]: 8\n@syscall[bpftrace, 232]: 10\n@syscall[vmtoolsd, 7]: 11\n@syscall[sshd, 14]: 12\n@syscall[node, 1]: 20\n@syscall[fwupdmgr, 7]: 24\n@syscall[systemd-journal, 47]: 24\n@syscall[node, 89]: 24\n@syscall[systemd-journal, 186]: 24\n@syscall[fwupdmgr, 1]: 24\n@syscall[systemd-journal, 232]: 24\n@syscall[node, 16]: 25\n@syscall[node, 262]: 25\n@syscall[node, 3]: 26\n@syscall[node, 257]: 26\n@syscall[containerd, 35]: 31\n@syscall[node, 0]: 45\n@syscall[vmtoolsd, 100]: 54\n@syscall[node, 202]: 61\n@syscall[bpftrace, 321]: 76\n@syscall[node, 232]: 91\n@syscall[containerd, 202]: 93\n@syscall[containerd, 281]: 102\n\nSystem call rates per second:\n@syscall[bpftrace, 1]: 1\n@syscall[multipathd, 230]: 1\n@syscall[python3, 0]: 1\n@syscall[HangDetector, 202]: 1\n@syscall[bpftrace, 186]: 1\n@syscall[dockerd, 35]: 1\n@syscall[irqbalance, 7]: 1\n@syscall[node, 280]: 1\n@syscall[node, 230]: 1\n@syscall[sshd, 318]: 2\n@syscall[containerd, 15]: 2\n@syscall[systemd, 232]: 2\n@syscall[containerd, 234]: 2\n@syscall[node, 4]: 2\n@syscall[containerd, 1]: 2\n@syscall[systemd, 186]: 2\n@syscall[irqbalance, 257]: 2\n@syscall[irqbalance, 262]: 2\n@syscall[containerd, 39]: 2\n@syscall[pool-/usr/bin/f, 7]: 2\n@syscall[irqbalance, 3]: 2\n@syscall[systemd, 286]: 2\n@syscall[containerd, 0]: 2\n@syscall[systemd, 0]: 2\n@syscall[multipathd, 1]: 2\n@syscall[multipathd, 202]: 3\n@syscall[node, 39]: 3\n@syscall[dockerd, 202]: 3\n@syscall[dockerd, 281]: 3\n@syscall[node, 47]: 3\n@syscall[node, 62]: 4\n@syscall[node, 21]: 4\n@syscall[sshd, 1]: 5\n@syscall[node, 332]: 5\n@syscall[sshd, 0]: 5\n@syscall[node, 7]: 6\n@syscall[irqbalance, 0]: 8\n@syscall[cpptools, 202]: 9\n@syscall[sshd, 271]: 10\n@syscall[bpftrace, 232]: 10\n@syscall[vmtoolsd, 7]: 11\n@syscall[sshd, 14]: 20\n@syscall[node, 262]: 23\n@syscall[node, 16]: 23\n@syscall[node, 257]: 24\n@syscall[systemd-journal, 232]: 24\n@syscall[fwupdmgr, 7]: 24\n@syscall[node, 3]: 24\n@syscall[systemd-journal, 47]: 24\n@syscall[systemd-journal, 186]: 24\n@syscall[node, 89]: 24\n@syscall[fwupdmgr, 1]: 24\n@syscall[node, 1]: 27\n@syscall[containerd, 35]: 31\n@syscall[node, 0]: 53\n@syscall[vmtoolsd, 100]: 54\n@syscall[bpftrace, 321]: 86\n@syscall[node, 202]: 90\n@syscall[node, 232]: 93\n@syscall[containerd, 202]: 93\n@syscall[containerd, 281]: 102\n\nSystem call rates per second:\n@syscall[containerd, 15]: 1\n@syscall[containerd, 234]: 1\n@syscall[cpptools, 19]: 1\n@syscall[node, 280]: 1\n@syscall[bpftrace, 186]: 1\n@syscall[bpftrace, 1]: 1\n@syscall[cpptools, 0]: 1\n@syscall[multipathd, 230]: 1\n@syscall[containerd, 39]: 1\n@syscall[node, 230]: 1\n@syscall[HangDetector, 202]: 1\n@syscall[pool-/usr/bin/f, 7]: 2\n@syscall[systemd, 186]: 2\n@syscall[node, 39]: 2\n@syscall[systemd, 232]: 2\n@syscall[systemd, 0]: 2\n@syscall[node, 4]: 2\n@syscall[python3, 0]: 2\n@syscall[systemd, 286]: 2\n@syscall[multipathd, 1]: 2\n@syscall[multipathd, 202]: 3\n@syscall[containerd, 0]: 3\n@syscall[containerd, 1]: 3\n@syscall[node, 47]: 3\n@syscall[node, 62]: 3\n@syscall[node, 21]: 4\n@syscall[node, 7]: 4\n@syscall[sshd, 318]: 4\n@syscall[sshd, 1]: 5\n@syscall[sshd, 0]: 5\n@syscall[cpptools, 202]: 6\n@syscall[node, 332]: 6\n@syscall[sshd, 271]: 10\n@syscall[bpftrace, 232]: 10\n@syscall[vmtoolsd, 7]: 11\n@syscall[sshd, 14]: 20\n@syscall[systemd-journal, 186]: 24\n@syscall[node, 89]: 24\n@syscall[systemd-journal, 47]: 24\n@syscall[systemd-journal, 232]: 24\n@syscall[fwupdmgr, 7]: 24\n@syscall[fwupdmgr, 1]: 24\n@syscall[node, 16]: 25\n@syscall[node, 262]: 25\n@syscall[node, 257]: 27\n@syscall[node, 3]: 27\n@syscall[node, 1]: 28\n@syscall[containerd, 35]: 31\n@syscall[node, 0]: 51\n@syscall[vmtoolsd, 100]: 54\n@syscall[node, 202]: 82\n@syscall[bpftrace, 321]: 89\n@syscall[node, 232]: 93\n@syscall[containerd, 202]: 98\n@syscall[containerd, 281]: 109\n\nSystem call rates per second:\n@syscall[node, 280]: 1\n@syscall[bpftrace, 1]: 1\n@syscall[bpftrace, 186]: 1\n@syscall[python3, 0]: 1\n@syscall[multipathd, 230]: 1\n@syscall[HangDetector, 202]: 1\n@syscall[node, 230]: 1\n@syscall[systemd, 286]: 2\n@syscall[sshd, 318]: 2\n@syscall[vmtoolsd, 262]: 2\n@syscall[containerd, 0]: 2\n@syscall[pool-/usr/bin/f, 7]: 2\n@syscall[containerd, 1]: 2\n@syscall[node, 4]: 2\n@syscall[systemd, 232]: 2\n@syscall[systemd, 0]: 2\n@syscall[systemd, 186]: 2\n@syscall[multipathd, 202]: 3\n@syscall[node, 47]: 3\n@syscall[sshd, 0]: 3\n@syscall[sshd, 1]: 3\n@syscall[multipathd, 1]: 3\n@syscall[node, 39]: 4\n@syscall[node, 7]: 4\n@syscall[node, 21]: 4\n@syscall[node, 332]: 5\n@syscall[node, 62]: 5\n@syscall[sshd, 271]: 6\n@syscall[cpptools, 202]: 9\n@syscall[bpftrace, 232]: 10\n@syscall[vmtoolsd, 7]: 11\n@syscall[sshd, 14]: 12\n@syscall[node, 1]: 20\n@syscall[systemd-journal, 232]: 24\n@syscall[fwupdmgr, 7]: 24\n@syscall[systemd-journal, 47]: 24\n@syscall[fwupdmgr, 1]: 24\n@syscall[systemd-journal, 186]: 24\n@syscall[node, 89]: 24\n@syscall[node, 16]: 25\n@syscall[node, 262]: 25\n@syscall[node, 3]: 26\n@syscall[node, 257]: 26\n@syscall[containerd, 35]: 31\n@syscall[node, 0]: 46\n@syscall[node, 202]: 48\n@syscall[vmtoolsd, 100]: 53\n@syscall[bpftrace, 321]: 79\n@syscall[node, 232]: 85\n@syscall[containerd, 202]: 93\n@syscall[containerd, 281]: 98\n\nSystem call rates per second:\n@syscall[containerd, 15]: 1\n@syscall[containerd, 1]: 1\n@syscall[containerd, 234]: 1\n@syscall[node, 280]: 1\n@syscall[bpftrace, 186]: 1\n@syscall[bpftrace, 1]: 1\n@syscall[cpptools, 0]: 1\n@syscall[multipathd, 230]: 1\n@syscall[containerd, 0]: 1\n@syscall[containerd, 39]: 1\n@syscall[HangDetector, 202]: 1\n@syscall[node, 230]: 1\n@syscall[multipathd, 1]: 2\n@syscall[systemd, 0]: 2\n@syscall[systemd, 186]: 2\n@syscall[sshd, 318]: 2\n@syscall[pool-/usr/bin/f, 7]: 2\n@syscall[systemd, 232]: 2\n@syscall[node, 4]: 2\n@syscall[python3, 0]: 2\n@syscall[systemd, 286]: 2\n@syscall[sshd, 1]: 3\n@syscall[sshd, 0]: 3\n@syscall[node, 39]: 3\n@syscall[node, 47]: 3\n@syscall[multipathd, 202]: 3\n@syscall[node, 62]: 4\n@syscall[node, 21]: 4\n@syscall[node, 7]: 4\n@syscall[cpptools, 202]: 6\n@syscall[sshd, 271]: 6\n@syscall[node, 332]: 6\n@syscall[bpftrace, 232]: 10\n@syscall[vmtoolsd, 7]: 11\n@syscall[sshd, 14]: 12\n@syscall[node, 1]: 22\n@syscall[fwupdmgr, 7]: 23\n@syscall[systemd-journal, 186]: 23\n@syscall[systemd-journal, 232]: 23\n@syscall[systemd-journal, 47]: 23\n@syscall[fwupdmgr, 1]: 23\n@syscall[node, 89]: 24\n@syscall[node, 16]: 25\n@syscall[node, 262]: 25\n@syscall[node, 3]: 27\n@syscall[node, 257]: 27\n@syscall[containerd, 35]: 33\n@syscall[node, 0]: 47\n@syscall[vmtoolsd, 100]: 54\n@syscall[node, 202]: 67\n@syscall[node, 232]: 77\n@syscall[bpftrace, 321]: 84\n@syscall[containerd, 202]: 90\n@syscall[containerd, 281]: 100\n\nSystem call rates per second:\n@syscall[sshd, 39]: 1\n@syscall[node, 24]: 1\n@syscall[node, 280]: 1\n@syscall[bpftrace, 186]: 1\n@syscall[bpftrace, 1]: 1\n@syscall[multipathd, 230]: 1\n@syscall[HangDetector, 202]: 1\n@syscall[node, 230]: 1\n@syscall[pool-/usr/bin/f, 7]: 2\n@syscall[systemd, 0]: 2\n@syscall[containerd, 1]: 2\n@syscall[multipathd, 1]: 2\n@syscall[containerd, 0]: 2\n@syscall[systemd, 232]: 2\n@syscall[systemd, 286]: 2\n@syscall[node, 4]: 2\n@syscall[systemd, 186]: 2\n@syscall[multipathd, 202]: 3\n@syscall[node, 62]: 3\n@syscall[node, 47]: 4\n@syscall[node, 21]: 5\n@syscall[node, 7]: 6\n@syscall[sshd, 318]: 8\n@syscall[bpftrace, 232]: 10\n@syscall[sshd, 1]: 10\n@syscall[cpptools, 202]: 11\n@syscall[sshd, 0]: 11\n@syscall[node, 9]: 13\n@syscall[vmtoolsd, 7]: 14\n@syscall[node, 39]: 16\n@syscall[sshd, 271]: 19\n@syscall[fwupdmgr, 1]: 23\n@syscall[fwupdmgr, 7]: 24\n@syscall[node, 89]: 24\n@syscall[systemd-journal, 47]: 24\n@syscall[systemd-journal, 232]: 24\n@syscall[systemd-journal, 186]: 24\n@syscall[node, 16]: 25\n@syscall[node, 11]: 26\n@syscall[containerd, 35]: 31\n@syscall[node, 217]: 36\n@syscall[sshd, 14]: 38\n@syscall[node, 262]: 43\n@syscall[vmtoolsd, 100]: 72\n@syscall[node, 3]: 73\n@syscall[node, 257]: 73\n@syscall[node, 28]: 76\n@syscall[bpftrace, 321]: 86\n@syscall[containerd, 202]: 94\n@syscall[containerd, 281]: 98\n@syscall[node, 332]: 109\n@syscall[node, 1]: 128\n@syscall[node, 0]: 175\n@syscall[node, 232]: 205\n@syscall[node, 10]: 255\n@syscall[node, 202]: 1088\n\nSystem call rates per second:\n@syscall[bpftrace, 1]: 1\n@syscall[node, 230]: 1\n@syscall[bpftrace, 186]: 1\n@syscall[node, 280]: 1\n@syscall[HangDetector, 202]: 1\n@syscall[containerd, 1]: 1\n@syscall[multipathd, 230]: 1\n@syscall[containerd, 0]: 1\n@syscall[sshd, 318]: 2\n@syscall[systemd, 0]: 2\n@syscall[systemd, 232]: 2\n@syscall[node, 4]: 2\n@syscall[multipathd, 1]: 2\n@syscall[systemd, 286]: 2\n@syscall[systemd, 186]: 2\n@syscall[cpptools, 202]: 2\n@syscall[pool-/usr/bin/f, 7]: 2\n@syscall[multipathd, 202]: 3\n@syscall[node, 39]: 3\n@syscall[node, 47]: 3\n@syscall[node, 21]: 4\n@syscall[node, 62]: 4\n@syscall[sshd, 1]: 5\n@syscall[sshd, 0]: 5\n@syscall[node, 7]: 5\n@syscall[node, 332]: 5\n@syscall[bpftrace, 232]: 10\n@syscall[sshd, 271]: 10\n@syscall[vmtoolsd, 7]: 11\n@syscall[sshd, 14]: 20\n@syscall[systemd-journal, 232]: 23\n@syscall[fwupdmgr, 1]: 23\n@syscall[systemd-journal, 186]: 23\n@syscall[systemd-journal, 47]: 23\n@syscall[fwupdmgr, 7]: 23\n@syscall[node, 89]: 24\n@syscall[node, 262]: 25\n@syscall[node, 16]: 25\n@syscall[node, 3]: 26\n@syscall[node, 257]: 26\n@syscall[node, 1]: 29\n@syscall[containerd, 35]: 32\n@syscall[vmtoolsd, 100]: 54\n@syscall[node, 0]: 57\n@syscall[node, 202]: 72\n@syscall[bpftrace, 321]: 77\n@syscall[containerd, 202]: 95\n@syscall[containerd, 281]: 99\n@syscall[node, 232]: 114\n\nSystem call rates per second:\n@syscall[vmtoolsd, 44]: 1\n@syscall[bpftrace, 1]: 1\n@syscall[cpptools, 0]: 1\n@syscall[bpftrace, 186]: 1\n@syscall[cpptools, 19]: 1\n@syscall[python3, 0]: 1\n@syscall[multipathd, 230]: 1\n@syscall[node, 280]: 1\n@syscall[HangDetector, 202]: 1\n@syscall[node, 230]: 1\n@syscall[multipathd, 1]: 2\n@syscall[containerd, 1]: 2\n@syscall[vmtoolsd, 45]: 2\n@syscall[containerd, 0]: 2\n@syscall[systemd, 286]: 2\n@syscall[systemd, 186]: 2\n@syscall[systemd, 0]: 2\n@syscall[systemd, 232]: 2\n@syscall[node, 4]: 2\n@syscall[pool-/usr/bin/f, 7]: 2\n@syscall[node, 47]: 3\n@syscall[multipathd, 202]: 3\n@syscall[node, 7]: 4\n@syscall[node, 21]: 4\n@syscall[sshd, 318]: 4\n@syscall[node, 39]: 4\n@syscall[node, 62]: 5\n@syscall[sshd, 1]: 5\n@syscall[sshd, 0]: 5\n@syscall[vmtoolsd, 257]: 6\n@syscall[vmtoolsd, 262]: 6\n@syscall[node, 332]: 6\n@syscall[vmtoolsd, 3]: 6\n@syscall[bpftrace, 232]: 10\n@syscall[sshd, 271]: 10\n@syscall[vmtoolsd, 7]: 12\n@syscall[cpptools, 202]: 13\n@syscall[vmtoolsd, 21]: 15\n@syscall[sshd, 14]: 20\n@syscall[vmtoolsd, 0]: 22\n@syscall[systemd-journal, 232]: 24\n@syscall[fwupdmgr, 1]: 24\n@syscall[fwupdmgr, 7]: 24\n@syscall[systemd-journal, 186]: 24\n@syscall[systemd-journal, 47]: 24\n@syscall[node, 89]: 24\n@syscall[node, 16]: 25\n@syscall[node, 262]: 25\n@syscall[node, 3]: 27\n@syscall[node, 257]: 27\n@syscall[node, 1]: 30\n@syscall[containerd, 35]: 32\n@syscall[node, 0]: 53\n@syscall[vmtoolsd, 100]: 58\n@syscall[bpftrace, 321]: 85\n@syscall[containerd, 202]: 95\n@syscall[node, 202]: 95\n@syscall[node, 232]: 96\n@syscall[containerd, 281]: 102\n\nSystem call rates per second:\n@syscall[sudo, 112]: 1\n@syscall[sudo, 104]: 1\n@syscall[sudo, 108]: 1\n@syscall[systemd-journal, 286]: 1\n@syscall[timeout, 218]: 1\n@syscall[timeout, 302]: 1\n@syscall[timeout, 61]: 1\n@syscall[sudo, 59]: 1\n@syscall[timeout, 223]: 1\n@syscall[sudo, 110]: 1\n@syscall[sudo, 126]: 1\n@syscall[bpftrace, 273]: 1\n@syscall[timeout, 222]: 1\n@syscall[HangDetector, 202]: 1\n@syscall[sudo, 51]: 1\n@syscall[bpftrace, 302]: 1\n@syscall[bpftrace, 318]: 1\n@syscall[systemd-logind, 186]: 1\n@syscall[multipathd, 230]: 1\n@syscall[timeout, 11]: 1\n@syscall[timeout, 109]: 1\n@syscall[sudo, 334]: 1\n@syscall[systemd-logind, 0]: 1\n@syscall[bpftrace, 1]: 1\n@syscall[bpftrace, 186]: 1\n@syscall[sudo, 92]: 1\n@syscall[systemd-logind, 257]: 1\n@syscall[timeout, 21]: 1\n@syscall[sudo, 63]: 1\n@syscall[node, 280]: 1\n@syscall[timeout, 130]: 1\n@syscall[sudo, 141]: 1\n@syscall[timeout, 334]: 1\n@syscall[sudo, 49]: 1\n@syscall[systemd-logind, 21]: 1\n@syscall[vmtoolsd, 51]: 1\n@syscall[timeout, 56]: 1\n@syscall[sudo, 53]: 1\n@syscall[sudo, 138]: 1\n@syscall[sudo, 140]: 1\n@syscall[systemd-logind, 232]: 1\n@syscall[sudo, 218]: 1\n@syscall[vmtoolsd, 49]: 1\n@syscall[bpftrace, 218]: 1\n@syscall[vmtoolsd, 3]: 1\n@syscall[vmtoolsd, 41]: 1\n@syscall[sudo, 436]: 1\n@syscall[systemd-logind, 8]: 1\n@syscall[sudo, 1]: 1\n@syscall[sudo, 18]: 1\n@syscall[sudo, 106]: 1\n@syscall[node, 230]: 1\n@syscall[timeout, 0]: 1\n@syscall[python3, 58]: 1\n@syscall[sudo, 121]: 1\n@syscall[bpftrace, 334]: 1\n@syscall[python3, 61]: 1\n@syscall[cpptools, 202]: 1\n@syscall[sudo, 124]: 1\n@syscall[systemd-logind, 3]: 1\n@syscall[timeout, 318]: 1\n@syscall[python3, 436]: 2\n@syscall[sudo, 318]: 2\n@syscall[bpftrace, 11]: 2\n@syscall[node, 39]: 2\n@syscall[systemd, 232]: 2\n@syscall[rs:main Q:Reg, 1]: 2\n@syscall[sudo, 115]: 2\n@syscall[vmtoolsd, 262]: 2\n@syscall[sshd, 318]: 2\n@syscall[sudo, 111]: 2\n@syscall[python3, 16]: 2\n@syscall[systemd, 186]: 2\n@syscall[sudo, 125]: 2\n@syscall[sudo, 137]: 2\n@syscall[sudo, 79]: 2\n@syscall[python3, 33]: 2\n@syscall[bpftrace, 158]: 2\n@syscall[timeout, 158]: 2\n@syscall[sudo, 158]: 2\n@syscall[sudo, 120]: 2\n@syscall[systemd, 0]: 2\n@syscall[sudo, 107]: 2\n@syscall[timeout, 273]: 2\n@syscall[multipathd, 1]: 2\n@syscall[bpftrace, 21]: 2\n@syscall[timeout, 17]: 2\n@syscall[vmtoolsd, 45]: 2\n@syscall[sudo, 33]: 2\n@syscall[sudo, 109]: 2\n@syscall[systemd, 286]: 2\n@syscall[sudo, 118]: 2\n@syscall[pool-/usr/bin/f, 7]: 2\n@syscall[in:imuxsock, 47]: 2\n@syscall[sudo, 56]: 2\n@syscall[in:imuxsock, 7]: 2\n@syscall[bpftrace, 17]: 2\n@syscall[node, 4]: 2\n@syscall[in:imuxsock, 202]: 2\n@syscall[systemd-journal, 46]: 2\n@syscall[timeout, 10]: 3\n@syscall[vmtoolsd, 44]: 3\n@syscall[python3, 8]: 3\n@syscall[multipathd, 202]: 3\n@syscall[sudo, 89]: 3\n@syscall[timeout, 262]: 3\n@syscall[sshd, 1]: 3\n@syscall[node, 62]: 3\n@syscall[sudo, 292]: 3\n@syscall[python3, 14]: 3\n@syscall[sudo, 32]: 3\n@syscall[sudo, 293]: 3\n@syscall[sshd, 0]: 3\n@syscall[timeout, 12]: 3\n@syscall[sudo, 202]: 3\n@syscall[sudo, 273]: 3\n@syscall[timeout, 3]: 3\n@syscall[node, 47]: 3\n@syscall[python3, 293]: 3\n@syscall[timeout, 257]: 3\n@syscall[timeout, 14]: 3\n@syscall[python3, 262]: 3\n@syscall[node, 7]: 4\n@syscall[sudo, 7]: 4\n@syscall[timeout, 59]: 4\n@syscall[sudo, 12]: 4\n@syscall[sudo, 271]: 4\n@syscall[rs:main Q:Reg, 202]: 4\n@syscall[sudo, 95]: 4\n@syscall[node, 21]: 4\n@syscall[sudo, 217]: 4\n@syscall[sudo, 102]: 5\n@syscall[sudo, 116]: 5\n@syscall[node, 332]: 5\n@syscall[vmtoolsd, 47]: 6\n@syscall[python3, 0]: 6\n@syscall[sshd, 271]: 6\n@syscall[sudo, 47]: 6\n@syscall[systemd-journal, 16]: 6\n@syscall[python3, 59]: 6\n@syscall[python3, 3]: 7\n@syscall[sudo, 11]: 7\n@syscall[sudo, 39]: 7\n@syscall[sudo, 42]: 7\n@syscall[sudo, 21]: 8\n@syscall[sudo, 37]: 9\n@syscall[timeout, 9]: 9\n@syscall[sudo, 119]: 9\n@syscall[systemd-journal, 267]: 10\n@syscall[systemd-logind, 17]: 10\n@syscall[sudo, 44]: 10\n@syscall[bpftrace, 232]: 10\n@syscall[sudo, 45]: 10\n@syscall[timeout, 13]: 11\n@syscall[sshd, 14]: 12\n@syscall[sudo, 41]: 12\n@syscall[sudo, 14]: 13\n@syscall[sudo, 157]: 13\n@syscall[systemd-journal, 262]: 13\n@syscall[sudo, 117]: 14\n@syscall[systemd-journal, 3]: 14\n@syscall[vmtoolsd, 7]: 14\n@syscall[systemd-journal, 257]: 18\n@syscall[systemd-journal, 62]: 19\n@syscall[node, 1]: 20\n@syscall[systemd-logind, 13]: 20\n@syscall[systemd-logind, 72]: 20\n@syscall[bpftrace, 3]: 22\n@syscall[systemd-journal, 0]: 22\n@syscall[bpftrace, 10]: 23\n@syscall[sudo, 16]: 23\n@syscall[fwupdmgr, 1]: 24\n@syscall[sudo, 10]: 24\n@syscall[node, 89]: 24\n@syscall[fwupdmgr, 7]: 24\n@syscall[node, 262]: 25\n@syscall[node, 16]: 25\n@syscall[bpftrace, 262]: 25\n@syscall[bpftrace, 257]: 26\n@syscall[systemd-journal, 232]: 26\n@syscall[systemd-journal, 186]: 26\n@syscall[systemd-journal, 47]: 26\n@syscall[node, 3]: 26\n@syscall[node, 257]: 26\n@syscall[systemd-logind, 37]: 30\n@syscall[sudo, 17]: 31\n@syscall[containerd, 35]: 31\n@syscall[sudo, 8]: 35\n@syscall[node, 0]: 46\n@syscall[sudo, 72]: 47\n@syscall[bpftrace, 202]: 49\n@syscall[python3, 13]: 63\n@syscall[sudo, 302]: 64\n@syscall[sudo, 13]: 64\n@syscall[node, 232]: 69\n@syscall[vmtoolsd, 100]: 72\n@syscall[node, 202]: 75\n@syscall[containerd, 202]: 92\n@syscall[bpftrace, 9]: 99\n@syscall[bpftrace, 12]: 99\n@syscall[containerd, 281]: 100\n@syscall[sudo, 9]: 107\n@syscall[sudo, 257]: 122\n@syscall[sudo, 3]: 130\n@syscall[sudo, 0]: 138\n@syscall[sudo, 262]: 152\n@syscall[bpftrace, 0]: 211\n@syscall[bpftrace, 321]: 248\n\nSystem call rates per second:\n@syscall[python3, 41]: 1\n@syscall[node, 11]: 1\n@syscall[systemd-logind, 3]: 1\n@syscall[python3, 61]: 1\n@syscall[timeout, 61]: 1\n@syscall[sh, 108]: 1\n@syscall[python3, 45]: 1\n@syscall[timeout, 15]: 1\n@syscall[multipathd, 230]: 1\n@syscall[python3, 51]: 1\n@syscall[sh, 104]: 1\n@syscall[timeout, 231]: 1\n@syscall[python3, 44]: 1\n@syscall[bpftrace, 107]: 1\n@syscall[node, 9]: 1\n@syscall[sh, 11]: 1\n@syscall[systemd-journal, 16]: 1\n@syscall[python3, 52]: 1\n@syscall[systemd-logind, 257]: 1\n@syscall[sh, 39]: 1\n@syscall[sh, 102]: 1\n@syscall[bpftrace, 186]: 1\n@syscall[python3, 54]: 1\n@syscall[systemd-logind, 186]: 1\n@syscall[bpftrace, 293]: 1\n@syscall[bpftrace, 61]: 1\n@syscall[systemd-logind, 0]: 1\n@syscall[systemd-journal, 257]: 1\n@syscall[node, 280]: 1\n@syscall[sudo, 16]: 1\n@syscall[bpftrace, 8]: 1\n@syscall[sh, 79]: 1\n@syscall[sh, 0]: 1\n@syscall[bpftrace, 59]: 1\n@syscall[sudo, 61]: 1\n@syscall[cpptools, 0]: 1\n@syscall[sh, 302]: 1\n@syscall[rs:main Q:Reg, 1]: 1\n@syscall[in:imuxsock, 7]: 1\n@syscall[sh, 218]: 1\n@syscall[sh, 334]: 1\n@syscall[sh, 21]: 1\n@syscall[systemd-logind, 21]: 1\n@syscall[bpftrace, 231]: 1\n@syscall[node, 230]: 1\n@syscall[sh, 110]: 1\n@syscall[systemd-logind, 8]: 1\n@syscall[sh, 273]: 1\n@syscall[cpptools, 19]: 1\n@syscall[sh, 318]: 1\n@syscall[in:imuxsock, 202]: 1\n@syscall[in:imuxsock, 47]: 1\n@syscall[systemd-journal, 46]: 1\n@syscall[systemd, 192]: 1\n@syscall[HangDetector, 202]: 1\n@syscall[systemd-logind, 232]: 1\n@syscall[sudo, 293]: 1\n@syscall[python3, 42]: 1\n@syscall[sh, 231]: 1\n@syscall[sudo, 33]: 1\n@syscall[bpftrace, 63]: 2\n@syscall[pool-/usr/bin/f, 7]: 2\n@syscall[sudo, 15]: 2\n@syscall[sudo, 41]: 2\n@syscall[timeout, 3]: 2\n@syscall[systemd-journal, 77]: 2\n@syscall[sudo, 21]: 2\n@syscall[sh, 17]: 2\n@syscall[sh, 257]: 2\n@syscall[containerd, 1]: 2\n@syscall[bpftrace, 1]: 2\n@syscall[python3, 55]: 2\n@syscall[sh, 158]: 2\n@syscall[sh, 107]: 2\n@syscall[sh, 72]: 2\n@syscall[sudo, 262]: 2\n@syscall[systemd, 286]: 2\n@syscall[sudo, 7]: 2\n@syscall[sudo, 231]: 2\n@syscall[sh, 33]: 2\n@syscall[rs:main Q:Reg, 202]: 2\n@syscall[containerd, 0]: 2\n@syscall[sudo, 102]: 2\n@syscall[sudo, 14]: 2\n@syscall[sudo, 8]: 2\n@syscall[sh, 12]: 3\n@syscall[sh, 1]: 3\n@syscall[systemd-journal, 286]: 3\n@syscall[multipathd, 1]: 3\n@syscall[bpftrace, 302]: 3\n@syscall[systemd, 16]: 3\n@syscall[sh, 10]: 3\n@syscall[python3, 1]: 3\n@syscall[systemd, 247]: 3\n@syscall[multipathd, 202]: 3\n@syscall[sudo, 1]: 3\n@syscall[node, 62]: 4\n@syscall[sudo, 44]: 4\n@syscall[systemd, 3]: 4\n@syscall[python3, 16]: 4\n@syscall[python3, 8]: 4\n@syscall[python3, 257]: 4\n@syscall[sh, 3]: 4\n@syscall[systemd, 257]: 4\n@syscall[sudo, 257]: 4\n@syscall[node, 39]: 4\n@syscall[node, 28]: 4\n@syscall[systemd, 262]: 5\n@syscall[systemd, 232]: 5\n@syscall[bpftrace, 32]: 5\n@syscall[systemd, 186]: 5\n@syscall[sudo, 45]: 5\n@syscall[bpftrace, 334]: 6\n@syscall[sudo, 37]: 6\n@syscall[node, 7]: 6\n@syscall[node, 4]: 6\n@syscall[bpftrace, 9]: 6\n@syscall[python3, 7]: 6\n@syscall[bpftrace, 60]: 6\n@syscall[bpftrace, 273]: 6\n@syscall[bpftrace, 16]: 6\n@syscall[bpftrace, 28]: 6\n@syscall[bpftrace, 435]: 7\n@syscall[python3, 39]: 7\n@syscall[bpftrace, 11]: 7\n@syscall[sh, 13]: 7\n@syscall[python3, 3]: 7\n@syscall[sh, 9]: 8\n@syscall[sudo, 72]: 8\n@syscall[sudo, 17]: 9\n@syscall[sh, 262]: 9\n@syscall[node, 10]: 9\n@syscall[sudo, 0]: 9\n@syscall[bpftrace, 232]: 10\n@syscall[node, 47]: 10\n@syscall[systemd-logind, 17]: 10\n@syscall[sshd, 318]: 10\n@syscall[sudo, 11]: 10\n@syscall[vmtoolsd, 7]: 11\n@syscall[sudo, 3]: 11\n@syscall[bpftrace, 33]: 11\n@syscall[systemd, 0]: 11\n@syscall[bpftrace, 72]: 11\n@syscall[python3, 262]: 11\n@syscall[node, 21]: 12\n@syscall[cpptools, 202]: 13\n@syscall[node, 332]: 15\n@syscall[sudo, 13]: 16\n@syscall[sshd, 0]: 18\n@syscall[bpftrace, 79]: 18\n@syscall[sshd, 1]: 19\n@syscall[systemd-logind, 72]: 20\n@syscall[systemd-logind, 13]: 20\n@syscall[bpftrace, 89]: 21\n@syscall[fwupdmgr, 7]: 23\n@syscall[fwupdmgr, 1]: 23\n@syscall[systemd-journal, 47]: 24\n@syscall[node, 16]: 25\n@syscall[bpftrace, 17]: 25\n@syscall[node, 262]: 25\n@syscall[systemd-journal, 186]: 26\n@syscall[systemd-journal, 232]: 26\n@syscall[node, 257]: 28\n@syscall[node, 3]: 28\n@syscall[systemd-logind, 37]: 30\n@syscall[containerd, 35]: 31\n@syscall[sshd, 271]: 36\n@syscall[bpftrace, 217]: 36\n@syscall[vmtoolsd, 100]: 54\n@syscall[node, 89]: 54\n@syscall[bpftrace, 12]: 59\n@syscall[bpftrace, 14]: 59\n@syscall[sshd, 14]: 72\n@syscall[bpftrace, 21]: 77\n@syscall[python3, 0]: 81\n@syscall[node, 1]: 86\n@syscall[containerd, 202]: 93\n@syscall[containerd, 281]: 102\n@syscall[node, 0]: 110\n@syscall[bpftrace, 13]: 129\n@syscall[node, 232]: 212\n@syscall[node, 202]: 272\n@syscall[bpftrace, 202]: 276\n@syscall[bpftrace, 3]: 357\n@syscall[bpftrace, 257]: 379\n@syscall[bpftrace, 0]: 431\n@syscall[bpftrace, 262]: 485\n@syscall[bpftrace, 10]: 1063\n@syscall[bpftrace, 321]: 1082\n\nSystem call rates per second:\n@syscall[containerd, 15]: 1\n@syscall[containerd, 234]: 1\n@syscall[node, 280]: 1\n@syscall[bpftrace, 186]: 1\n@syscall[bpftrace, 1]: 1\n@syscall[multipathd, 230]: 1\n@syscall[containerd, 39]: 1\n@syscall[HangDetector, 202]: 1\n@syscall[node, 230]: 1\n@syscall[systemd, 286]: 2\n@syscall[pool-/usr/bin/f, 7]: 2\n@syscall[cpptools, 202]: 2\n@syscall[systemd, 186]: 2\n@syscall[systemd, 232]: 2\n@syscall[node, 4]: 2\n@syscall[sshd, 318]: 2\n@syscall[systemd, 0]: 2\n@syscall[containerd, 0]: 2\n@syscall[multipathd, 1]: 2\n@syscall[containerd, 1]: 2\n@syscall[sshd, 0]: 3\n@syscall[python3, 1]: 3\n@syscall[multipathd, 202]: 3\n@syscall[python3, 7]: 3\n@syscall[python3, 16]: 3\n@syscall[sshd, 1]: 3\n@syscall[node, 7]: 4\n@syscall[node, 39]: 4\n@syscall[node, 47]: 4\n@syscall[node, 21]: 4\n@syscall[node, 332]: 5\n@syscall[node, 62]: 5\n@syscall[sshd, 271]: 6\n@syscall[python3, 0]: 9\n@syscall[bpftrace, 232]: 10\n@syscall[vmtoolsd, 7]: 11\n@syscall[sshd, 14]: 12\n@syscall[node, 1]: 21\n@syscall[systemd-journal, 232]: 24\n@syscall[node, 89]: 24\n@syscall[fwupdmgr, 7]: 24\n@syscall[systemd-journal, 47]: 24\n@syscall[systemd-journal, 186]: 24\n@syscall[fwupdmgr, 1]: 24\n@syscall[node, 16]: 25\n@syscall[node, 262]: 25\n@syscall[node, 3]: 26\n@syscall[node, 257]: 26\n@syscall[containerd, 35]: 31\n@syscall[node, 0]: 46\n@syscall[vmtoolsd, 100]: 54\n@syscall[node, 202]: 72\n@syscall[node, 232]: 76\n@syscall[containerd, 202]: 94\n@syscall[containerd, 281]: 103\n@syscall[bpftrace, 321]: 149\n\nTop system calls:\n@syscall[systemd, 232]: 1\n@syscall[node, 62]: 1\n@syscall[bpftrace, 15]: 1\n@syscall[python3, 230]: 1\n@syscall[timeout, 61]: 1\n@syscall[timeout, 130]: 1\n@syscall[node, 280]: 1\n@syscall[systemd, 186]: 1\n@syscall[node, 39]: 1\n@syscall[python3, 1]: 1\n@syscall[timeout, 15]: 1\n@syscall[bpftrace, 16]: 1\n@syscall[multipathd, 230]: 1\n@syscall[bpftrace, 3]: 1\n@syscall[systemd, 286]: 1\n@syscall[HangDetector, 202]: 1\n@syscall[systemd, 0]: 1\n@syscall[pool-/usr/bin/f, 7]: 2\n@syscall[multipathd, 1]: 2\n@syscall[python3, 202]: 2\n@syscall[timeout, 13]: 2\n@syscall[cpptools, 202]: 2\n@syscall[multipathd, 202]: 3\n@syscall[timeout, 62]: 4\n@syscall[sshd, 318]: 4\n@syscall[node, 4]: 4\n@syscall[node, 47]: 5\n@syscall[node, 7]: 6\n@syscall[bpftrace, 232]: 6\n@syscall[vmtoolsd, 7]: 7\n@syscall[sshd, 0]: 8\n@syscall[sshd, 1]: 8\n@syscall[node, 21]: 8\n@syscall[node, 332]: 9\n@syscall[systemd-journal, 232]: 13\n@syscall[fwupdmgr, 7]: 13\n@syscall[fwupdmgr, 1]: 13\n@syscall[systemd-journal, 186]: 13\n@syscall[systemd-journal, 47]: 13\n@syscall[node, 16]: 15\n@syscall[node, 262]: 15\n@syscall[node, 257]: 16\n@syscall[sshd, 271]: 16\n@syscall[node, 3]: 16\n@syscall[python3, 0]: 17\n@syscall[containerd, 35]: 18\n@syscall[bpftrace, 321]: 26\n@syscall[sshd, 14]: 32\n@syscall[vmtoolsd, 100]: 34\n@syscall[node, 1]: 38\n@syscall[node, 89]: 39\n@syscall[containerd, 202]: 54\n@syscall[containerd, 281]: 56\n@syscall[node, 0]: 57\n@syscall[node, 232]: 100\n@syscall[node, 202]: 131\n\n\n@syscall[systemd, 232]: 1\n@syscall[node, 62]: 1\n@syscall[bpftrace, 15]: 1\n@syscall[python3, 230]: 1\n@syscall[timeout, 61]: 1\n@syscall[timeout, 130]: 1\n@syscall[node, 280]: 1\n@syscall[systemd, 186]: 1\n@syscall[node, 39]: 1\n@syscall[python3, 1]: 1\n@syscall[timeout, 15]: 1\n@syscall[bpftrace, 16]: 1\n@syscall[multipathd, 230]: 1\n@syscall[bpftrace, 3]: 1\n@syscall[systemd, 286]: 1\n@syscall[HangDetector, 202]: 1\n@syscall[systemd, 0]: 1\n@syscall[pool-/usr/bin/f, 7]: 2\n@syscall[multipathd, 1]: 2\n@syscall[python3, 202]: 2\n@syscall[timeout, 13]: 2\n@syscall[cpptools, 202]: 2\n@syscall[multipathd, 202]: 3\n@syscall[timeout, 62]: 4\n@syscall[sshd, 318]: 4\n@syscall[node, 4]: 4\n@syscall[node, 47]: 5\n@syscall[node, 7]: 6\n@syscall[bpftrace, 232]: 6\n@syscall[vmtoolsd, 7]: 7\n@syscall[sshd, 0]: 8\n@syscall[sshd, 1]: 8\n@syscall[node, 21]: 8\n@syscall[node, 332]: 9\n@syscall[systemd-journal, 232]: 13\n@syscall[fwupdmgr, 7]: 13\n@syscall[fwupdmgr, 1]: 13\n@syscall[systemd-journal, 186]: 13\n@syscall[systemd-journal, 47]: 13\n@syscall[node, 16]: 15\n@syscall[node, 262]: 15\n@syscall[node, 257]: 16\n@syscall[sshd, 271]: 16\n@syscall[node, 3]: 16\n@syscall[python3, 0]: 17\n@syscall[containerd, 35]: 18\n@syscall[bpftrace, 321]: 26\n@syscall[sshd, 14]: 32\n@syscall[vmtoolsd, 100]: 34\n@syscall[node, 1]: 38\n@syscall[node, 89]: 39\n@syscall[containerd, 202]: 54\n@syscall[containerd, 281]: 56\n@syscall[node, 0]: 57\n@syscall[node, 232]: 100\n@syscall[node, 202]: 131\n", "stderr": "", "returncode": 0, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nmonitors the rate of system calls made by specific user-space processes and identifies heavily used system calls\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that counts the number of system calls and the number of processes. It also prints the top 10 system call IDs and the top 10 processes at the end.\n\n```\nBEGIN\n{\n\tprintf(\"Counting syscalls... Hit Ctrl-C to end.\\n\");\n\t// ausyscall --dump | awk 'NR > 1 { printf(\"\\t@sysname[%d] = \\\"%s\\\";\\n\", $1, $2); }'\n}\n\ntracepoint:raw_syscalls:sys_enter\n{\n\t@syscall[args.id] = count();\n\t@process[comm] = count();\n}\n\nEND\n{\n\tprintf(\"\\nTop 10 syscalls IDs:\\n\");\n\tprint(@syscall, 10);\n\tclear(@syscall);\n\n\tprintf(\"\\nTop 10 processes:\\n\");\n\tprint(@process, 10);\n\tclear(@process);\n}\n\n```\n\nexample: Write a BPF code that traces sync-related system calls, such as sync(), syncfs(), fsync(), and fdatasync(), and prints the time, process ID, command, and event for each traced system call.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing sync syscalls... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-9s %-6s %-16s %s\\n\", \"TIME\", \"PID\", \"COMM\", \"EVENT\");\n}\n\ntracepoint:syscalls:sys_enter_sync,\ntracepoint:syscalls:sys_enter_syncfs,\ntracepoint:syscalls:sys_enter_fsync,\ntracepoint:syscalls:sys_enter_fdatasync,\ntracepoint:syscalls:sys_enter_sync_file_range*,\ntracepoint:syscalls:sys_enter_msync\n{\n\ttime(\"%H:%M:%S  \");\n\tprintf(\"%-6d %-16s %s\\n\", pid, comm, probe);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nmonitors the rate of system calls made by specific user-space processes and identifies heavily used system calls\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e #ifndef BPFTRACE_HAVE_BTF\n#include <linux/fs.h>\n#include <linux/sched.h>\n\nstruct nameidata {\n        struct path     path;\n        struct qstr     last;\n};\n\nBEGIN\n{\n\tprintf(\"Tracing dcache lookups... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-8s %-6s %-16s %1s %s\\n\", \"TIME\", \"PID\", \"COMM\", \"T\", \"FILE\");\n}\n\nkprobe:lookup_fast,\nkprobe:lookup_fast.constprop.*\n{\n\t$nd = (struct nameidata *)arg0;\n\tprintf(\"%-8d %-6d %-16s R %s\\n\", elapsed / 1e6, pid, comm,\n\t    str($nd->last.name));\n}\n\nkprobe:d_lookup\n{\n\t$name = (struct qstr *)arg1;\n\t@fname[tid] = $name->name;\n}\n\nkretprobe:d_lookup\n/@fname[tid]/\n{\n\tprintf(\"%-8d %-6d %-16s M %s\\n\", elapsed / 1e6, pid, comm,\n\t    str(@fname[tid]));\n\tdelete(@fname[tid]);\n}\n", "stdout": "", "stderr": "definitions.h:2:2: error: unterminated conditional directive\n", "returncode": 1, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nTrace directory entry cache (dcache) lookups by process\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces directory entry cache (dcache) lookups in the Linux kernel. The code uses kernel dynamic tracing of functions lookup_fast() and d_lookup() to capture lookup information and prints the time, process ID, command, and file name for each lookup event.\n\n```\n#ifndef BPFTRACE_HAVE_BTF\n#include <linux/fs.h>\n#include <linux/sched.h>\n\n// from fs/namei.c:\nstruct nameidata {\n        struct path     path;\n        struct qstr     last;\n        // [...]\n};\n#endif\n\nBEGIN\n{\n\tprintf(\"Tracing dcache lookups... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-8s %-6s %-16s %1s %s\\n\", \"TIME\", \"PID\", \"COMM\", \"T\", \"FILE\");\n}\n\n// comment out this block to avoid showing hits:\nkprobe:lookup_fast,\nkprobe:lookup_fast.constprop.*\n{\n\t$nd = (struct nameidata *)arg0;\n\tprintf(\"%-8d %-6d %-16s R %s\\n\", elapsed / 1e6, pid, comm,\n\t    str($nd->last.name));\n}\n\nkprobe:d_lookup\n{\n\t$name = (struct qstr *)arg1;\n\t@fname[tid] = $name->name;\n}\n\nkretprobe:d_lookup\n/@fname[tid]/\n{\n\tprintf(\"%-8d %-6d %-16s M %s\\n\", elapsed / 1e6, pid, comm,\n\t    str(@fname[tid]));\n\tdelete(@fname[tid]);\n}\n\n```\n\nexample: Write a BPF code that traces the syscalls statfs(), statx(), newstat(), and newlstat(), providing information about the PID, process name, error code, and path being accessed.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing stat syscalls... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-6s %-16s %3s %s\\n\", \"PID\", \"COMM\", \"ERR\", \"PATH\");\n}\n\ntracepoint:syscalls:sys_enter_statfs\n{\n\t@filename[tid] = args.pathname;\n}\n\ntracepoint:syscalls:sys_enter_statx,\ntracepoint:syscalls:sys_enter_newstat,\ntracepoint:syscalls:sys_enter_newlstat\n{\n\t@filename[tid] = args.filename;\n}\n\ntracepoint:syscalls:sys_exit_statfs,\ntracepoint:syscalls:sys_exit_statx,\ntracepoint:syscalls:sys_exit_newstat,\ntracepoint:syscalls:sys_exit_newlstat\n/@filename[tid]/\n{\n\t$ret = args.ret;\n\t$errno = $ret >= 0 ? 0 : - $ret;\n\n\tprintf(\"%-6d %-16s %3d %s\\n\", pid, comm, $errno,\n\t    str(@filename[tid]));\n\tdelete(@filename[tid]);\n}\n\nEND\n{\n\tclear(@filename);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nTrace directory entry cache (dcache) lookups by process\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }", "stdout": "Attaching 2 probes...\n@: 860\n@: 7063\n@: 942\n@: 1157\n@: 826\n@: 855\n@: 867\n@: 921\n@: 986\n@: 831\n@: 816\n@: 846\n@: 945\n@: 1344\n@: 858\n@: 866\n@: 870\n@: 925\n@: 7752\n\n\n@: 791\n", "stderr": "", "returncode": 0, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nMonitors the rate of syscall by second globally\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces key VFS calls, counts the number of times each call is invoked, and prints a per-second summary.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing key VFS calls... Hit Ctrl-C to end.\\n\");\n\n}\n\nkprobe:vfs_read*,\nkprobe:vfs_write*,\nkprobe:vfs_fsync,\nkprobe:vfs_open,\nkprobe:vfs_create\n{\n\t@[func] = count();\n}\n\ninterval:s:1\n{\n\ttime();\n\tprint(@);\n\tclear(@);\n}\n\nEND\n{\n\tclear(@);\n}\n\n```\n\nexample: Write a BPF code that traces new processes and counts the number of new process creations per second using the eBPF technology.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing new processes... Hit Ctrl-C to end.\\n\");\n\n}\n\ntracepoint:sched:sched_process_fork\n{\n\t@ = count();\n}\n\ninterval:s:1\n{\n\ttime(\"%H:%M:%S PIDs/sec: \");\n\tprint(@);\n\tclear(@);\n}\n\nEND\n{\n\tclear(@);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nMonitors the rate of syscall by second globally\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e #include <linux/genhd.h>\n#include <linux/bio.h>\n\nBEGIN\n{\n\tprintf(\"Tracing md flush events... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-8s %-6s %-16s %s\\n\", \"TIME\", \"PID\", \"COMM\", \"DEVICE\");\n}\n\nkprobe:md_flush_request\n{\n\ttime(\"%H:%M:%S \");\n\tprintf(\"%-6d %-16s %s\\n\", pid, comm, ((struct bio *)arg1)->bi_bdev->bd_disk->disk_name);\n}", "stdout": "", "stderr": "definitions.h:2:10: fatal error: 'linux/genhd.h' file not found\n", "returncode": 1, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nTrace md flush events with pid and process name\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces md flush events and displays the time, process ID, command, and device information of each event.\n\n```\n#ifndef BPFTRACE_HAVE_BTF\n#include <linux/genhd.h>\n#include <linux/bio.h>\n#endif\n\nBEGIN\n{\n\tprintf(\"Tracing md flush events... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-8s %-6s %-16s %s\\n\", \"TIME\", \"PID\", \"COMM\", \"DEVICE\");\n}\n\nkprobe:md_flush_request\n{\n\ttime(\"%H:%M:%S \");\n\tprintf(\"%-6d %-16s %s\\n\", pid, comm,\n\t    ((struct bio *)arg1)->bi_bdev->bd_disk->disk_name);\n}\n\n```\n\nexample: Write a BPF code that traces sync-related system calls, such as sync(), syncfs(), fsync(), and fdatasync(), and prints the time, process ID, command, and event for each traced system call.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing sync syscalls... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-9s %-6s %-16s %s\\n\", \"TIME\", \"PID\", \"COMM\", \"EVENT\");\n}\n\ntracepoint:syscalls:sys_enter_sync,\ntracepoint:syscalls:sys_enter_syncfs,\ntracepoint:syscalls:sys_enter_fsync,\ntracepoint:syscalls:sys_enter_fdatasync,\ntracepoint:syscalls:sys_enter_sync_file_range*,\ntracepoint:syscalls:sys_enter_msync\n{\n\ttime(\"%H:%M:%S  \");\n\tprintf(\"%-6d %-16s %s\\n\", pid, comm, probe);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nTrace md flush events with pid and process name\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e #include <net/sock.h>\n\ntracepoint:syscalls:sys_enter_socket {\n  $family = args->family;\n  $type = args->type;\n  $protocol = args->protocol;\n  printf(\"PID: %d, COMM: %s, Family: %d, Type: %d, Protocol: %d\\n\", pid, comm, $family, $type, $protocol);\n}", "stdout": "Attaching 1 probe...\nPID: 31414, COMM: sudo, Family: 16, Type: 3, Protocol: 9\nPID: 31414, COMM: sudo, Family: 16, Type: 3, Protocol: 9\nPID: 563, COMM: systemd-timesyn, Family: 1, Type: 524290, Protocol: 0\nPID: 572, COMM: vmtoolsd, Family: 16, Type: 524291, Protocol: 0\n\n\n", "stderr": "", "returncode": 0, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\ntraces socket operations and logs the socket types and process IDs involved.\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces TCP accept()s by dynamically tracing the kernel inet_csk_accept() socket function and prints information such as the time, process ID, communication, remote and local addresses and ports, and backlog length.\n\n```\n#ifndef BPFTRACE_HAVE_BTF\n#include <linux/socket.h>\n#include <net/sock.h>\n#else\n#include <sys/socket.h>\n#endif\n\nBEGIN\n{\n\tprintf(\"Tracing TCP accepts. Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-8s %-6s %-14s \", \"TIME\", \"PID\", \"COMM\");\n\tprintf(\"%-39s %-5s %-39s %-5s %s\\n\", \"RADDR\", \"RPORT\", \"LADDR\",\n\t    \"LPORT\", \"BL\");\n}\n\nkretprobe:inet_csk_accept\n{\n\t$sk = (struct sock *)retval;\n\t$inet_family = $sk->__sk_common.skc_family;\n\n\tif ($inet_family == AF_INET || $inet_family == AF_INET6) {\n\t\t// initialize variable type:\n\t\t$daddr = ntop(0);\n\t\t$saddr = ntop(0);\n\t\tif ($inet_family == AF_INET) {\n\t\t\t$daddr = ntop($sk->__sk_common.skc_daddr);\n\t\t\t$saddr = ntop($sk->__sk_common.skc_rcv_saddr);\n\t\t} else {\n\t\t\t$daddr = ntop(\n\t\t\t    $sk->__sk_common.skc_v6_daddr.in6_u.u6_addr8);\n\t\t\t$saddr = ntop(\n\t\t\t    $sk->__sk_common.skc_v6_rcv_saddr.in6_u.u6_addr8);\n\t\t}\n\t\t$lport = $sk->__sk_common.skc_num;\n\t\t$dport = $sk->__sk_common.skc_dport;\n\t\t$qlen  = $sk->sk_ack_backlog;\n\t\t$qmax  = $sk->sk_max_ack_backlog;\n\n\t\t// Destination port is big endian, it must be flipped\n\t\t$dport = bswap($dport);\n\n\t\ttime(\"%H:%M:%S \");\n\t\tprintf(\"%-6d %-14s \", pid, comm);\n\t\tprintf(\"%-39s %-5d %-39s %-5d \", $daddr, $dport, $saddr,\n\t\t    $lport);\n\t\tprintf(\"%d/%d\\n\", $qlen, $qmax);\n\t}\n}\n\n```\n\nexample: Write a BPF code that traces TCP connections by dynamically tracing kernel functions and prints out the time, PID, and addresses and ports of the source and destination of each connection.\n\n```\n#ifndef BPFTRACE_HAVE_BTF\n#include <linux/socket.h>\n#include <net/sock.h>\n#else\n#include <sys/socket.h>\n#endif\n\nBEGIN\n{\n  printf(\"Tracing tcp connections. Hit Ctrl-C to end.\\n\");\n  printf(\"%-8s %-8s %-16s \", \"TIME\", \"PID\", \"COMM\");\n  printf(\"%-39s %-6s %-39s %-6s\\n\", \"SADDR\", \"SPORT\", \"DADDR\", \"DPORT\");\n}\n\nkprobe:tcp_connect\n{\n  $sk = ((struct sock *) arg0);\n  $inet_family = $sk->__sk_common.skc_family;\n\n  if ($inet_family == AF_INET || $inet_family == AF_INET6) {\n    if ($inet_family == AF_INET) {\n      $daddr = ntop($sk->__sk_common.skc_daddr);\n      $saddr = ntop($sk->__sk_common.skc_rcv_saddr);\n    } else {\n      $daddr = ntop($sk->__sk_common.skc_v6_daddr.in6_u.u6_addr8);\n      $saddr = ntop($sk->__sk_common.skc_v6_rcv_saddr.in6_u.u6_addr8);\n    }\n    $lport = $sk->__sk_common.skc_num;\n    $dport = $sk->__sk_common.skc_dport;\n\n    // Destination port is big endian, it must be flipped\n    $dport = bswap($dport);\n\n    time(\"%H:%M:%S \");\n    printf(\"%-8d %-16s \", pid, comm);\n    printf(\"%-39s %-6d %-39s %-6d\\n\", $saddr, $lport, $daddr, $dport);\n  }\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\ntraces socket operations and logs the socket types and process IDs involved.\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e #include <linux/sched.h>\n\nBEGIN\n{\n\tprintf(\"Tracing CPU scheduler... Hit Ctrl-C to end.\\n\");\n}\n\ntracepoint:sched:sched_wakeup,\ntracepoint:sched:sched_wakeup_new\n{\n\t@qtime[args.pid] = nsecs;\n}\n\ntracepoint:sched:sched_switch\n{\n\tif (args.prev_state == TASK_RUNNING) {\n\t\t@qtime[args.prev_pid] = nsecs;\n\t}\n\n\t$ns = @qtime[args.next_pid];\n\tif ($ns) {\n\t\t@usecs = hist((nsecs - $ns) / 1000);\n\t}\n\tdelete(@qtime[args.next_pid]);\n}\n\nEND\n{\n\tclear(@qtime);\n}", "stdout": "", "stderr": "stdin:11:2-14: ERROR: Can not access field 'pid' on type '(ctx) struct _tracepoint_sched_sched_wakeup_new *'. Try dereferencing it first, or using '->'\n    @qtime[args.pid] = nsecs;\n    ~~~~~~~~~~~~\nstdin:16:5-11: ERROR: Can not access field 'prev_state' on type '(ctx) struct _tracepoint_sched_sched_switch *'. Try dereferencing it first, or using '->'\n    if (args.prev_state == TASK_RUNNING) {\n       ~~~~~~\nstdin:17:3-15: ERROR: Can not access field 'prev_pid' on type '(ctx) struct _tracepoint_sched_sched_switch *'. Try dereferencing it first, or using '->'\n        @qtime[args.prev_pid] = nsecs;\n        ~~~~~~~~~~~~\nstdin:20:8-20: ERROR: Can not access field 'next_pid' on type '(ctx) struct _tracepoint_sched_sched_switch *'. Try dereferencing it first, or using '->'\n    $ns = @qtime[args.next_pid];\n          ~~~~~~~~~~~~\nstdin:24:2-21: ERROR: Can not access field 'next_pid' on type '(ctx) struct _tracepoint_sched_sched_switch *'. Try dereferencing it first, or using '->'\n    delete(@qtime[args.next_pid]);\n    ~~~~~~~~~~~~~~~~~~~\n", "returncode": 1, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nPrint CPU scheduler run queue latency as a histogram\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces the CPU scheduler and records the latency of tasks in the run queue, using the sched_wakeup, sched_wakeup_new, and sched_switch tracepoints, and displays the latency as a histogram.\n\n```\n#include <linux/sched.h>\n\nBEGIN\n{\n\tprintf(\"Tracing CPU scheduler... Hit Ctrl-C to end.\\n\");\n}\n\ntracepoint:sched:sched_wakeup,\ntracepoint:sched:sched_wakeup_new\n{\n\t@qtime[args.pid] = nsecs;\n}\n\ntracepoint:sched:sched_switch\n{\n\tif (args.prev_state == TASK_RUNNING) {\n\t\t@qtime[args.prev_pid] = nsecs;\n\t}\n\n\t$ns = @qtime[args.next_pid];\n\tif ($ns) {\n\t\t@usecs = hist((nsecs - $ns) / 1000);\n\t}\n\tdelete(@qtime[args.next_pid]);\n}\n\nEND\n{\n\tclear(@qtime);\n}\n\n```\n\nexample: Write a BPF code that calculates and samples the length of the CPU scheduler run queue as a histogram, subtracting the currently running task from the total queue length.\n\n```\n#ifndef BPFTRACE_HAVE_BTF\n#include <linux/sched.h>\n\n// Until BTF is available, we'll need to declare some of this struct manually,\n// since it isn't available to be #included. This will need maintenance to match\n// your kernel version. It is from kernel/sched/sched.h:\nstruct cfs_rq {\n\tstruct load_weight load;\n\tunsigned long runnable_weight;\n\tunsigned int nr_running;\n\tunsigned int h_nr_running;\n};\n#endif\n\nBEGIN\n{\n\tprintf(\"Sampling run queue length at 99 Hertz... Hit Ctrl-C to end.\\n\");\n}\n\nprofile:hz:99\n{\n\t$task = (struct task_struct *)curtask;\n\t$my_q = (struct cfs_rq *)$task->se.cfs_rq;\n\t$len = $my_q->nr_running;\n\t$len = $len > 0 ? $len - 1 : 0;\t// subtract currently running task\n\t@runqlen = lhist($len, 0, 100, 1);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nPrint CPU scheduler run queue latency as a histogram\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN { printf(\"Tracing file read and write events... Hit Ctrl-C to end.\\n\"); }\n\ntracepoint:syscalls:sys_enter_read, tracepoint:syscalls:sys_enter_write { @bytes[comm, str(args->filename)] = hist(args->count); }\n\nEND { printf(\"\\nI/O size (bytes) distribution by process and file:\"); }", "stdout": "", "stderr": "stdin:3:88-106: ERROR: Struct/union of type 'struct _tracepoint_syscalls_sys_enter_read' does not contain a field named 'filename'\ntracepoint:syscalls:sys_enter_read, tracepoint:syscalls:sys_enter_write { @bytes[comm, str(args->filename)] = hist(args->count); }\n                                                                                       ~~~~~~~~~~~~~~~~~~\nstdin:3:88-106: ERROR: Struct/union of type 'struct _tracepoint_syscalls_sys_enter_write' does not contain a field named 'filename'\ntracepoint:syscalls:sys_enter_read, tracepoint:syscalls:sys_enter_write { @bytes[comm, str(args->filename)] = hist(args->count); }\n                                                                                       ~~~~~~~~~~~~~~~~~~\nstdin:3:88-107: ERROR: str() expects an integer or a pointer type as first argument (none provided)\ntracepoint:syscalls:sys_enter_read, tracepoint:syscalls:sys_enter_write { @bytes[comm, str(args->filename)] = hist(args->count); }\n                                                                                       ~~~~~~~~~~~~~~~~~~~\n", "returncode": 1, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\ntraces file read and write events and calculates the I/O size distribution for each file.\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces block device I/O and creates histograms of I/O size in bytes for each process.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing block device I/O... Hit Ctrl-C to end.\\n\");\n}\n\ntracepoint:block:block_rq_issue\n{\n\t@[args.comm] = hist(args.bytes);\n}\n\nEND\n{\n\tprintf(\"\\nI/O size (bytes) histograms by process name:\");\n}\n\n```\n\nexample: Write a BPF code that traces block device I/O latency by calculating the time difference between the start and completion of I/O operations and storing them in a histogram.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing block device I/O... Hit Ctrl-C to end.\\n\");\n}\n\nkprobe:blk_account_io_start,\nkprobe:__blk_account_io_start\n{\n\t@start[arg0] = nsecs;\n}\n\nkprobe:blk_account_io_done,\nkprobe:__blk_account_io_done\n/@start[arg0]/\n{\n\t@usecs = hist((nsecs - @start[arg0]) / 1000);\n\tdelete(@start[arg0]);\n}\n\nEND\n{\n\tclear(@start);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\ntraces file read and write events and calculates the I/O size distribution for each file.\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e #ifndef BPFTRACE_HAVE_BTF\n#include <linux/sched.h>\n\nstruct cfs_rq {\n\tstruct load_weight load;\n\tunsigned long runnable_weight;\n\tunsigned int nr_running;\n\tunsigned int h_nr_running;\n};\n\nBEGIN\n{\n\tprintf(\"Sampling run queue length at 99 Hertz... Hit Ctrl-C to end.\\n\");\n}\n\nprofile:hz:99\n{\n\t$task = (struct task_struct *)curtask;\n\t$my_q = (struct cfs_rq *)$task->se.cfs_rq;\n\t$len = $my_q->nr_running;\n\t$len = $len > 0 ? $len - 1 : 0;\n\t@runqlen = lhist($len, 0, 100, 1);\n}", "stdout": "", "stderr": "definitions.h:2:2: error: unterminated conditional directive\n", "returncode": 1, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nSummarizes CPU scheduler run queue length as a histogram\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that calculates and samples the length of the CPU scheduler run queue as a histogram, subtracting the currently running task from the total queue length.\n\n```\n#ifndef BPFTRACE_HAVE_BTF\n#include <linux/sched.h>\n\n// Until BTF is available, we'll need to declare some of this struct manually,\n// since it isn't available to be #included. This will need maintenance to match\n// your kernel version. It is from kernel/sched/sched.h:\nstruct cfs_rq {\n\tstruct load_weight load;\n\tunsigned long runnable_weight;\n\tunsigned int nr_running;\n\tunsigned int h_nr_running;\n};\n#endif\n\nBEGIN\n{\n\tprintf(\"Sampling run queue length at 99 Hertz... Hit Ctrl-C to end.\\n\");\n}\n\nprofile:hz:99\n{\n\t$task = (struct task_struct *)curtask;\n\t$my_q = (struct cfs_rq *)$task->se.cfs_rq;\n\t$len = $my_q->nr_running;\n\t$len = $len > 0 ? $len - 1 : 0;\t// subtract currently running task\n\t@runqlen = lhist($len, 0, 100, 1);\n}\n\n```\n\nexample: Write a BPF code that traces the CPU scheduler and records the latency of tasks in the run queue, using the sched_wakeup, sched_wakeup_new, and sched_switch tracepoints, and displays the latency as a histogram.\n\n```\n#include <linux/sched.h>\n\nBEGIN\n{\n\tprintf(\"Tracing CPU scheduler... Hit Ctrl-C to end.\\n\");\n}\n\ntracepoint:sched:sched_wakeup,\ntracepoint:sched:sched_wakeup_new\n{\n\t@qtime[args.pid] = nsecs;\n}\n\ntracepoint:sched:sched_switch\n{\n\tif (args.prev_state == TASK_RUNNING) {\n\t\t@qtime[args.prev_pid] = nsecs;\n\t}\n\n\t$ns = @qtime[args.next_pid];\n\tif ($ns) {\n\t\t@usecs = hist((nsecs - $ns) / 1000);\n\t}\n\tdelete(@qtime[args.next_pid]);\n}\n\nEND\n{\n\tclear(@qtime);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nSummarizes CPU scheduler run queue length as a histogram\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter_read,tracepoint:syscalls:sys_enter_write { @[comm] = sum(args->count); }", "stdout": "Attaching 2 probes...\n\n\n@[dockerd]: 17\n@[containerd]: 255\n@[multipathd]: 328\n@[systemd-logind]: 816\n@[sh]: 859\n@[rs:main Q:Reg]: 1567\n@[timeout]: 1664\n@[cpptools]: 8192\n@[systemd]: 16824\n@[irqbalance]: 17416\n@[fwupdmgr]: 30624\n@[vmtoolsd]: 48128\n@[systemd-journal]: 81980\n@[python3]: 551043\n@[sudo]: 917794\n@[node]: 4306553\n@[bpftrace]: 5625732\n@[sshd]: 11303733\n", "stderr": "", "returncode": 0, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\ntraces file read and write events and summarizes the Read bytes by process.\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces block device I/O and creates histograms of I/O size in bytes for each process.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing block device I/O... Hit Ctrl-C to end.\\n\");\n}\n\ntracepoint:block:block_rq_issue\n{\n\t@[args.comm] = hist(args.bytes);\n}\n\nEND\n{\n\tprintf(\"\\nI/O size (bytes) histograms by process name:\");\n}\n\n```\n\nexample: Write a BPF code that traces file system writeback events, including the time of occurrence, device information, reason, and duration. This code can help identify performance issues related to writeback events.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing writeback... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-9s %-8s %-8s %-16s %s\\n\", \"TIME\", \"DEVICE\", \"PAGES\",\n\t    \"REASON\", \"ms\");\n\n\t// see /sys/kernel/debug/tracing/events/writeback/writeback_start/format\n\t@reason[0] = \"background\";\n\t@reason[1] = \"vmscan\";\n\t@reason[2] = \"sync\";\n\t@reason[3] = \"periodic\";\n\t@reason[4] = \"laptop_timer\";\n\t@reason[5] = \"free_more_memory\";\n\t@reason[6] = \"fs_free_space\";\n\t@reason[7] = \"forker_thread\";\n}\n\ntracepoint:writeback:writeback_start\n{\n\t@start[args.sb_dev] = nsecs;\n}\n\ntracepoint:writeback:writeback_written\n{\n\t$sb_dev = args.sb_dev;\n\t$s = @start[$sb_dev];\n\tdelete(@start[$sb_dev]);\n\t$lat = $s ? (nsecs - $s) / 1000 : 0;\n\n\ttime(\"%H:%M:%S  \");\n\tprintf(\"%-8s %-8d %-16s %d.%03d\\n\", args.name,\n\t    args.nr_pages & 0xffff,\t// TODO: explain these bitmasks\n\t    @reason[args.reason & 0xffffffff],\n\t    $lat / 1000, $lat % 1000);\n}\n\nEND\n{\n\tclear(@reason);\n\tclear(@start);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\ntraces file read and write events and summarizes the Read bytes by process.\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN\n{\n  printf(\"%-10s %-6s %-16s %s\\n\", \"TIME(ms)\", \"PID\", \"COMM\", \"FUNC\");\n}\n\nuprobe:libpthread:pthread_create,\nuprobe:libc:pthread_create\n{\n  printf(\"%-10u %-6d %-16s %s\\n\", elapsed / 1e6, pid, comm, usym(arg2));\n}", "stdout": "Attaching 2 probes...\nTIME(ms)   PID    COMM             FUNC\n\n\n", "stderr": "", "returncode": 0, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nList new thread creation with pid and thread identifies\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that lists new thread creations, printing the time in milliseconds, PID, process name, and function name where the thread was created.\n\n```\nBEGIN\n{\n\tprintf(\"%-10s %-6s %-16s %s\\n\", \"TIME(ms)\", \"PID\", \"COMM\", \"FUNC\");\n}\n\nuprobe:libpthread:pthread_create,\nuprobe:libc:pthread_create\n{\n\tprintf(\"%-10u %-6d %-16s %s\\n\", elapsed / 1e6, pid, comm,\n\t    usym(arg2));\n}\n\n```\n\nexample: Write a BPF code that traces new processes and counts the number of new process creations per second using the eBPF technology.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing new processes... Hit Ctrl-C to end.\\n\");\n\n}\n\ntracepoint:sched:sched_process_fork\n{\n\t@ = count();\n}\n\ninterval:s:1\n{\n\ttime(\"%H:%M:%S PIDs/sec: \");\n\tprint(@);\n\tclear(@);\n}\n\nEND\n{\n\tclear(@);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nList new thread creation with pid and thread identifies\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:kvm_exit { @[args->exit_reason] = count(); }", "stdout": "", "stderr": "stdin:1:19-25: ERROR: The args builtin can only be used with tracepoint/kfunc/uprobeprobes (kprobe used here)\nkprobe:kvm_exit { @[args->exit_reason] = count(); }\n                  ~~~~~~\n", "returncode": 1, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nDisplay the exit_reason and its statistics of each vm exit in kvm\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces key VFS calls, counts the number of times each call is invoked, and prints a per-second summary.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing key VFS calls... Hit Ctrl-C to end.\\n\");\n\n}\n\nkprobe:vfs_read*,\nkprobe:vfs_write*,\nkprobe:vfs_fsync,\nkprobe:vfs_open,\nkprobe:vfs_create\n{\n\t@[func] = count();\n}\n\ninterval:s:1\n{\n\ttime();\n\tprint(@);\n\tclear(@);\n}\n\nEND\n{\n\tclear(@);\n}\n\n```\n\nexample: Write a BPF code that traces file system writeback events, including the time of occurrence, device information, reason, and duration. This code can help identify performance issues related to writeback events.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing writeback... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-9s %-8s %-8s %-16s %s\\n\", \"TIME\", \"DEVICE\", \"PAGES\",\n\t    \"REASON\", \"ms\");\n\n\t// see /sys/kernel/debug/tracing/events/writeback/writeback_start/format\n\t@reason[0] = \"background\";\n\t@reason[1] = \"vmscan\";\n\t@reason[2] = \"sync\";\n\t@reason[3] = \"periodic\";\n\t@reason[4] = \"laptop_timer\";\n\t@reason[5] = \"free_more_memory\";\n\t@reason[6] = \"fs_free_space\";\n\t@reason[7] = \"forker_thread\";\n}\n\ntracepoint:writeback:writeback_start\n{\n\t@start[args.sb_dev] = nsecs;\n}\n\ntracepoint:writeback:writeback_written\n{\n\t$sb_dev = args.sb_dev;\n\t$s = @start[$sb_dev];\n\tdelete(@start[$sb_dev]);\n\t$lat = $s ? (nsecs - $s) / 1000 : 0;\n\n\ttime(\"%H:%M:%S  \");\n\tprintf(\"%-8s %-8d %-16s %d.%03d\\n\", args.name,\n\t    args.nr_pages & 0xffff,\t// TODO: explain these bitmasks\n\t    @reason[args.reason & 0xffffffff],\n\t    $lat / 1000, $lat % 1000);\n}\n\nEND\n{\n\tclear(@reason);\n\tclear(@start);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nDisplay the exit_reason and its statistics of each vm exit in kvm\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:copy_net_ns { printf(\"Network namespace created: PID %d, COMM %s\", pid, comm); }\nkprobe:cleanup_net { printf(\"Network namespace deleted: PID %d, COMM %s\", pid, comm); }", "stdout": "Attaching 2 probes...\n\n\n", "stderr": "", "returncode": 0, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\ntracks the creation and deletion of network namespaces.\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces block device I/O latency by calculating the time difference between the start and completion of I/O operations and storing them in a histogram.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing block device I/O... Hit Ctrl-C to end.\\n\");\n}\n\nkprobe:blk_account_io_start,\nkprobe:__blk_account_io_start\n{\n\t@start[arg0] = nsecs;\n}\n\nkprobe:blk_account_io_done,\nkprobe:__blk_account_io_done\n/@start[arg0]/\n{\n\t@usecs = hist((nsecs - @start[arg0]) / 1000);\n\tdelete(@start[arg0]);\n}\n\nEND\n{\n\tclear(@start);\n}\n\n```\n\nexample: Write a BPF code that traces block I/O and measures the latency by initializing stacks, using kprobes and histogram.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing block I/O with init stacks. Hit Ctrl-C to end.\\n\");\n}\n\nkprobe:blk_account_io_start,\nkprobe:__blk_account_io_start\n{\n\t@reqstack[arg0] = kstack;\n\t@reqts[arg0] = nsecs;\n}\n\nkprobe:blk_start_request,\nkprobe:blk_mq_start_request\n/@reqts[arg0]/\n{\n\t@usecs[@reqstack[arg0]] = hist(nsecs - @reqts[arg0]);\n\tdelete(@reqstack[arg0]);\n\tdelete(@reqts[arg0]);\n}\n\nEND\n{\n\tclear(@reqstack); clear(@reqts);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\ntracks the creation and deletion of network namespaces.\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter_mount, tracepoint:syscalls:sys_enter_umount { printf(\"%s syscall by PID %d\", probe, pid); }", "stdout": "Attaching 2 probes...\n\n\n", "stderr": "", "returncode": 0, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nTrace mount and umount syscalls system-wide and print with pid\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces the syscalls statfs(), statx(), newstat(), and newlstat(), providing information about the PID, process name, error code, and path being accessed.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing stat syscalls... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-6s %-16s %3s %s\\n\", \"PID\", \"COMM\", \"ERR\", \"PATH\");\n}\n\ntracepoint:syscalls:sys_enter_statfs\n{\n\t@filename[tid] = args.pathname;\n}\n\ntracepoint:syscalls:sys_enter_statx,\ntracepoint:syscalls:sys_enter_newstat,\ntracepoint:syscalls:sys_enter_newlstat\n{\n\t@filename[tid] = args.filename;\n}\n\ntracepoint:syscalls:sys_exit_statfs,\ntracepoint:syscalls:sys_exit_statx,\ntracepoint:syscalls:sys_exit_newstat,\ntracepoint:syscalls:sys_exit_newlstat\n/@filename[tid]/\n{\n\t$ret = args.ret;\n\t$errno = $ret >= 0 ? 0 : - $ret;\n\n\tprintf(\"%-6d %-16s %3d %s\\n\", pid, comm, $errno,\n\t    str(@filename[tid]));\n\tdelete(@filename[tid]);\n}\n\nEND\n{\n\tclear(@filename);\n}\n\n```\n\nexample: Write a BPF code that traces sync-related system calls, such as sync(), syncfs(), fsync(), and fdatasync(), and prints the time, process ID, command, and event for each traced system call.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing sync syscalls... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-9s %-6s %-16s %s\\n\", \"TIME\", \"PID\", \"COMM\", \"EVENT\");\n}\n\ntracepoint:syscalls:sys_enter_sync,\ntracepoint:syscalls:sys_enter_syncfs,\ntracepoint:syscalls:sys_enter_fsync,\ntracepoint:syscalls:sys_enter_fdatasync,\ntracepoint:syscalls:sys_enter_sync_file_range*,\ntracepoint:syscalls:sys_enter_msync\n{\n\ttime(\"%H:%M:%S  \");\n\tprintf(\"%-6d %-16s %s\\n\", pid, comm, probe);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nTrace mount and umount syscalls system-wide and print with pid\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter_open, tracepoint:syscalls:sys_enter_openat { printf(\"%s opened file %s\", comm, str(args->filename)); }", "stdout": "Attaching 2 probes...\nnode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /home/yunwei/.vscode-server/data/User/workspaceStorage/68306157node opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlineirqbalance opened file /proc/interruptsirqbalance opened file /proc/statnode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /home/yunwei/.vscode-server/data/User/workspaceStorage/68306157node opened file /proc/meminfonode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /home/yunwei/.vscode-server/data/User/workspaceStorage/68306157node opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /home/yunwei/.vscode-server/data/User/workspaceStorage/68306157node opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/meminfonode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /home/yunwei/.vscode-server/data/User/workspaceStorage/68306157node opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /home/yunwei/.vscode-server/data/User/workspaceStorage/68306157node opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /home/yunwei/.vscode-server/data/User/workspaceStorage/68306157node opened file /proc/meminfonode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /home/yunwei/.vscode-server/data/User/workspaceStorage/68306157node opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /home/yunwei/.vscode-server/data/User/workspaceStorage/68306157node opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/meminfonode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /home/yunwei/.vscode-server/data/User/workspaceStorage/68306157node opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /home/yunwei/.vscode-server/data/User/workspaceStorage/68306157node opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlineirqbalance opened file /proc/interruptsirqbalance opened file /proc/statnode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /home/yunwei/.vscode-server/data/User/workspaceStorage/68306157node opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/meminfonode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinesystemd opened file /proc/561/cgroupsystemd opened file /proc/562/cgroupsystemd opened file /proc/450/cgroupnode opened file /home/yunwei/.vscode-server/data/User/workspaceStorage/68306157node opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /home/yunwei/.vscode-server/data/User/workspaceStorage/68306157node opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/meminfonode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /home/yunwei/OpenCopilot/.git/HEADnode opened file /home/yunwei/OpenCopilot/.git/confignode opened file /home/yunwei/OpenCopilot/.gitmodulesnode opened file /home/yunwei/OpenCopilot/.git/REBASE_HEADnode opened file /home/yunwei/OpenCopilot/.git/MERGE_MSGnode opened file /home/yunwei/OpenCopilot/.git/SQUASH_MSGnode opened file /home/yunweinode opened file /home/yunwei/.sshnode opened file /home/yunwei/OpenCopilotnode opened file node opened file /home/yunwei/OpenCopilot/evaluationnode opened file /home/yunwei/OpenCopilot/venvnode opened file /home/yunwei/OpenCopilot/evaluation/demosnode opened file /home/yunwei/OpenCopilot/evaluation/variabiltynode opened file /home/yunwei/OpenCopilot/venv/binnode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinegit opened file /etc/ld.so.cachegit opened file /lib/x86_64-linux-gnu/libpcre2-8.so.0git opened file /lib/x86_64-linux-gnu/libz.so.1git opened file /lib/x86_64-linux-gnu/libc.so.6git opened file git opened file /usr/lib/locale/locale-archivegit opened file /etc/gitconfiggit opened file /home/yunwei/.gitconfiggit opened file /home/yunwei/OpenCopilot/.git/HEADgit opened file .git/configgit opened file /etc/gitconfiggit opened file /home/yunwei/.gitconfiggit opened file .git/confignode opened file git opened file /etc/ld.so.cachegit opened file /lib/x86_64-linux-gnu/libpcre2-8.so.0git opened file /lib/x86_64-linux-gnu/libz.so.1git opened file /lib/x86_64-linux-gnu/libc.so.6git opened file git opened file /usr/lib/locale/locale-archivegit opened file /etc/gitconfiggit opened file /home/yunwei/.gitconfiggit opened file /home/yunwei/OpenCopilot/.git/HEADgit opened file .git/configgit opened file /etc/gitconfiggit opened file /home/yunwei/.gitconfiggit opened file .git/configgit opened file /etc/gitconfiggit opened file /home/yunwei/.gitconfiggit opened file .git/configgit opened file .git/refs/git opened file .git/refs/heads/git opened file .git/refs/heads/maingit opened file .git/packed-refsgit opened file .git/refs/remotes/git opened file .git/HEADgit opened file .git/refs/heads/maingit opened file .git/refs/remotes/origin/maingit opened file .git/refs/remotes/origin/maingit opened file .git/objects/info/alternatesgit opened file .git/objects/pack/multi-pack-indexgit opened file .git/objects/packgit opened file .git/objects/pack/pack-d8b4db0d47410e3b1e0601b469a86848bc775e5fgit opened file .git/objects/91/a826efe6eff2a387d9b66f3f46bbc405f8ea72git opened file .git/objects/91/a826efe6eff2a387d9b66f3f46bbc405f8ea72git opened file .git/info/graftsgit opened file .git/shallowgit opened file .git/objects/info/commit-graphgit opened file .git/objects/info/commit-graphs/commit-graph-chaingit opened file .git/refs/heads/mainnode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file node opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinegit opened file /etc/ld.so.cachegit opened file /lib/x86_64-linux-gnu/libpcre2-8.so.0git opened file /lib/x86_64-linux-gnu/libz.so.1git opened file /lib/x86_64-linux-gnu/libc.so.6git opened file git opened file /usr/lib/locale/locale-archivegit opened file /etc/gitconfiggit opened file /home/yunwei/.gitconfignode opened file /home/yunwei/.vscode-server/data/User/workspaceStorage/68306157git opened file /home/yunwei/OpenCopilot/.git/HEADgit opened file .git/configgit opened file /etc/gitconfiggit opened file /home/yunwei/.gitconfiggit opened file .git/configgit opened file /etc/gitconfiggit opened file /home/yunwei/.gitconfiggit opened file .git/configgit opened file .git/HEADgit opened file .git/refs/heads/maingit opened file .git/packed-refsgit opened file .git/indexgit opened file /usr/share/locale/locale.aliasgit opened file /usr/share/locale/en_US.UTF-8/LC_MESSAGES/git.mogit opened file /usr/share/locale/en_US.utf8/LC_MESSAGES/git.mogit opened file /usr/share/locale/en_US/LC_MESSAGES/git.mogit opened file /usr/share/locale/en.UTF-8/LC_MESSAGES/git.mogit opened file /usr/share/locale/en.utf8/LC_MESSAGES/git.mogit opened file /usr/share/locale/en/LC_MESSAGES/git.mogit opened file /usr/share/locale-langpack/en_US.UTF-8/LC_MESSAGES/git.mogit opened file /usr/share/locale-langpack/en_US.utf8/LC_MESSAGES/git.mogit opened file /usr/share/locale-langpack/en_US/LC_MESSAGES/git.mogit opened file /usr/share/locale-langpack/en.UTF-8/LC_MESSAGES/git.mogit opened file /usr/share/locale-langpack/en.utf8/LC_MESSAGES/git.mogit opened file /usr/share/locale-langpack/en/LC_MESSAGES/git.mogit opened file .git/HEADgit opened file .git/refs/heads/maingit opened file .git/HEADgit opened file .git/refs/heads/maingit opened file .git/refs/git opened file .git/info/graftsgit opened file .git/shallowgit opened file .git/objects/info/alternatesgit opened file .git/objects/info/commit-graphgit opened file .git/objects/info/commit-graphs/commit-graph-chaingit opened file .git/objects/pack/multi-pack-indexgit opened file .git/objects/packgit opened file .git/objects/pack/pack-d8b4db0d47410e3b1e0601b469a86848bc775e5fgit opened file .git/objects/91/a826efe6eff2a387d9b66f3f46bbc405f8ea72git opened file .git/objects/91/a826efe6eff2a387d9b66f3f46bbc405f8ea72git opened file .git/objects/c8/817ff56a3c4926c92944c2ed1c2e41e9f2d9f8git opened file .git/info/excludegit opened file .git/info/excludegit opened file .git opened file .gitignoregit opened file ken/git opened file ken/.gitignoregit opened file ken/z3_vector_db/git opened file ken/z3_vector_db/.gitignoregit opened file ken/z3_vector_db/bpftrace/git opened file ken/z3_vector_db/data/git opened file ken/z3_vector_db/seahorn/git opened file ken/z3_vector_db/seahorn/.gitignoregit opened file ken/z3_vector_db/seahorn/bin/git opened file ken/z3_vector_db/seahorn/lib/git opened file ken/z3_vector_db/seahorn/lib/.gitignoregit opened file ken/z3_vector_db/seahorn/lib/seapy/git opened file ken/z3_vector_db/seahorn/lib/seapy/.gitignoregit opened file ken/z3_vector_db/seahorn/lib/seapy/sea/git opened file ken/z3_vector_db/seahorn/lib/seapy/term/git opened file ui/git opened file ui/.gitignoregit opened file ui/css/git opened file ui/js/git opened file examples/git opened file evaluation/git opened file evaluation/.gitignoregit opened file evaluation/records/git opened file evaluation/variabilty/git opened file evaluation/variabilty/.gitignoregit opened file evaluation/performace/git opened file evaluation/kerneleval/git opened file evaluation/demos/git opened file dataset/git opened file dataset/.gitignoregit opened file dataset/bpftrace/git opened file dataset/posts/git opened file dataset/blog-post-db/git opened file dataset/blog-post-db/.gitignoregit opened file dataset/blog-post-db/bpftrace/git opened file dataset/blog-post-db/data/git opened file dataset/blog-post-db/posts/git opened file dataset/blog-post-db/include/git opened file dataset/blog-post-db/include/.gitignoregit opened file dataset/blog-post-db/include/powerpc/git opened file dataset/blog-post-db/include/x86/git opened file dataset/blog-post-db/include/riscv/git opened file dataset/blog-post-db/include/arm64/git opened file dataset/blog-post-db/include/arm/git opened file dataset/blog-post-db/include/loongarch/git opened file dataset/libbpf/git opened file front-end/git opened file front-end/.gitignoregit opened file front-end/components/git opened file front-end/public/git opened file front-end/pages/git opened file front-end/pages/.gitignoregit opened file front-end/pages/api/git opened file front-end/styles/git opened file front-end/__tests__/git opened file front-end/.github/git opened file front-end/.github/.gitignoregit opened file front-end/.github/workflows/git opened file front-end/utils/git opened file .git/sequencer/todonode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /home/yunwei/.vscode-server/data/User/workspaceStorage/68306157node opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinesudo opened file /var/run/utmpsudo opened file /var/run/utmpsudo opened file /etc/login.defssystemd-journal opened file /proc/31483/commsystemd-journal opened file /proc/31483/cmdlinesystemd-journal opened file /proc/31483/statussystemd-journal opened file /proc/31483/attr/currentsystemd-journal opened file /proc/31483/sessionidsystemd-journal opened file /proc/31483/loginuidsystemd-journal opened file /proc/31483/cgroupsystemd-journal opened file /run/systemd/units/log-extra-fields:session-1.scopesystemd-journal opened file /run/log/journal/67922be613574cad92bec8b012036c37/system.journasudo opened file /etc/login.defssystemd-logind opened file /var/run/utmpsystemd opened file /proc/31484/commsystemd opened file /proc/31484/commsystemd opened file /proc/31484/cgroupsystemd opened file /sys/fs/cgroup/user.slice/user-1000.slice/session-1.scope/memorpython3 opened file vector_db_with_example.jsonpython3 opened file data_save/vector_db.faisspython3 opened file data_save/vector_db.pklnode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /home/yunwei/OpenCopilot/evaluation/vector_db_with_example.jsonnode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/meminfonode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinevmtoolsd opened file /proc/meminfovmtoolsd opened file /proc/vmstatvmtoolsd opened file /proc/statvmtoolsd opened file /proc/zoneinfovmtoolsd opened file /proc/uptimevmtoolsd opened file /proc/diskstatsnode opened file /home/yunwei/.vscode-server/data/User/workspaceStorage/68306157node opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /home/yunwei/.vscode-server/data/User/workspaceStorage/68306157node opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /home/yunwei/.vscode-server/data/User/workspaceStorage/68306157node opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/meminfonode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinevmtoolsd opened file /etc/mtabvmtoolsd opened file /proc/devicesvmtoolsd opened file /sys/class/block/sda2/../device/../../../classvmtoolsd opened file /sys/class/block/sda2/../device/../../../labelvmtoolsd opened file /run/systemd/resolve/resolv.confvmtoolsd opened file /proc/net/routevmtoolsd opened file /proc/net/ipv6_routevmtoolsd opened file /proc/uptimenode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file /proc/30931/cmdlinenode opened file /proc/31190/cmdlinenode opened file /home/yunwei/OpenCopilot/.git/HEADnode opened file /home/yunwei/OpenCopilot/.git/confignode opened file /home/yunwei/OpenCopilot/.gitmodulesnode opened file /home/yunwei/OpenCopilot/.git/REBASE_HEADnode opened file /home/yunwei/OpenCopilot/.git/MERGE_MSGnode opened file /home/yunwei/OpenCopilot/.git/SQUASH_MSGnode opened file /proc/17505/cmdlinenode opened file /proc/14828/cmdlinenode opened file /proc/12050/cmdlinenode opened file git opened file /etc/ld.so.cachegit opened file /lib/x86_64-linux-gnu/libpcre2-8.so.0git opened file /lib/x86_64-linux-gnu/libz.so.1git opened file /lib/x86_64-linux-gnu/libc.so.6node opened file /home/yunwei/.vscode-server/data/User/workspaceStorage/68306157git opened file git opened file /usr/lib/locale/locale-archivegit opened file /etc/gitconfiggit opened file /home/yunwei/.gitconfiggit opened file /home/yunwei/OpenCopilot/.git/HEADgit opened file .git/configgit opened file /etc/gitconfiggit opened file /home/yunwei/.gitconfiggit opened file .git/config\n\n", "stderr": "", "returncode": 0, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nPrint files opened events by process\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces open() and openat() syscalls, displaying the process ID, command name, file descriptor, error code, and file path.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing open syscalls... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-6s %-16s %4s %3s %s\\n\", \"PID\", \"COMM\", \"FD\", \"ERR\", \"PATH\");\n}\n\ntracepoint:syscalls:sys_enter_open,\ntracepoint:syscalls:sys_enter_openat\n{\n\t@filename[tid] = args.filename;\n}\n\ntracepoint:syscalls:sys_exit_open,\ntracepoint:syscalls:sys_exit_openat\n/@filename[tid]/\n{\n\t$ret = args.ret;\n\t$fd = $ret >= 0 ? $ret : -1;\n\t$errno = $ret >= 0 ? 0 : - $ret;\n\n\tprintf(\"%-6d %-16s %4d %3d %s\\n\", pid, comm, $fd, $errno,\n\t    str(@filename[tid]));\n\tdelete(@filename[tid]);\n}\n\nEND\n{\n\tclear(@filename);\n}\n\n```\n\nexample: Write a BPF code that traces new processes and counts the number of new process creations per second using the eBPF technology.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing new processes... Hit Ctrl-C to end.\\n\");\n\n}\n\ntracepoint:sched:sched_process_fork\n{\n\t@ = count();\n}\n\ninterval:s:1\n{\n\ttime(\"%H:%M:%S PIDs/sec: \");\n\tprint(@);\n\tclear(@);\n}\n\nEND\n{\n\tclear(@);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nPrint files opened events by process\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:bpf:bpf_jit_compile { printf(\"BPF JIT compile event detected. PID: %d, COMM: %s\", pid, comm); }", "stdout": "", "stderr": "stdin:1:1-31: ERROR: tracepoint not found: bpf:bpf_jit_compile\ntracepoint:bpf:bpf_jit_compile { printf(\"BPF JIT compile event detected. PID: %d, COMM: %s\", pid, comm); }\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n", "returncode": 1, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nTrace bpf jit compile events\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces new processes and counts the number of new process creations per second using the eBPF technology.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing new processes... Hit Ctrl-C to end.\\n\");\n\n}\n\ntracepoint:sched:sched_process_fork\n{\n\t@ = count();\n}\n\ninterval:s:1\n{\n\ttime(\"%H:%M:%S PIDs/sec: \");\n\tprint(@);\n\tclear(@);\n}\n\nEND\n{\n\tclear(@);\n}\n\n```\n\nexample: Write a BPF code that traces md flush events and displays the time, process ID, command, and device information of each event.\n\n```\n#ifndef BPFTRACE_HAVE_BTF\n#include <linux/genhd.h>\n#include <linux/bio.h>\n#endif\n\nBEGIN\n{\n\tprintf(\"Tracing md flush events... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-8s %-6s %-16s %s\\n\", \"TIME\", \"PID\", \"COMM\", \"DEVICE\");\n}\n\nkprobe:md_flush_request\n{\n\ttime(\"%H:%M:%S \");\n\tprintf(\"%-6d %-16s %s\\n\", pid, comm,\n\t    ((struct bio *)arg1)->bi_bdev->bd_disk->disk_name);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nTrace bpf jit compile events\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e hardware:cache-misses:1000000 { @[comm] = count(); }", "stdout": "Attaching 1 probe...\n", "stderr": "perf_event_open failed: No such file or directory\nERROR: Error attaching probe: hardware:cache-misses:1000000\n", "returncode": 255, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nCount LLC cache misses by process name\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces new processes and counts the number of new process creations per second using the eBPF technology.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing new processes... Hit Ctrl-C to end.\\n\");\n\n}\n\ntracepoint:sched:sched_process_fork\n{\n\t@ = count();\n}\n\ninterval:s:1\n{\n\ttime(\"%H:%M:%S PIDs/sec: \");\n\tprint(@);\n\tclear(@);\n}\n\nEND\n{\n\tclear(@);\n}\n\n```\n\nexample: Write a BPF code that traces directory entry cache (dcache) lookups in the Linux kernel. The code uses kernel dynamic tracing of functions lookup_fast() and d_lookup() to capture lookup information and prints the time, process ID, command, and file name for each lookup event.\n\n```\n#ifndef BPFTRACE_HAVE_BTF\n#include <linux/fs.h>\n#include <linux/sched.h>\n\n// from fs/namei.c:\nstruct nameidata {\n        struct path     path;\n        struct qstr     last;\n        // [...]\n};\n#endif\n\nBEGIN\n{\n\tprintf(\"Tracing dcache lookups... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-8s %-6s %-16s %1s %s\\n\", \"TIME\", \"PID\", \"COMM\", \"T\", \"FILE\");\n}\n\n// comment out this block to avoid showing hits:\nkprobe:lookup_fast,\nkprobe:lookup_fast.constprop.*\n{\n\t$nd = (struct nameidata *)arg0;\n\tprintf(\"%-8d %-6d %-16s R %s\\n\", elapsed / 1e6, pid, comm,\n\t    str($nd->last.name));\n}\n\nkprobe:d_lookup\n{\n\t$name = (struct qstr *)arg1;\n\t@fname[tid] = $name->name;\n}\n\nkretprobe:d_lookup\n/@fname[tid]/\n{\n\tprintf(\"%-8d %-6d %-16s M %s\\n\", elapsed / 1e6, pid, comm,\n\t    str(@fname[tid]));\n\tdelete(@fname[tid]);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nCount LLC cache misses by process name\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e software:faults:1 { @[comm] = count(); }", "stdout": "Attaching 1 probe...\n\n\n@[timeout]: 3\n@[systemd]: 4\n@[systemd-journal]: 13\n@[node]: 1526\n", "stderr": "", "returncode": 0, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nCount page faults events by process\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that monitors the swapins by process.\n\n```\nkprobe:swap_readpage\n{\n        @[comm, pid] = count();\n}\n\ninterval:s:1\n{\n        time();\n        print(@);\n        clear(@);\n}\n\n```\n\nexample: Write a BPF code that traces new processes and counts the number of new process creations per second using the eBPF technology.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing new processes... Hit Ctrl-C to end.\\n\");\n\n}\n\ntracepoint:sched:sched_process_fork\n{\n\t@ = count();\n}\n\ninterval:s:1\n{\n\ttime(\"%H:%M:%S PIDs/sec: \");\n\tprint(@);\n\tclear(@);\n}\n\nEND\n{\n\tclear(@);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nCount page faults events by process\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e #include <linux/blkdev.h>\n\nBEGIN\n{\n  printf(\"%12s %6s %6s %10s %s\\n\", \"TIME(ms)\", \"PID\", \"COMM\", \"LAT(ms)\", \"DISK\");\n}\n\nkprobe:blk_start_request\n{\n  @start[tid,pid,comm] = nsecs;\n  @disk[tid,pid,comm] = ((struct request *)arg0)->rq_disk->disk_name;\n}\n\nkprobe:blk_mq_start_request\n{\n  @start[tid,pid,comm] = nsecs;\n  @disk[tid,pid,comm] = ((struct request *)arg0)->rq_disk->disk_name;\n}\n\nkretprobe:blk_account_io_completion\n/@start[tid,pid,comm]/\n{\n  $lat = (nsecs - @start[tid,pid,comm]) / 1000000;\n  printf(\"%12u %6d %6s %10d %s\\n\", elapsed / 1000, pid, comm, $lat, @disk[tid,pid,comm]);\n  delete(@start[tid,pid,comm]);\n  delete(@disk[tid,pid,comm]);\n}\n\nEND\n{\n  clear(@start);\n  clear(@disk);\n}", "stdout": "", "stderr": "/lib/modules/6.2.0-33-generic/build/include/linux/compiler-clang.h:41:9: warning: '__HAVE_BUILTIN_BSWAP32__' macro redefined [-Wmacro-redefined]\nnote: previous definition is here\n/lib/modules/6.2.0-33-generic/build/include/linux/compiler-clang.h:42:9: warning: '__HAVE_BUILTIN_BSWAP64__' macro redefined [-Wmacro-redefined]\nnote: previous definition is here\n/lib/modules/6.2.0-33-generic/build/include/linux/compiler-clang.h:43:9: warning: '__HAVE_BUILTIN_BSWAP16__' macro redefined [-Wmacro-redefined]\nnote: previous definition is here\n/lib/modules/6.2.0-33-generic/build/include/linux/kasan-checks.h:24:9: error: use of undeclared identifier 'true'\n/lib/modules/6.2.0-33-generic/build/include/linux/kasan-checks.h:28:9: error: use of undeclared identifier 'true'\n/lib/modules/6.2.0-33-generic/build/include/linux/kasan-checks.h:42:9: error: use of undeclared identifier 'true'\n/lib/modules/6.2.0-33-generic/build/include/linux/kasan-checks.h:46:9: error: use of undeclared identifier 'true'\n/lib/modules/6.2.0-33-generic/build/arch/x86/include/asm/ibt.h:101:47: error: use of undeclared identifier 'false'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:21:9: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:21:9: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:21:9: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:21:9: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:36:2: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:36:2: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:36:2: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:36:2: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:41:2: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:41:2: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:41:2: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:41:2: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:56:9: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:56:9: error: use of undeclared identifier 'uintptr_t'\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n", "returncode": 1, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nTrace block device I/O with PID and latency\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces block I/O operations and displays the latency for each operation, along with the disk, process, and PID associated with it.\n\n```\n#ifndef BPFTRACE_HAVE_BTF\n#include <linux/blkdev.h>\n#include <linux/blk-mq.h>\n#endif\n\nBEGIN\n{\n\tprintf(\"%-12s %-7s %-16s %-6s %7s\\n\", \"TIME(ms)\", \"DISK\", \"COMM\", \"PID\", \"LAT(ms)\");\n}\n\nkprobe:blk_account_io_start,\nkprobe:__blk_account_io_start\n{\n\t@start[arg0] = nsecs;\n\t@iopid[arg0] = pid;\n\t@iocomm[arg0] = comm;\n\t@disk[arg0] = ((struct request *)arg0)->q->disk->disk_name;\n}\n\nkprobe:blk_account_io_done,\nkprobe:__blk_account_io_done\n/@start[arg0] != 0 && @iopid[arg0] != 0 && @iocomm[arg0] != \"\"/\n\n{\n\t$now = nsecs;\n\tprintf(\"%-12u %-7s %-16s %-6d %7d\\n\",\n\t    elapsed / 1e6, @disk[arg0], @iocomm[arg0], @iopid[arg0],\n\t    ($now - @start[arg0]) / 1e6);\n\n\tdelete(@start[arg0]);\n\tdelete(@iopid[arg0]);\n\tdelete(@iocomm[arg0]);\n\tdelete(@disk[arg0]);\n}\n\nEND\n{\n\tclear(@start);\n\tclear(@iopid);\n\tclear(@iocomm);\n\tclear(@disk);\n}\n\n```\n\nexample: Write a BPF code that traces block device I/O latency by calculating the time difference between the start and completion of I/O operations and storing them in a histogram.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing block device I/O... Hit Ctrl-C to end.\\n\");\n}\n\nkprobe:blk_account_io_start,\nkprobe:__blk_account_io_start\n{\n\t@start[arg0] = nsecs;\n}\n\nkprobe:blk_account_io_done,\nkprobe:__blk_account_io_done\n/@start[arg0]/\n{\n\t@usecs = hist((nsecs - @start[arg0]) / 1000);\n\tdelete(@start[arg0]);\n}\n\nEND\n{\n\tclear(@start);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nTrace block device I/O with PID and latency\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN { printf(\"Tracing bash commands and their exit codes... Hit Ctrl-C to end.\\n\"); printf(\"%-9s %-6s %-6s %s\\n\", \"TIME\", \"PID\", \"EXIT\", \"COMMAND\"); } uretprobe:/bin/bash:readline { @command[pid] = str(retval); } uprobe:/bin/bash:exit_shell { time(\"%H:%M:%S  \"); printf(\"%-6d %-6d %s\\n\", pid, arg0, @command[pid]); delete(@command[pid]); }", "stdout": "Attaching 3 probes...\nTracing bash commands and their exit codes... Hit Ctrl-C to end.\nTIME      PID    EXIT   COMMAND\n\n\n\n", "stderr": "", "returncode": 0, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nPrint entered bash commands system wide and the exit code\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that counts the number of system calls and the number of processes. It also prints the top 10 system call IDs and the top 10 processes at the end.\n\n```\nBEGIN\n{\n\tprintf(\"Counting syscalls... Hit Ctrl-C to end.\\n\");\n\t// ausyscall --dump | awk 'NR > 1 { printf(\"\\t@sysname[%d] = \\\"%s\\\";\\n\", $1, $2); }'\n}\n\ntracepoint:raw_syscalls:sys_enter\n{\n\t@syscall[args.id] = count();\n\t@process[comm] = count();\n}\n\nEND\n{\n\tprintf(\"\\nTop 10 syscalls IDs:\\n\");\n\tprint(@syscall, 10);\n\tclear(@syscall);\n\n\tprintf(\"\\nTop 10 processes:\\n\");\n\tprint(@process, 10);\n\tclear(@process);\n}\n\n```\n\nexample: Write a BPF code that traces the readline function in the /bin/bash program and prints the timestamp, process ID, and command entered by the user.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing bash commands... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-9s %-6s %s\\n\", \"TIME\", \"PID\", \"COMMAND\");\n}\n\nuretprobe:/bin/bash:readline\n{\n\ttime(\"%H:%M:%S  \");\n\tprintf(\"%-6d %s\\n\", pid, str(retval));\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nPrint entered bash commands system wide and the exit code\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN\n{\n\tprintf(\"Tracing BTRFS operation latency... Hit Ctrl-C to end.\\n\");\n}\n\nkprobe:btrfs_file_read_iter,\nkprobe:btrfs_file_write_iter,\nkprobe:btrfs_file_open,\nkprobe:btrfs_sync_file\n{\n\t@start[tid] = nsecs;\n\t@name[tid] = func;\n}\n\nkretprobe:btrfs_file_read_iter,\nkretprobe:btrfs_file_write_iter,\nkretprobe:btrfs_file_open,\nkretprobe:btrfs_sync_file\n/@start[tid]/\n{\n\t@us[@name[tid]] = hist((nsecs - @start[tid]) / 1000);\n\tdelete(@start[tid]);\n\tdelete(@name[tid]);\n}\n\nEND\n{\n\tclear(@start);\n\tclear(@name);\n}\n", "stdout": "Attaching 10 probes...\nTracing BTRFS operation latency... Hit Ctrl-C to end.\n\n\n\n\n\n", "stderr": "", "returncode": 0, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nTrace btrfs operations system-wide\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces the latency of four common XFS file system operations (read, write, open, and fsync) and prints a summary of the operation latency, using the bpftrace and eBPF tools.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing XFS operation latency... Hit Ctrl-C to end.\\n\");\n}\n\nkprobe:xfs_file_read_iter,\nkprobe:xfs_file_write_iter,\nkprobe:xfs_file_open,\nkprobe:xfs_file_fsync\n{\n\t@start[tid] = nsecs;\n\t@name[tid] = func;\n}\n\nkretprobe:xfs_file_read_iter,\nkretprobe:xfs_file_write_iter,\nkretprobe:xfs_file_open,\nkretprobe:xfs_file_fsync\n/@start[tid]/\n{\n\t@us[@name[tid]] = hist((nsecs - @start[tid]) / 1000);\n\tdelete(@start[tid]);\n\tdelete(@name[tid]);\n}\n\nEND\n{\n\tclear(@start);\n\tclear(@name);\n}\n\n```\n\nexample: Write a BPF code that traces sync-related system calls, such as sync(), syncfs(), fsync(), and fdatasync(), and prints the time, process ID, command, and event for each traced system call.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing sync syscalls... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-9s %-6s %-16s %s\\n\", \"TIME\", \"PID\", \"COMM\", \"EVENT\");\n}\n\ntracepoint:syscalls:sys_enter_sync,\ntracepoint:syscalls:sys_enter_syncfs,\ntracepoint:syscalls:sys_enter_fsync,\ntracepoint:syscalls:sys_enter_fdatasync,\ntracepoint:syscalls:sys_enter_sync_file_range*,\ntracepoint:syscalls:sys_enter_msync\n{\n\ttime(\"%H:%M:%S  \");\n\tprintf(\"%-6d %-16s %s\\n\", pid, comm, probe);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nTrace btrfs operations system-wide\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e #include <linux/dcache.h>\n#include <linux/sched.h>\n\nBEGIN\n{\n    printf(\"Tracing dcache lookups... Hit Ctrl-C to end.\\n\");\n    printf(\"%-8s %-6s %-16s %s\\n\", \"TIME\", \"PID\", \"COMM\", \"FILE\");\n}\n\nkprobe:lookup_fast,\nkprobe:lookup_fast.constprop.*\n{\n    $nd = (struct nameidata *)arg0;\n    printf(\"%-8d %-6d %-16s %s\\n\", elapsed / 1e6, pid, comm, str($nd->last.name));\n}\n\nkprobe:d_lookup\n{\n    $name = (struct qstr *)arg1;\n    @fname[tid] = $name->name;\n}\n\nkretprobe:d_lookup\n/@fname[tid]/\n{\n    printf(\"%-8d %-6d %-16s %s\\n\", elapsed / 1e6, pid, comm, str(@fname[tid]));\n    delete(@fname[tid]);\n}", "stdout": "Attaching 4 probes...\nTracing dcache lookups... Hit Ctrl-C to end.\nTIME     PID    COMM             FILE\n16       572    vmtoolsd         etc/vmware-tools/tools-global.conf\n16       572    vmtoolsd         vmware-tools/tools-global.conf\n16       572    vmtoolsd         tools-global.conf\n16       572    vmtoolsd         etc/vmware-tools/tools.conf\n16       572    vmtoolsd         vmware-tools/tools.conf\n16       572    vmtoolsd         tools.conf\n188      1720   node             proc/14828/cmdline\n188      1720   node             14828/cmdline\n188      1720   node             cmdline\n188      1720   node             proc/12050/cmdline\n188      1720   node             12050/cmdline\n188      1720   node             cmdline\n188      1720   node             proc/30931/cmdline\n188      1720   node             30931/cmdline\n188      1720   node             cmdline\n188      1720   node             proc/31190/cmdline\n188      1720   node             31190/cmdline\n188      1720   node             cmdline\n188      1720   node             proc/17505/cmdline\n188      1720   node             17505/cmdline\n188      1720   node             cmdline\n266      10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n266      10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n266      10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n266      10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n266      10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n266      10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n266      10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n266      10290  node             vscode.lock\n266      10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n266      10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n266      10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n266      10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n266      10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n266      10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n266      10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n266      10290  node             vscode.lock\n266      10290  node             home\n266      10290  node             home/yunwei\n266      10290  node             yunwei\n266      10290  node             home/yunwei/.vscode-server\n266      10290  node             yunwei/.vscode-server\n266      10290  node             .vscode-server\n266      10290  node             home/yunwei/.vscode-server/data\n266      10290  node             yunwei/.vscode-server/data\n266      10290  node             .vscode-server/data\n266      10290  node             data\n266      10290  node             home/yunwei/.vscode-server/data/User\n266      10290  node             yunwei/.vscode-server/data/User\n266      10290  node             .vscode-server/data/User\n266      10290  node             data/User\n266      10290  node             User\n266      10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n266      10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n266      10290  node             .vscode-server/data/User/workspaceStorage\n266      10290  node             data/User/workspaceStorage\n266      10290  node             User/workspaceStorage\n266      10290  node             workspaceStorage\n266      10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n266      10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n266      10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n266      10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n266      10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n266      10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n266      10290  node             683061573fc2bafa947b4d87342b0cd1\n266      10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n266      10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n266      10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n266      10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n266      10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n266      10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n266      10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n266      10290  node             vscode.lock\n266      10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n266      10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n266      10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n266      10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n266      10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n266      10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n266      10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n266      10290  node             vscode.lock\n266      10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n266      10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n266      10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n266      10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n266      10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n266      10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n266      10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n266      10290  node             vscode.lock\n266      10290  node             home\n266      10290  node             home/yunwei\n266      10290  node             yunwei\n266      10290  node             home/yunwei/.vscode-server\n266      10290  node             yunwei/.vscode-server\n266      10290  node             .vscode-server\n266      10290  node             home/yunwei/.vscode-server/data\n266      10290  node             yunwei/.vscode-server/data\n266      10290  node             .vscode-server/data\n266      10290  node             data\n266      10290  node             home/yunwei/.vscode-server/data/User\n266      10290  node             yunwei/.vscode-server/data/User\n266      10290  node             .vscode-server/data/User\n266      10290  node             data/User\n266      10290  node             User\n266      10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n266      10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n266      10290  node             .vscode-server/data/User/workspaceStorage\n266      10290  node             data/User/workspaceStorage\n266      10290  node             User/workspaceStorage\n266      10290  node             workspaceStorage\n266      10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n266      10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n266      10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n266      10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n266      10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n266      10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n266      10290  node             683061573fc2bafa947b4d87342b0cd1\n266      10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n266      10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n266      10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n266      10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n266      10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n266      10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n266      10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n266      10290  node             vscode.lock\n266      10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n266      10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n266      10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n266      10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n266      10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n266      10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n266      10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n266      10290  node             vscode.lock\n266      10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n266      10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n266      10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n266      10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n266      10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n266      10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n266      10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n266      10290  node             vscode.lock\n266      10290  node             home\n266      10290  node             home/yunwei\n266      10290  node             yunwei\n266      10290  node             home/yunwei/.vscode-server\n266      10290  node             yunwei/.vscode-server\n266      10290  node             .vscode-server\n266      10290  node             home/yunwei/.vscode-server/data\n266      10290  node             yunwei/.vscode-server/data\n266      10290  node             .vscode-server/data\n266      10290  node             data\n266      10290  node             home/yunwei/.vscode-server/data/User\n266      10290  node             yunwei/.vscode-server/data/User\n266      10290  node             .vscode-server/data/User\n266      10290  node             data/User\n266      10290  node             User\n266      10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n266      10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n266      10290  node             .vscode-server/data/User/workspaceStorage\n266      10290  node             data/User/workspaceStorage\n266      10290  node             User/workspaceStorage\n266      10290  node             workspaceStorage\n266      10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n266      10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n266      10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n266      10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n266      10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n266      10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n266      10290  node             683061573fc2bafa947b4d87342b0cd1\n266      10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n266      10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n266      10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n266      10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n266      10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n266      10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n266      10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n266      10290  node             vscode.lock\n266      10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n266      10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n266      10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n266      10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n266      10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n266      10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n266      10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n266      10290  node             vscode.lock\n266      10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n266      10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n266      10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n266      10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n266      10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n266      10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n266      10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n266      10290  node             vscode.lock\n391      1720   node             proc/14828/cmdline\n391      1720   node             14828/cmdline\n391      1720   node             cmdline\n391      1720   node             proc/12050/cmdline\n391      1720   node             12050/cmdline\n391      1720   node             cmdline\n391      1720   node             proc/30931/cmdline\n391      1720   node             30931/cmdline\n391      1720   node             cmdline\n391      1720   node             proc/31190/cmdline\n391      1720   node             31190/cmdline\n391      1720   node             cmdline\n391      1720   node             proc/17505/cmdline\n391      1720   node             17505/cmdline\n391      1720   node             cmdline\n593      1720   node             proc/14828/cmdline\n593      1720   node             14828/cmdline\n593      1720   node             cmdline\n593      1720   node             proc/12050/cmdline\n593      1720   node             12050/cmdline\n593      1720   node             cmdline\n593      1720   node             proc/30931/cmdline\n593      1720   node             30931/cmdline\n593      1720   node             cmdline\n593      1720   node             proc/31190/cmdline\n593      1720   node             31190/cmdline\n593      1720   node             cmdline\n593      1720   node             proc/17505/cmdline\n593      1720   node             17505/cmdline\n593      1720   node             cmdline\n795      1720   node             proc/14828/cmdline\n795      1720   node             14828/cmdline\n795      1720   node             cmdline\n795      1720   node             proc/12050/cmdline\n795      1720   node             12050/cmdline\n795      1720   node             cmdline\n795      1720   node             proc/30931/cmdline\n795      1720   node             30931/cmdline\n795      1720   node             cmdline\n795      1720   node             proc/31190/cmdline\n795      1720   node             31190/cmdline\n795      1720   node             cmdline\n795      1720   node             proc/17505/cmdline\n795      1720   node             17505/cmdline\n795      1720   node             cmdline\n931      10038  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n931      10038  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n931      10038  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n931      10038  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n931      10038  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n931      10038  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n931      10038  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n931      10038  node             vscode.lock\n932      10038  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n932      10038  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n932      10038  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n932      10038  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n932      10038  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n932      10038  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n932      10038  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n932      10038  node             vscode.lock\n932      10049  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n932      10049  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n932      10049  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n932      10049  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n932      10049  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n932      10049  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n932      10049  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n932      10049  node             vscode.lock\n932      1703   node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n932      1703   node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n932      1703   node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n932      1703   node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n932      1703   node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n932      1703   node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n932      1703   node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n932      1703   node             vscode.lock\n996      1720   node             proc/14828/cmdline\n996      1720   node             14828/cmdline\n996      1720   node             cmdline\n996      1720   node             proc/12050/cmdline\n996      1720   node             12050/cmdline\n996      1720   node             cmdline\n996      1720   node             proc/30931/cmdline\n996      1720   node             30931/cmdline\n996      1720   node             cmdline\n996      1720   node             proc/31190/cmdline\n996      1720   node             31190/cmdline\n996      1720   node             cmdline\n996      1720   node             proc/17505/cmdline\n996      1720   node             17505/cmdline\n996      1720   node             cmdline\n1123     10038  node             proc/meminfo\n1123     10038  node             meminfo\n1123     10038  node             home/yunwei/.vscode/c_cpp_properties.json\n1123     10038  node             yunwei/.vscode/c_cpp_properties.json\n1123     10038  node             .vscode/c_cpp_properties.json\n1123     10038  node             c_cpp_properties.json\n1198     1720   node             proc/14828/cmdline\n1198     1720   node             14828/cmdline\n1198     1720   node             cmdline\n1198     1720   node             proc/12050/cmdline\n1198     1720   node             12050/cmdline\n1198     1720   node             cmdline\n1198     1720   node             proc/30931/cmdline\n1198     1720   node             30931/cmdline\n1198     1720   node             cmdline\n1198     1720   node             proc/31190/cmdline\n1198     1720   node             31190/cmdline\n1198     1720   node             cmdline\n1198     1720   node             proc/17505/cmdline\n1198     1720   node             17505/cmdline\n1198     1720   node             cmdline\n1269     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n1269     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n1269     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n1269     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n1269     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n1269     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n1269     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n1269     10290  node             vscode.lock\n1269     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n1269     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n1269     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n1269     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n1269     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n1269     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n1269     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n1269     10290  node             vscode.lock\n1269     10290  node             home\n1269     10290  node             home/yunwei\n1269     10290  node             yunwei\n1269     10290  node             home/yunwei/.vscode-server\n1269     10290  node             yunwei/.vscode-server\n1269     10290  node             .vscode-server\n1269     10290  node             home/yunwei/.vscode-server/data\n1269     10290  node             yunwei/.vscode-server/data\n1269     10290  node             .vscode-server/data\n1269     10290  node             data\n1269     10290  node             home/yunwei/.vscode-server/data/User\n1269     10290  node             yunwei/.vscode-server/data/User\n1269     10290  node             .vscode-server/data/User\n1269     10290  node             data/User\n1269     10290  node             User\n1269     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n1269     10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n1269     10290  node             .vscode-server/data/User/workspaceStorage\n1269     10290  node             data/User/workspaceStorage\n1269     10290  node             User/workspaceStorage\n1269     10290  node             workspaceStorage\n1269     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n1269     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n1269     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n1269     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n1269     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n1269     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n1269     10290  node             683061573fc2bafa947b4d87342b0cd1\n1269     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n1269     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n1269     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n1269     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n1269     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n1269     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n1269     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n1269     10290  node             vscode.lock\n1269     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n1269     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n1269     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n1269     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n1269     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n1269     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n1269     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n1269     10290  node             vscode.lock\n1269     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n1269     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n1269     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n1269     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n1269     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n1269     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n1269     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n1269     10290  node             vscode.lock\n1269     10290  node             home\n1269     10290  node             home/yunwei\n1269     10290  node             yunwei\n1269     10290  node             home/yunwei/.vscode-server\n1269     10290  node             yunwei/.vscode-server\n1269     10290  node             .vscode-server\n1269     10290  node             home/yunwei/.vscode-server/data\n1269     10290  node             yunwei/.vscode-server/data\n1269     10290  node             .vscode-server/data\n1269     10290  node             data\n1269     10290  node             home/yunwei/.vscode-server/data/User\n1269     10290  node             yunwei/.vscode-server/data/User\n1269     10290  node             .vscode-server/data/User\n1269     10290  node             data/User\n1269     10290  node             User\n1269     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n1269     10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n1269     10290  node             .vscode-server/data/User/workspaceStorage\n1269     10290  node             data/User/workspaceStorage\n1269     10290  node             User/workspaceStorage\n1269     10290  node             workspaceStorage\n1269     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n1269     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n1269     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n1269     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n1269     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n1269     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n1269     10290  node             683061573fc2bafa947b4d87342b0cd1\n1269     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n1269     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n1269     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n1269     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n1269     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n1269     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n1269     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n1269     10290  node             vscode.lock\n1269     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n1269     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n1269     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n1269     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n1269     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n1269     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n1269     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n1269     10290  node             vscode.lock\n1269     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n1269     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n1269     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n1269     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n1269     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n1269     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n1269     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n1269     10290  node             vscode.lock\n1269     10290  node             home\n1269     10290  node             home/yunwei\n1269     10290  node             yunwei\n1269     10290  node             home/yunwei/.vscode-server\n1269     10290  node             yunwei/.vscode-server\n1269     10290  node             .vscode-server\n1269     10290  node             home/yunwei/.vscode-server/data\n1269     10290  node             yunwei/.vscode-server/data\n1269     10290  node             .vscode-server/data\n1269     10290  node             data\n1269     10290  node             home/yunwei/.vscode-server/data/User\n1269     10290  node             yunwei/.vscode-server/data/User\n1269     10290  node             .vscode-server/data/User\n1269     10290  node             data/User\n1269     10290  node             User\n1269     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n1269     10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n1269     10290  node             .vscode-server/data/User/workspaceStorage\n1269     10290  node             data/User/workspaceStorage\n1269     10290  node             User/workspaceStorage\n1269     10290  node             workspaceStorage\n1269     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n1269     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n1269     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n1269     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n1269     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n1269     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n1269     10290  node             683061573fc2bafa947b4d87342b0cd1\n1269     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n1269     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n1269     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n1269     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n1269     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n1269     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n1269     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n1269     10290  node             vscode.lock\n1269     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n1269     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n1269     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n1269     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n1269     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n1269     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n1269     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n1269     10290  node             vscode.lock\n1269     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n1269     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n1269     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n1269     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n1269     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n1269     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n1269     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n1269     10290  node             vscode.lock\n1400     1720   node             proc/14828/cmdline\n1400     1720   node             14828/cmdline\n1400     1720   node             cmdline\n1400     1720   node             proc/12050/cmdline\n1400     1720   node             12050/cmdline\n1400     1720   node             cmdline\n1400     1720   node             proc/30931/cmdline\n1400     1720   node             30931/cmdline\n1400     1720   node             cmdline\n1400     1720   node             proc/31190/cmdline\n1400     1720   node             31190/cmdline\n1400     1720   node             cmdline\n1400     1720   node             proc/17505/cmdline\n1400     1720   node             17505/cmdline\n1400     1720   node             cmdline\n1602     1720   node             proc/14828/cmdline\n1602     1720   node             14828/cmdline\n1602     1720   node             cmdline\n1602     1720   node             proc/12050/cmdline\n1602     1720   node             12050/cmdline\n1602     1720   node             cmdline\n1602     1720   node             proc/30931/cmdline\n1602     1720   node             30931/cmdline\n1602     1720   node             cmdline\n1602     1720   node             proc/31190/cmdline\n1602     1720   node             31190/cmdline\n1602     1720   node             cmdline\n1602     1720   node             proc/17505/cmdline\n1602     1720   node             17505/cmdline\n1602     1720   node             cmdline\n1804     1720   node             proc/14828/cmdline\n1804     1720   node             14828/cmdline\n1804     1720   node             cmdline\n1804     1720   node             proc/12050/cmdline\n1804     1720   node             12050/cmdline\n1804     1720   node             cmdline\n1804     1720   node             proc/30931/cmdline\n1804     1720   node             30931/cmdline\n1804     1720   node             cmdline\n1804     1720   node             proc/31190/cmdline\n1804     1720   node             31190/cmdline\n1804     1720   node             cmdline\n1804     1720   node             proc/17505/cmdline\n1804     1720   node             17505/cmdline\n1804     1720   node             cmdline\n1933     10038  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n1934     10038  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n1934     10038  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n1934     10038  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n1934     10038  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n1934     10038  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n1934     10038  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n1934     10038  node             vscode.lock\n1934     10038  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n1934     10038  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n1934     10038  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n1934     10038  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n1934     10038  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n1934     10038  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n1934     10038  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n1934     10038  node             vscode.lock\n1934     1703   node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n1934     1703   node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n1934     1703   node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n1934     1703   node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n1934     1703   node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n1934     1703   node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n1934     1703   node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n1934     1703   node             vscode.lock\n1934     10049  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n1934     10049  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n1934     10049  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n1934     10049  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n1934     10049  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n1934     10049  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n1934     10049  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n1934     10049  node             vscode.lock\n2005     1720   node             proc/14828/cmdline\n2005     1720   node             14828/cmdline\n2005     1720   node             cmdline\n2005     1720   node             proc/12050/cmdline\n2005     1720   node             12050/cmdline\n2005     1720   node             cmdline\n2005     1720   node             proc/30931/cmdline\n2005     1720   node             30931/cmdline\n2005     1720   node             cmdline\n2005     1720   node             proc/31190/cmdline\n2005     1720   node             31190/cmdline\n2005     1720   node             cmdline\n2005     1720   node             proc/17505/cmdline\n2005     1720   node             17505/cmdline\n2005     1720   node             cmdline\n2209     1720   node             proc/14828/cmdline\n2209     1720   node             14828/cmdline\n2209     1720   node             cmdline\n2209     1720   node             proc/12050/cmdline\n2209     1720   node             12050/cmdline\n2209     1720   node             cmdline\n2209     1720   node             proc/30931/cmdline\n2209     1720   node             30931/cmdline\n2209     1720   node             cmdline\n2209     1720   node             proc/31190/cmdline\n2209     1720   node             31190/cmdline\n2209     1720   node             cmdline\n2209     1720   node             proc/17505/cmdline\n2209     1720   node             17505/cmdline\n2209     1720   node             cmdline\n2269     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n2269     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n2269     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n2269     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n2269     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n2269     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n2269     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n2269     10290  node             vscode.lock\n2269     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n2269     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n2269     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n2269     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n2269     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n2269     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n2269     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n2269     10290  node             vscode.lock\n2269     10290  node             home\n2269     10290  node             home/yunwei\n2269     10290  node             yunwei\n2269     10290  node             home/yunwei/.vscode-server\n2269     10290  node             yunwei/.vscode-server\n2269     10290  node             .vscode-server\n2269     10290  node             home/yunwei/.vscode-server/data\n2269     10290  node             yunwei/.vscode-server/data\n2269     10290  node             .vscode-server/data\n2269     10290  node             data\n2269     10290  node             home/yunwei/.vscode-server/data/User\n2269     10290  node             yunwei/.vscode-server/data/User\n2269     10290  node             .vscode-server/data/User\n2269     10290  node             data/User\n2269     10290  node             User\n2269     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n2269     10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n2269     10290  node             .vscode-server/data/User/workspaceStorage\n2269     10290  node             data/User/workspaceStorage\n2269     10290  node             User/workspaceStorage\n2269     10290  node             workspaceStorage\n2269     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n2269     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n2269     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n2269     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n2269     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n2269     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n2269     10290  node             683061573fc2bafa947b4d87342b0cd1\n2269     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n2269     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n2269     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n2269     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n2269     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n2269     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n2269     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n2269     10290  node             vscode.lock\n2269     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n2269     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n2269     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n2269     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n2269     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n2269     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n2269     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n2269     10290  node             vscode.lock\n2269     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n2269     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n2269     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n2269     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n2269     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n2269     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n2269     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n2269     10290  node             vscode.lock\n2269     10290  node             home\n2269     10290  node             home/yunwei\n2269     10290  node             yunwei\n2269     10290  node             home/yunwei/.vscode-server\n2269     10290  node             yunwei/.vscode-server\n2269     10290  node             .vscode-server\n2269     10290  node             home/yunwei/.vscode-server/data\n2269     10290  node             yunwei/.vscode-server/data\n2269     10290  node             .vscode-server/data\n2269     10290  node             data\n2269     10290  node             home/yunwei/.vscode-server/data/User\n2269     10290  node             yunwei/.vscode-server/data/User\n2269     10290  node             .vscode-server/data/User\n2269     10290  node             data/User\n2269     10290  node             User\n2269     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n2269     10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n2269     10290  node             .vscode-server/data/User/workspaceStorage\n2269     10290  node             data/User/workspaceStorage\n2269     10290  node             User/workspaceStorage\n2269     10290  node             workspaceStorage\n2269     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n2269     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n2269     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n2269     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n2269     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n2269     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n2269     10290  node             683061573fc2bafa947b4d87342b0cd1\n2269     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n2269     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n2269     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n2269     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n2269     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n2269     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n2269     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n2269     10290  node             vscode.lock\n2269     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n2269     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n2269     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n2269     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n2269     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n2269     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n2269     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n2269     10290  node             vscode.lock\n2269     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n2269     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n2269     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n2269     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n2269     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n2269     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n2269     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n2269     10290  node             vscode.lock\n2269     10290  node             home\n2269     10290  node             home/yunwei\n2269     10290  node             yunwei\n2269     10290  node             home/yunwei/.vscode-server\n2269     10290  node             yunwei/.vscode-server\n2269     10290  node             .vscode-server\n2269     10290  node             home/yunwei/.vscode-server/data\n2269     10290  node             yunwei/.vscode-server/data\n2269     10290  node             .vscode-server/data\n2269     10290  node             data\n2269     10290  node             home/yunwei/.vscode-server/data/User\n2269     10290  node             yunwei/.vscode-server/data/User\n2269     10290  node             .vscode-server/data/User\n2269     10290  node             data/User\n2269     10290  node             User\n2269     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n2269     10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n2269     10290  node             .vscode-server/data/User/workspaceStorage\n2269     10290  node             data/User/workspaceStorage\n2269     10290  node             User/workspaceStorage\n2269     10290  node             workspaceStorage\n2269     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n2269     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n2269     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n2269     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n2269     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n2269     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n2269     10290  node             683061573fc2bafa947b4d87342b0cd1\n2269     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n2269     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n2269     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n2269     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n2269     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n2269     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n2269     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n2269     10290  node             vscode.lock\n2270     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n2270     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n2270     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n2270     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n2270     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n2270     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n2270     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n2270     10290  node             vscode.lock\n2270     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n2270     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n2270     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n2270     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n2270     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n2270     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n2270     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n2270     10290  node             vscode.lock\n2410     1720   node             proc/14828/cmdline\n2410     1720   node             14828/cmdline\n2410     1720   node             cmdline\n2410     1720   node             proc/12050/cmdline\n2410     1720   node             12050/cmdline\n2410     1720   node             cmdline\n2410     1720   node             proc/30931/cmdline\n2410     1720   node             30931/cmdline\n2410     1720   node             cmdline\n2410     1720   node             proc/31190/cmdline\n2410     1720   node             31190/cmdline\n2410     1720   node             cmdline\n2410     1720   node             proc/17505/cmdline\n2410     1720   node             17505/cmdline\n2410     1720   node             cmdline\n2612     1720   node             proc/14828/cmdline\n2612     1720   node             14828/cmdline\n2612     1720   node             cmdline\n2613     1720   node             proc/12050/cmdline\n2613     1720   node             12050/cmdline\n2613     1720   node             cmdline\n2613     1720   node             proc/30931/cmdline\n2613     1720   node             30931/cmdline\n2613     1720   node             cmdline\n2613     1720   node             proc/31190/cmdline\n2613     1720   node             31190/cmdline\n2613     1720   node             cmdline\n2613     1720   node             proc/17505/cmdline\n2613     1720   node             17505/cmdline\n2613     1720   node             cmdline\n2814     1720   node             proc/14828/cmdline\n2814     1720   node             14828/cmdline\n2814     1720   node             cmdline\n2814     1720   node             proc/12050/cmdline\n2814     1720   node             12050/cmdline\n2814     1720   node             cmdline\n2814     1720   node             proc/30931/cmdline\n2814     1720   node             30931/cmdline\n2814     1720   node             cmdline\n2814     1720   node             proc/31190/cmdline\n2814     1720   node             31190/cmdline\n2814     1720   node             cmdline\n2814     1720   node             proc/17505/cmdline\n2814     1720   node             17505/cmdline\n2814     1720   node             cmdline\n2934     10038  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n2934     10038  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n2934     10038  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n2934     10038  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n2934     10038  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n2934     10038  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n2934     10038  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n2934     10038  node             vscode.lock\n2934     10038  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n2934     10038  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n2934     10038  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n2934     10038  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n2934     10038  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n2934     10038  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n2934     10038  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n2934     10038  node             vscode.lock\n2934     1703   node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n2934     1703   node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n2934     1703   node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n2934     1703   node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n2934     1703   node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n2934     1703   node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n2934     1703   node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n2934     1703   node             vscode.lock\n2934     10049  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n2934     10049  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n2934     10049  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n2934     10049  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n2934     10049  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n2934     10049  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n2934     10049  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n2934     10049  node             vscode.lock\n3015     1720   node             proc/14828/cmdline\n3015     1720   node             14828/cmdline\n3015     1720   node             cmdline\n3015     1720   node             proc/12050/cmdline\n3015     1720   node             12050/cmdline\n3015     1720   node             cmdline\n3015     1720   node             proc/30931/cmdline\n3015     1720   node             30931/cmdline\n3015     1720   node             cmdline\n3015     1720   node             proc/31190/cmdline\n3015     1720   node             31190/cmdline\n3015     1720   node             cmdline\n3015     1720   node             proc/17505/cmdline\n3015     1720   node             17505/cmdline\n3015     1720   node             cmdline\n3217     1720   node             proc/14828/cmdline\n3217     1720   node             14828/cmdline\n3217     1720   node             cmdline\n3217     1720   node             proc/12050/cmdline\n3217     1720   node             12050/cmdline\n3217     1720   node             cmdline\n3217     1720   node             proc/30931/cmdline\n3217     1720   node             30931/cmdline\n3217     1720   node             cmdline\n3217     1720   node             proc/31190/cmdline\n3217     1720   node             31190/cmdline\n3217     1720   node             cmdline\n3217     1720   node             proc/17505/cmdline\n3217     1720   node             17505/cmdline\n3217     1720   node             cmdline\n3270     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n3270     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n3270     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n3270     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n3270     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n3270     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n3270     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n3270     10290  node             vscode.lock\n3270     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n3270     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n3270     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n3270     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n3270     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n3270     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n3270     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n3270     10290  node             vscode.lock\n3270     10290  node             home\n3270     10290  node             home/yunwei\n3270     10290  node             yunwei\n3270     10290  node             home/yunwei/.vscode-server\n3270     10290  node             yunwei/.vscode-server\n3270     10290  node             .vscode-server\n3270     10290  node             home/yunwei/.vscode-server/data\n3270     10290  node             yunwei/.vscode-server/data\n3270     10290  node             .vscode-server/data\n3270     10290  node             data\n3270     10290  node             home/yunwei/.vscode-server/data/User\n3270     10290  node             yunwei/.vscode-server/data/User\n3270     10290  node             .vscode-server/data/User\n3270     10290  node             data/User\n3270     10290  node             User\n3270     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n3270     10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n3270     10290  node             .vscode-server/data/User/workspaceStorage\n3270     10290  node             data/User/workspaceStorage\n3270     10290  node             User/workspaceStorage\n3270     10290  node             workspaceStorage\n3270     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n3270     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n3270     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n3270     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n3270     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n3270     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n3270     10290  node             683061573fc2bafa947b4d87342b0cd1\n3270     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n3270     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n3270     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n3270     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n3270     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n3270     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n3270     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n3270     10290  node             vscode.lock\n3270     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n3270     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n3270     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n3270     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n3270     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n3270     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n3270     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n3270     10290  node             vscode.lock\n3270     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n3270     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n3270     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n3270     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n3270     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n3270     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n3270     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n3270     10290  node             vscode.lock\n3270     10290  node             home\n3270     10290  node             home/yunwei\n3270     10290  node             yunwei\n3270     10290  node             home/yunwei/.vscode-server\n3270     10290  node             yunwei/.vscode-server\n3270     10290  node             .vscode-server\n3270     10290  node             home/yunwei/.vscode-server/data\n3270     10290  node             yunwei/.vscode-server/data\n3270     10290  node             .vscode-server/data\n3270     10290  node             data\n3270     10290  node             home/yunwei/.vscode-server/data/User\n3270     10290  node             yunwei/.vscode-server/data/User\n3270     10290  node             .vscode-server/data/User\n3270     10290  node             data/User\n3270     10290  node             User\n3270     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n3270     10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n3270     10290  node             .vscode-server/data/User/workspaceStorage\n3270     10290  node             data/User/workspaceStorage\n3270     10290  node             User/workspaceStorage\n3270     10290  node             workspaceStorage\n3270     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n3270     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n3270     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n3270     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n3270     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n3270     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n3270     10290  node             683061573fc2bafa947b4d87342b0cd1\n3270     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n3270     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n3270     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n3270     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n3270     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n3270     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n3270     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n3270     10290  node             vscode.lock\n3270     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n3270     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n3270     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n3270     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n3270     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n3270     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n3270     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n3270     10290  node             vscode.lock\n3270     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n3270     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n3270     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n3270     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n3270     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n3270     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n3270     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n3270     10290  node             vscode.lock\n3270     10290  node             home\n3270     10290  node             home/yunwei\n3270     10290  node             yunwei\n3270     10290  node             home/yunwei/.vscode-server\n3270     10290  node             yunwei/.vscode-server\n3270     10290  node             .vscode-server\n3270     10290  node             home/yunwei/.vscode-server/data\n3270     10290  node             yunwei/.vscode-server/data\n3270     10290  node             .vscode-server/data\n3270     10290  node             data\n3270     10290  node             home/yunwei/.vscode-server/data/User\n3270     10290  node             yunwei/.vscode-server/data/User\n3270     10290  node             .vscode-server/data/User\n3270     10290  node             data/User\n3270     10290  node             User\n3270     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n3270     10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n3270     10290  node             .vscode-server/data/User/workspaceStorage\n3270     10290  node             data/User/workspaceStorage\n3270     10290  node             User/workspaceStorage\n3270     10290  node             workspaceStorage\n3270     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n3270     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n3270     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n3270     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n3270     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n3270     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n3270     10290  node             683061573fc2bafa947b4d87342b0cd1\n3270     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n3270     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n3270     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n3270     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n3270     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n3270     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n3270     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n3270     10290  node             vscode.lock\n3270     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n3270     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n3270     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n3270     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n3270     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n3270     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n3270     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n3270     10290  node             vscode.lock\n3270     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n3270     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n3270     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n3270     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n3270     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n3270     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n3270     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n3270     10290  node             vscode.lock\n3417     1720   node             proc/14828/cmdline\n3418     1720   node             14828/cmdline\n3418     1720   node             cmdline\n3418     1720   node             proc/12050/cmdline\n3418     1720   node             12050/cmdline\n3418     1720   node             cmdline\n3418     1720   node             proc/30931/cmdline\n3418     1720   node             30931/cmdline\n3418     1720   node             cmdline\n3418     1720   node             proc/31190/cmdline\n3418     1720   node             31190/cmdline\n3418     1720   node             cmdline\n3418     1720   node             proc/17505/cmdline\n3418     1720   node             17505/cmdline\n3418     1720   node             cmdline\n3594     572    vmtoolsd         proc/meminfo\n3595     572    vmtoolsd         meminfo\n3595     572    vmtoolsd         proc/vmstat\n3595     572    vmtoolsd         vmstat\n3595     572    vmtoolsd         proc/stat\n3595     572    vmtoolsd         stat\n3595     572    vmtoolsd         proc/zoneinfo\n3595     572    vmtoolsd         zoneinfo\n3595     572    vmtoolsd         proc/uptime\n3595     572    vmtoolsd         uptime\n3595     572    vmtoolsd         proc/diskstats\n3595     572    vmtoolsd         diskstats\n3596     572    vmtoolsd         sys/block/loop0\n3596     572    vmtoolsd         block/loop0\n3596     572    vmtoolsd         loop0\n3596     572    vmtoolsd         devices/virtual/block/loop0\n3596     572    vmtoolsd         virtual/block/loop0\n3596     572    vmtoolsd         block/loop0\n3596     572    vmtoolsd         loop0\n3596     572    vmtoolsd         sys/block/loop1\n3596     572    vmtoolsd         block/loop1\n3596     572    vmtoolsd         loop1\n3596     572    vmtoolsd         devices/virtual/block/loop1\n3596     572    vmtoolsd         virtual/block/loop1\n3596     572    vmtoolsd         block/loop1\n3596     572    vmtoolsd         loop1\n3596     572    vmtoolsd         sys/block/loop2\n3596     572    vmtoolsd         block/loop2\n3596     572    vmtoolsd         loop2\n3596     572    vmtoolsd         devices/virtual/block/loop2\n3596     572    vmtoolsd         virtual/block/loop2\n3596     572    vmtoolsd         block/loop2\n3596     572    vmtoolsd         loop2\n3596     572    vmtoolsd         sys/block/loop3\n3596     572    vmtoolsd         block/loop3\n3596     572    vmtoolsd         loop3\n3596     572    vmtoolsd         devices/virtual/block/loop3\n3596     572    vmtoolsd         virtual/block/loop3\n3596     572    vmtoolsd         block/loop3\n3596     572    vmtoolsd         loop3\n3596     572    vmtoolsd         sys/block/loop4\n3596     572    vmtoolsd         block/loop4\n3596     572    vmtoolsd         loop4\n3596     572    vmtoolsd         devices/virtual/block/loop4\n3596     572    vmtoolsd         virtual/block/loop4\n3596     572    vmtoolsd         block/loop4\n3596     572    vmtoolsd         loop4\n3596     572    vmtoolsd         sys/block/loop5\n3596     572    vmtoolsd         block/loop5\n3596     572    vmtoolsd         loop5\n3596     572    vmtoolsd         devices/virtual/block/loop5\n3596     572    vmtoolsd         virtual/block/loop5\n3596     572    vmtoolsd         block/loop5\n3596     572    vmtoolsd         loop5\n3596     572    vmtoolsd         sys/block/loop6\n3596     572    vmtoolsd         block/loop6\n3596     572    vmtoolsd         loop6\n3596     572    vmtoolsd         devices/virtual/block/loop6\n3596     572    vmtoolsd         virtual/block/loop6\n3596     572    vmtoolsd         block/loop6\n3596     572    vmtoolsd         loop6\n3596     572    vmtoolsd         sys/block/loop7\n3596     572    vmtoolsd         block/loop7\n3596     572    vmtoolsd         loop7\n3596     572    vmtoolsd         devices/virtual/block/loop7\n3596     572    vmtoolsd         virtual/block/loop7\n3596     572    vmtoolsd         block/loop7\n3596     572    vmtoolsd         loop7\n3596     572    vmtoolsd         sys/block/sda\n3596     572    vmtoolsd         block/sda\n3596     572    vmtoolsd         sda\n3596     572    vmtoolsd         devices/pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:0/bl\n3596     572    vmtoolsd         pci0000:00/0000:00:10.0/host32/target32:0:0/32:0:0:0/block/sda\n3596     572    vmtoolsd         0000:00:10.0/host32/target32:0:0/32:0:0:0/block/sda\n3596     572    vmtoolsd         host32/target32:0:0/32:0:0:0/block/sda\n3596     572    vmtoolsd         target32:0:0/32:0:0:0/block/sda\n3596     572    vmtoolsd         32:0:0:0/block/sda\n3596     572    vmtoolsd         block/sda\n3596     572    vmtoolsd         sda\n3596     572    vmtoolsd         sys/block/sda1\n3596     572    vmtoolsd         block/sda1\n3596     572    vmtoolsd         sda1\n3596     572    vmtoolsd         sys/block/sda2\n3596     572    vmtoolsd         block/sda2\n3596     572    vmtoolsd         sda2\n3596     572    vmtoolsd         sys/block/sr0\n3596     572    vmtoolsd         block/sr0\n3596     572    vmtoolsd         sr0\n3596     572    vmtoolsd         devices/pci0000:00/0000:00:11.0/0000:02:05.0/ata4/host3/target3\n3596     572    vmtoolsd         pci0000:00/0000:00:11.0/0000:02:05.0/ata4/host3/target3:0:0/3:0\n3596     572    vmtoolsd         0000:00:11.0/0000:02:05.0/ata4/host3/target3:0:0/3:0:0:0/block/\n3596     572    vmtoolsd         0000:02:05.0/ata4/host3/target3:0:0/3:0:0:0/block/sr0\n3596     572    vmtoolsd         ata4/host3/target3:0:0/3:0:0:0/block/sr0\n3596     572    vmtoolsd         host3/target3:0:0/3:0:0:0/block/sr0\n3596     572    vmtoolsd         target3:0:0/3:0:0:0/block/sr0\n3596     572    vmtoolsd         3:0:0:0/block/sr0\n3596     572    vmtoolsd         block/sr0\n3596     572    vmtoolsd         sr0\n3596     572    vmtoolsd         sys/block/loop8\n3596     572    vmtoolsd         block/loop8\n3596     572    vmtoolsd         loop8\n3596     572    vmtoolsd         devices/virtual/block/loop8\n3596     572    vmtoolsd         virtual/block/loop8\n3596     572    vmtoolsd         block/loop8\n3596     572    vmtoolsd         loop8\n3596     572    vmtoolsd         sys/block/loop9\n3596     572    vmtoolsd         block/loop9\n3596     572    vmtoolsd         loop9\n3596     572    vmtoolsd         devices/virtual/block/loop9\n3596     572    vmtoolsd         virtual/block/loop9\n3596     572    vmtoolsd         block/loop9\n3596     572    vmtoolsd         loop9\n3596     572    vmtoolsd         sys/block/loop10\n3596     572    vmtoolsd         block/loop10\n3596     572    vmtoolsd         loop10\n3596     572    vmtoolsd         devices/virtual/block/loop10\n3596     572    vmtoolsd         virtual/block/loop10\n3596     572    vmtoolsd         block/loop10\n3596     572    vmtoolsd         loop10\n3620     1720   node             proc/14828/cmdline\n3620     1720   node             14828/cmdline\n3620     1720   node             cmdline\n3620     1720   node             proc/12050/cmdline\n3620     1720   node             12050/cmdline\n3620     1720   node             cmdline\n3620     1720   node             proc/30931/cmdline\n3620     1720   node             30931/cmdline\n3620     1720   node             cmdline\n3620     1720   node             proc/31190/cmdline\n3620     1720   node             31190/cmdline\n3620     1720   node             cmdline\n3620     1720   node             proc/17505/cmdline\n3620     1720   node             17505/cmdline\n3620     1720   node             cmdline\n3624     10038  node             proc/meminfo\n3624     10038  node             meminfo\n3624     10038  node             home/yunwei/.vscode/c_cpp_properties.json\n3624     10038  node             yunwei/.vscode/c_cpp_properties.json\n3624     10038  node             .vscode/c_cpp_properties.json\n3624     10038  node             c_cpp_properties.json\n3821     1720   node             proc/14828/cmdline\n3821     1720   node             14828/cmdline\n3821     1720   node             cmdline\n3821     1720   node             proc/12050/cmdline\n3821     1720   node             12050/cmdline\n3821     1720   node             cmdline\n3821     1720   node             proc/30931/cmdline\n3821     1720   node             30931/cmdline\n3821     1720   node             cmdline\n3821     1720   node             proc/31190/cmdline\n3821     1720   node             31190/cmdline\n3821     1720   node             cmdline\n3821     1720   node             proc/17505/cmdline\n3821     1720   node             17505/cmdline\n3821     1720   node             cmdline\n3937     10038  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n3937     10038  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n3937     10038  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n3937     10038  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n3937     10038  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n3937     10038  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n3937     10038  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n3937     10038  node             vscode.lock\n3938     10038  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n3938     10038  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n3938     10038  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n3938     10038  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n3938     10038  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n3938     10038  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n3938     10038  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n3938     10038  node             vscode.lock\n3938     1703   node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n3938     1703   node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n3938     1703   node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n3938     1703   node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n3938     1703   node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n3938     1703   node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n3938     1703   node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n3938     1703   node             vscode.lock\n3938     10049  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n3938     10049  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n3938     10049  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n3938     10049  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n3938     10049  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n3938     10049  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n3938     10049  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n3938     10049  node             vscode.lock\n4023     1720   node             proc/14828/cmdline\n4023     1720   node             14828/cmdline\n4023     1720   node             cmdline\n4023     1720   node             proc/12050/cmdline\n4023     1720   node             12050/cmdline\n4023     1720   node             cmdline\n4023     1720   node             proc/30931/cmdline\n4023     1720   node             30931/cmdline\n4023     1720   node             cmdline\n4023     1720   node             proc/31190/cmdline\n4023     1720   node             31190/cmdline\n4023     1720   node             cmdline\n4023     1720   node             proc/17505/cmdline\n4023     1720   node             17505/cmdline\n4023     1720   node             cmdline\n4225     1720   node             proc/14828/cmdline\n4225     1720   node             14828/cmdline\n4225     1720   node             cmdline\n4225     1720   node             proc/12050/cmdline\n4225     1720   node             12050/cmdline\n4225     1720   node             cmdline\n4225     1720   node             proc/30931/cmdline\n4225     1720   node             30931/cmdline\n4225     1720   node             cmdline\n4225     1720   node             proc/31190/cmdline\n4225     1720   node             31190/cmdline\n4225     1720   node             cmdline\n4225     1720   node             proc/17505/cmdline\n4225     1720   node             17505/cmdline\n4225     1720   node             cmdline\n4274     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n4274     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n4274     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n4274     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n4274     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n4274     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n4274     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n4274     10290  node             vscode.lock\n4274     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n4274     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n4274     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n4274     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n4274     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n4274     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n4274     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n4274     10290  node             vscode.lock\n4274     10290  node             home\n4274     10290  node             home/yunwei\n4274     10290  node             yunwei\n4274     10290  node             home/yunwei/.vscode-server\n4274     10290  node             yunwei/.vscode-server\n4274     10290  node             .vscode-server\n4274     10290  node             home/yunwei/.vscode-server/data\n4274     10290  node             yunwei/.vscode-server/data\n4274     10290  node             .vscode-server/data\n4274     10290  node             data\n4274     10290  node             home/yunwei/.vscode-server/data/User\n4274     10290  node             yunwei/.vscode-server/data/User\n4274     10290  node             .vscode-server/data/User\n4274     10290  node             data/User\n4274     10290  node             User\n4274     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n4274     10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n4274     10290  node             .vscode-server/data/User/workspaceStorage\n4274     10290  node             data/User/workspaceStorage\n4274     10290  node             User/workspaceStorage\n4274     10290  node             workspaceStorage\n4274     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n4274     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n4274     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n4274     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n4274     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n4274     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n4274     10290  node             683061573fc2bafa947b4d87342b0cd1\n4274     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n4274     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n4274     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n4274     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n4274     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n4274     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n4274     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n4274     10290  node             vscode.lock\n4274     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n4274     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n4274     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n4274     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n4274     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n4274     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n4274     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n4274     10290  node             vscode.lock\n4274     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n4274     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n4274     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n4274     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n4274     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n4274     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n4274     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n4274     10290  node             vscode.lock\n4274     10290  node             home\n4274     10290  node             home/yunwei\n4274     10290  node             yunwei\n4274     10290  node             home/yunwei/.vscode-server\n4274     10290  node             yunwei/.vscode-server\n4274     10290  node             .vscode-server\n4274     10290  node             home/yunwei/.vscode-server/data\n4274     10290  node             yunwei/.vscode-server/data\n4274     10290  node             .vscode-server/data\n4274     10290  node             data\n4274     10290  node             home/yunwei/.vscode-server/data/User\n4274     10290  node             yunwei/.vscode-server/data/User\n4274     10290  node             .vscode-server/data/User\n4274     10290  node             data/User\n4274     10290  node             User\n4274     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n4274     10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n4274     10290  node             .vscode-server/data/User/workspaceStorage\n4274     10290  node             data/User/workspaceStorage\n4274     10290  node             User/workspaceStorage\n4274     10290  node             workspaceStorage\n4274     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n4274     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n4274     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n4274     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n4274     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n4274     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n4274     10290  node             683061573fc2bafa947b4d87342b0cd1\n4274     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n4274     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n4274     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n4274     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n4274     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n4274     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n4274     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n4274     10290  node             vscode.lock\n4274     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n4274     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n4274     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n4274     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n4274     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n4274     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n4274     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n4274     10290  node             vscode.lock\n4274     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n4274     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n4274     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n4274     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n4274     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n4274     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n4274     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n4274     10290  node             vscode.lock\n4274     10290  node             home\n4274     10290  node             home/yunwei\n4274     10290  node             yunwei\n4274     10290  node             home/yunwei/.vscode-server\n4274     10290  node             yunwei/.vscode-server\n4274     10290  node             .vscode-server\n4274     10290  node             home/yunwei/.vscode-server/data\n4274     10290  node             yunwei/.vscode-server/data\n4274     10290  node             .vscode-server/data\n4274     10290  node             data\n4274     10290  node             home/yunwei/.vscode-server/data/User\n4274     10290  node             yunwei/.vscode-server/data/User\n4274     10290  node             .vscode-server/data/User\n4274     10290  node             data/User\n4274     10290  node             User\n4274     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n4274     10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n4274     10290  node             .vscode-server/data/User/workspaceStorage\n4274     10290  node             data/User/workspaceStorage\n4274     10290  node             User/workspaceStorage\n4274     10290  node             workspaceStorage\n4274     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n4274     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n4274     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n4274     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n4274     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n4274     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n4274     10290  node             683061573fc2bafa947b4d87342b0cd1\n4274     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n4274     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n4274     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n4274     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n4274     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n4274     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n4274     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n4274     10290  node             vscode.lock\n4274     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n4274     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n4274     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n4274     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n4274     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n4274     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n4274     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n4274     10290  node             vscode.lock\n4274     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n4274     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n4274     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n4274     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n4274     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n4274     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n4274     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n4274     10290  node             vscode.lock\n4428     1720   node             proc/14828/cmdline\n4428     1720   node             14828/cmdline\n4428     1720   node             cmdline\n4428     1720   node             proc/12050/cmdline\n4428     1720   node             12050/cmdline\n4428     1720   node             cmdline\n4428     1720   node             proc/30931/cmdline\n4428     1720   node             30931/cmdline\n4428     1720   node             cmdline\n4428     1720   node             proc/31190/cmdline\n4428     1720   node             31190/cmdline\n4428     1720   node             cmdline\n4428     1720   node             proc/17505/cmdline\n4428     1720   node             17505/cmdline\n4428     1720   node             cmdline\n4630     1720   node             proc/14828/cmdline\n4630     1720   node             14828/cmdline\n4630     1720   node             cmdline\n4630     1720   node             proc/12050/cmdline\n4630     1720   node             12050/cmdline\n4630     1720   node             cmdline\n4630     1720   node             proc/30931/cmdline\n4630     1720   node             30931/cmdline\n4630     1720   node             cmdline\n4630     1720   node             proc/31190/cmdline\n4630     1720   node             31190/cmdline\n4630     1720   node             cmdline\n4630     1720   node             proc/17505/cmdline\n4630     1720   node             17505/cmdline\n4630     1720   node             cmdline\n4833     1720   node             proc/14828/cmdline\n4833     1720   node             14828/cmdline\n4833     1720   node             cmdline\n4833     1720   node             proc/12050/cmdline\n4833     1720   node             12050/cmdline\n4833     1720   node             cmdline\n4833     1720   node             proc/30931/cmdline\n4833     1720   node             30931/cmdline\n4833     1720   node             cmdline\n4833     1720   node             proc/31190/cmdline\n4833     1720   node             31190/cmdline\n4833     1720   node             cmdline\n4833     1720   node             proc/17505/cmdline\n4833     1720   node             17505/cmdline\n4833     1720   node             cmdline\n4940     10038  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n4940     10038  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n4940     10038  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n4940     10038  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n4940     10038  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n4940     10038  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n4940     10038  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n4940     10038  node             vscode.lock\n4940     10038  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n4940     10038  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n4940     10038  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n4940     10038  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n4940     10038  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n4940     10038  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n4940     10038  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n4940     10038  node             vscode.lock\n4940     1703   node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n4940     1703   node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n4940     1703   node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n4940     1703   node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n4940     1703   node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n4940     1703   node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n4940     1703   node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n4940     1703   node             vscode.lock\n4941     10049  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n4941     10049  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n4941     10049  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n4941     10049  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n4941     10049  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n4941     10049  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n4941     10049  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n4941     10049  node             vscode.lock\n5020     572    vmtoolsd         etc/vmware-tools/tools-global.conf\n5020     572    vmtoolsd         vmware-tools/tools-global.conf\n5020     572    vmtoolsd         tools-global.conf\n5020     572    vmtoolsd         etc/vmware-tools/tools.conf\n5020     572    vmtoolsd         vmware-tools/tools.conf\n5020     572    vmtoolsd         tools.conf\n5034     1720   node             proc/14828/cmdline\n5034     1720   node             14828/cmdline\n5034     1720   node             cmdline\n5034     1720   node             proc/12050/cmdline\n5034     1720   node             12050/cmdline\n5034     1720   node             cmdline\n5034     1720   node             proc/30931/cmdline\n5034     1720   node             30931/cmdline\n5034     1720   node             cmdline\n5034     1720   node             proc/31190/cmdline\n5034     1720   node             31190/cmdline\n5034     1720   node             cmdline\n5034     1720   node             proc/17505/cmdline\n5034     1720   node             17505/cmdline\n5034     1720   node             cmdline\n5234     1720   node             proc/14828/cmdline\n5234     1720   node             14828/cmdline\n5234     1720   node             cmdline\n5235     1720   node             proc/12050/cmdline\n5235     1720   node             12050/cmdline\n5235     1720   node             cmdline\n5235     1720   node             proc/30931/cmdline\n5235     1720   node             30931/cmdline\n5235     1720   node             cmdline\n5235     1720   node             proc/31190/cmdline\n5235     1720   node             31190/cmdline\n5235     1720   node             cmdline\n5235     1720   node             proc/17505/cmdline\n5235     1720   node             17505/cmdline\n5235     1720   node             cmdline\n5275     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n5275     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n5275     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n5275     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n5275     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n5275     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n5275     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n5275     10290  node             vscode.lock\n5275     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n5275     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n5275     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n5275     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n5275     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n5275     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n5275     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n5275     10290  node             vscode.lock\n5275     10290  node             home\n5275     10290  node             home/yunwei\n5275     10290  node             yunwei\n5275     10290  node             home/yunwei/.vscode-server\n5275     10290  node             yunwei/.vscode-server\n5275     10290  node             .vscode-server\n5275     10290  node             home/yunwei/.vscode-server/data\n5275     10290  node             yunwei/.vscode-server/data\n5275     10290  node             .vscode-server/data\n5275     10290  node             data\n5275     10290  node             home/yunwei/.vscode-server/data/User\n5275     10290  node             yunwei/.vscode-server/data/User\n5275     10290  node             .vscode-server/data/User\n5275     10290  node             data/User\n5275     10290  node             User\n5275     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n5275     10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n5275     10290  node             .vscode-server/data/User/workspaceStorage\n5275     10290  node             data/User/workspaceStorage\n5275     10290  node             User/workspaceStorage\n5275     10290  node             workspaceStorage\n5275     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n5275     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n5275     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n5275     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n5275     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n5275     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n5275     10290  node             683061573fc2bafa947b4d87342b0cd1\n5275     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n5275     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n5275     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n5275     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n5275     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n5275     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n5275     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n5275     10290  node             vscode.lock\n5275     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n5275     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n5275     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n5275     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n5275     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n5275     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n5275     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n5275     10290  node             vscode.lock\n5275     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n5275     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n5275     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n5275     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n5275     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n5275     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n5275     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n5275     10290  node             vscode.lock\n5275     10290  node             home\n5275     10290  node             home/yunwei\n5275     10290  node             yunwei\n5275     10290  node             home/yunwei/.vscode-server\n5275     10290  node             yunwei/.vscode-server\n5275     10290  node             .vscode-server\n5275     10290  node             home/yunwei/.vscode-server/data\n5275     10290  node             yunwei/.vscode-server/data\n5275     10290  node             .vscode-server/data\n5275     10290  node             data\n5275     10290  node             home/yunwei/.vscode-server/data/User\n5275     10290  node             yunwei/.vscode-server/data/User\n5275     10290  node             .vscode-server/data/User\n5275     10290  node             data/User\n5275     10290  node             User\n5275     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n5275     10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n5275     10290  node             .vscode-server/data/User/workspaceStorage\n5275     10290  node             data/User/workspaceStorage\n5275     10290  node             User/workspaceStorage\n5275     10290  node             workspaceStorage\n5275     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n5275     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n5275     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n5275     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n5275     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n5275     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n5275     10290  node             683061573fc2bafa947b4d87342b0cd1\n5275     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n5275     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n5275     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n5275     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n5275     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n5275     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n5275     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n5275     10290  node             vscode.lock\n5275     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n5275     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n5275     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n5275     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n5275     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n5275     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n5275     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n5275     10290  node             vscode.lock\n5275     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n5275     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n5275     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n5275     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n5275     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n5275     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n5275     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n5275     10290  node             vscode.lock\n5275     10290  node             home\n5275     10290  node             home/yunwei\n5275     10290  node             yunwei\n5275     10290  node             home/yunwei/.vscode-server\n5275     10290  node             yunwei/.vscode-server\n5275     10290  node             .vscode-server\n5275     10290  node             home/yunwei/.vscode-server/data\n5275     10290  node             yunwei/.vscode-server/data\n5275     10290  node             .vscode-server/data\n5275     10290  node             data\n5275     10290  node             home/yunwei/.vscode-server/data/User\n5275     10290  node             yunwei/.vscode-server/data/User\n5275     10290  node             .vscode-server/data/User\n5275     10290  node             data/User\n5275     10290  node             User\n5275     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n5275     10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n5275     10290  node             .vscode-server/data/User/workspaceStorage\n5275     10290  node             data/User/workspaceStorage\n5275     10290  node             User/workspaceStorage\n5275     10290  node             workspaceStorage\n5275     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n5275     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n5275     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n5275     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n5275     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n5275     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n5275     10290  node             683061573fc2bafa947b4d87342b0cd1\n5275     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n5275     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n5275     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n5275     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n5275     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n5275     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n5275     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n5275     10290  node             vscode.lock\n5275     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n5275     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n5275     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n5275     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n5275     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n5275     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n5275     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n5275     10290  node             vscode.lock\n5275     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n5275     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n5275     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n5275     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n5275     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n5275     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n5275     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n5275     10290  node             vscode.lock\n5436     1720   node             proc/14828/cmdline\n5436     1720   node             14828/cmdline\n5436     1720   node             cmdline\n5436     1720   node             proc/12050/cmdline\n5436     1720   node             12050/cmdline\n5436     1720   node             cmdline\n5436     1720   node             proc/30931/cmdline\n5436     1720   node             30931/cmdline\n5436     1720   node             cmdline\n5436     1720   node             proc/31190/cmdline\n5436     1720   node             31190/cmdline\n5436     1720   node             cmdline\n5436     1720   node             proc/17505/cmdline\n5436     1720   node             17505/cmdline\n5436     1720   node             cmdline\n5638     1720   node             proc/14828/cmdline\n5638     1720   node             14828/cmdline\n5638     1720   node             cmdline\n5638     1720   node             proc/12050/cmdline\n5638     1720   node             12050/cmdline\n5638     1720   node             cmdline\n5638     1720   node             proc/30931/cmdline\n5638     1720   node             30931/cmdline\n5638     1720   node             cmdline\n5638     1720   node             proc/31190/cmdline\n5638     1720   node             31190/cmdline\n5638     1720   node             cmdline\n5638     1720   node             proc/17505/cmdline\n5638     1720   node             17505/cmdline\n5638     1720   node             cmdline\n5840     1720   node             proc/14828/cmdline\n5840     1720   node             14828/cmdline\n5840     1720   node             cmdline\n5840     1720   node             proc/12050/cmdline\n5840     1720   node             12050/cmdline\n5840     1720   node             cmdline\n5840     1720   node             proc/30931/cmdline\n5840     1720   node             30931/cmdline\n5840     1720   node             cmdline\n5840     1720   node             proc/31190/cmdline\n5840     1720   node             31190/cmdline\n5840     1720   node             cmdline\n5840     1720   node             proc/17505/cmdline\n5840     1720   node             17505/cmdline\n5840     1720   node             cmdline\n5942     10038  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n5942     10038  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n5942     10038  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n5942     10038  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n5942     10038  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n5942     10038  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n5942     10038  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n5942     10038  node             vscode.lock\n5942     10038  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n5942     10038  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n5942     10038  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n5942     10038  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n5942     10038  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n5942     10038  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n5942     10038  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n5942     10038  node             vscode.lock\n5942     1703   node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n5942     1703   node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n5942     1703   node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n5942     1703   node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n5942     1703   node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n5942     1703   node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n5942     1703   node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n5942     1703   node             vscode.lock\n5942     10049  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n5942     10049  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n5942     10049  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n5942     10049  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n5942     10049  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n5942     10049  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n5942     10049  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n5942     10049  node             vscode.lock\n6044     1720   node             proc/14828/cmdline\n6044     1720   node             14828/cmdline\n6044     1720   node             cmdline\n6044     1720   node             proc/12050/cmdline\n6044     1720   node             12050/cmdline\n6044     1720   node             cmdline\n6044     1720   node             proc/30931/cmdline\n6044     1720   node             30931/cmdline\n6044     1720   node             cmdline\n6044     1720   node             proc/31190/cmdline\n6044     1720   node             31190/cmdline\n6044     1720   node             cmdline\n6044     1720   node             proc/17505/cmdline\n6044     1720   node             17505/cmdline\n6044     1720   node             cmdline\n6127     10038  node             proc/meminfo\n6127     10038  node             meminfo\n6127     10038  node             home/yunwei/.vscode/c_cpp_properties.json\n6127     10038  node             yunwei/.vscode/c_cpp_properties.json\n6127     10038  node             .vscode/c_cpp_properties.json\n6127     10038  node             c_cpp_properties.json\n6247     1720   node             proc/14828/cmdline\n6247     1720   node             14828/cmdline\n6247     1720   node             cmdline\n6247     1720   node             proc/12050/cmdline\n6247     1720   node             12050/cmdline\n6247     1720   node             cmdline\n6247     1720   node             proc/30931/cmdline\n6247     1720   node             30931/cmdline\n6247     1720   node             cmdline\n6247     1720   node             proc/31190/cmdline\n6247     1720   node             31190/cmdline\n6247     1720   node             cmdline\n6247     1720   node             proc/17505/cmdline\n6247     1720   node             17505/cmdline\n6247     1720   node             cmdline\n6280     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n6280     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n6280     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n6280     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n6280     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n6280     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n6280     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n6280     10290  node             vscode.lock\n6280     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n6280     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n6280     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n6280     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n6280     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n6280     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n6280     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n6280     10290  node             vscode.lock\n6280     10290  node             home\n6280     10290  node             home/yunwei\n6280     10290  node             yunwei\n6280     10290  node             home/yunwei/.vscode-server\n6280     10290  node             yunwei/.vscode-server\n6280     10290  node             .vscode-server\n6280     10290  node             home/yunwei/.vscode-server/data\n6280     10290  node             yunwei/.vscode-server/data\n6280     10290  node             .vscode-server/data\n6280     10290  node             data\n6280     10290  node             home/yunwei/.vscode-server/data/User\n6280     10290  node             yunwei/.vscode-server/data/User\n6280     10290  node             .vscode-server/data/User\n6280     10290  node             data/User\n6280     10290  node             User\n6280     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n6280     10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n6280     10290  node             .vscode-server/data/User/workspaceStorage\n6280     10290  node             data/User/workspaceStorage\n6280     10290  node             User/workspaceStorage\n6280     10290  node             workspaceStorage\n6280     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n6280     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n6280     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n6280     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n6280     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n6280     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n6280     10290  node             683061573fc2bafa947b4d87342b0cd1\n6280     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n6280     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n6280     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n6280     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n6280     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n6280     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n6280     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n6280     10290  node             vscode.lock\n6280     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n6280     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n6280     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n6280     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n6280     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n6280     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n6280     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n6280     10290  node             vscode.lock\n6280     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n6280     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n6280     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n6280     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n6280     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n6280     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n6280     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n6280     10290  node             vscode.lock\n6280     10290  node             home\n6280     10290  node             home/yunwei\n6280     10290  node             yunwei\n6280     10290  node             home/yunwei/.vscode-server\n6280     10290  node             yunwei/.vscode-server\n6280     10290  node             .vscode-server\n6280     10290  node             home/yunwei/.vscode-server/data\n6280     10290  node             yunwei/.vscode-server/data\n6280     10290  node             .vscode-server/data\n6280     10290  node             data\n6280     10290  node             home/yunwei/.vscode-server/data/User\n6280     10290  node             yunwei/.vscode-server/data/User\n6280     10290  node             .vscode-server/data/User\n6280     10290  node             data/User\n6280     10290  node             User\n6280     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n6280     10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n6280     10290  node             .vscode-server/data/User/workspaceStorage\n6280     10290  node             data/User/workspaceStorage\n6280     10290  node             User/workspaceStorage\n6280     10290  node             workspaceStorage\n6280     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n6280     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n6280     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n6280     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n6280     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n6280     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n6280     10290  node             683061573fc2bafa947b4d87342b0cd1\n6280     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n6280     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n6280     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n6280     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n6280     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n6280     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n6280     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n6280     10290  node             vscode.lock\n6280     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n6280     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n6280     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n6280     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n6280     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n6280     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n6280     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n6280     10290  node             vscode.lock\n6280     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n6280     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n6280     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n6280     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n6280     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n6280     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n6280     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n6280     10290  node             vscode.lock\n6280     10290  node             home\n6280     10290  node             home/yunwei\n6280     10290  node             yunwei\n6280     10290  node             home/yunwei/.vscode-server\n6280     10290  node             yunwei/.vscode-server\n6280     10290  node             .vscode-server\n6280     10290  node             home/yunwei/.vscode-server/data\n6280     10290  node             yunwei/.vscode-server/data\n6280     10290  node             .vscode-server/data\n6280     10290  node             data\n6280     10290  node             home/yunwei/.vscode-server/data/User\n6280     10290  node             yunwei/.vscode-server/data/User\n6280     10290  node             .vscode-server/data/User\n6280     10290  node             data/User\n6280     10290  node             User\n6280     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n6280     10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n6280     10290  node             .vscode-server/data/User/workspaceStorage\n6280     10290  node             data/User/workspaceStorage\n6280     10290  node             User/workspaceStorage\n6280     10290  node             workspaceStorage\n6280     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n6280     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n6280     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n6280     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n6280     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n6280     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n6280     10290  node             683061573fc2bafa947b4d87342b0cd1\n6280     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n6280     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n6280     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n6280     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n6280     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n6280     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n6280     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n6280     10290  node             vscode.lock\n6280     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n6280     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n6280     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n6280     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n6280     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n6280     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n6280     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n6280     10290  node             vscode.lock\n6280     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n6280     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n6280     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n6280     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n6280     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n6280     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n6280     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n6280     10290  node             vscode.lock\n6450     1720   node             proc/14828/cmdline\n6450     1720   node             14828/cmdline\n6450     1720   node             cmdline\n6450     1720   node             proc/12050/cmdline\n6450     1720   node             12050/cmdline\n6450     1720   node             cmdline\n6450     1720   node             proc/30931/cmdline\n6450     1720   node             30931/cmdline\n6450     1720   node             cmdline\n6450     1720   node             proc/31190/cmdline\n6450     1720   node             31190/cmdline\n6450     1720   node             cmdline\n6450     1720   node             proc/17505/cmdline\n6450     1720   node             17505/cmdline\n6450     1720   node             cmdline\n6653     1720   node             proc/14828/cmdline\n6653     1720   node             14828/cmdline\n6653     1720   node             cmdline\n6653     1720   node             proc/12050/cmdline\n6653     1720   node             12050/cmdline\n6653     1720   node             cmdline\n6653     1720   node             proc/30931/cmdline\n6653     1720   node             30931/cmdline\n6653     1720   node             cmdline\n6653     1720   node             proc/31190/cmdline\n6653     1720   node             31190/cmdline\n6653     1720   node             cmdline\n6653     1720   node             proc/17505/cmdline\n6653     1720   node             17505/cmdline\n6653     1720   node             cmdline\n6855     1720   node             proc/14828/cmdline\n6855     1720   node             14828/cmdline\n6855     1720   node             cmdline\n6855     1720   node             proc/12050/cmdline\n6855     1720   node             12050/cmdline\n6855     1720   node             cmdline\n6855     1720   node             proc/30931/cmdline\n6855     1720   node             30931/cmdline\n6855     1720   node             cmdline\n6855     1720   node             proc/31190/cmdline\n6855     1720   node             31190/cmdline\n6855     1720   node             cmdline\n6855     1720   node             proc/17505/cmdline\n6855     1720   node             17505/cmdline\n6855     1720   node             cmdline\n6945     10038  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n6945     10038  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n6945     10038  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n6945     10038  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n6945     10038  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n6945     10038  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n6945     10038  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n6945     10038  node             vscode.lock\n6946     10038  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n6946     10038  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n6946     10038  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n6946     10038  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n6946     10038  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n6946     10038  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n6946     10038  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n6946     10038  node             vscode.lock\n6946     1703   node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n6946     1703   node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n6946     1703   node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n6946     1703   node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n6946     1703   node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n6946     1703   node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n6946     1703   node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n6946     1703   node             vscode.lock\n6946     10049  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n6946     10049  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n6946     10049  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n6946     10049  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n6946     10049  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n6946     10049  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n6946     10049  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n6946     10049  node             vscode.lock\n7058     1720   node             proc/14828/cmdline\n7058     1720   node             14828/cmdline\n7058     1720   node             cmdline\n7058     1720   node             proc/12050/cmdline\n7058     1720   node             12050/cmdline\n7058     1720   node             cmdline\n7058     1720   node             proc/30931/cmdline\n7058     1720   node             30931/cmdline\n7058     1720   node             cmdline\n7058     1720   node             proc/31190/cmdline\n7058     1720   node             31190/cmdline\n7058     1720   node             cmdline\n7058     1720   node             proc/17505/cmdline\n7058     1720   node             17505/cmdline\n7058     1720   node             cmdline\n7261     1720   node             proc/14828/cmdline\n7261     1720   node             14828/cmdline\n7261     1720   node             cmdline\n7261     1720   node             proc/12050/cmdline\n7261     1720   node             12050/cmdline\n7261     1720   node             cmdline\n7261     1720   node             proc/30931/cmdline\n7261     1720   node             30931/cmdline\n7261     1720   node             cmdline\n7261     1720   node             proc/31190/cmdline\n7261     1720   node             31190/cmdline\n7261     1720   node             cmdline\n7261     1720   node             proc/17505/cmdline\n7261     1720   node             17505/cmdline\n7261     1720   node             cmdline\n7283     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n7283     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n7283     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n7283     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n7283     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n7283     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n7283     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n7283     10290  node             vscode.lock\n7283     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n7283     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n7283     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n7283     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n7283     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n7283     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n7283     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n7283     10290  node             vscode.lock\n7283     10290  node             home\n7283     10290  node             home/yunwei\n7283     10290  node             yunwei\n7283     10290  node             home/yunwei/.vscode-server\n7283     10290  node             yunwei/.vscode-server\n7283     10290  node             .vscode-server\n7283     10290  node             home/yunwei/.vscode-server/data\n7283     10290  node             yunwei/.vscode-server/data\n7283     10290  node             .vscode-server/data\n7283     10290  node             data\n7283     10290  node             home/yunwei/.vscode-server/data/User\n7283     10290  node             yunwei/.vscode-server/data/User\n7283     10290  node             .vscode-server/data/User\n7283     10290  node             data/User\n7283     10290  node             User\n7283     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n7283     10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n7283     10290  node             .vscode-server/data/User/workspaceStorage\n7283     10290  node             data/User/workspaceStorage\n7283     10290  node             User/workspaceStorage\n7283     10290  node             workspaceStorage\n7283     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n7283     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n7283     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n7283     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n7283     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n7283     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n7283     10290  node             683061573fc2bafa947b4d87342b0cd1\n7283     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n7283     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n7283     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n7283     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n7283     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n7283     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n7283     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n7283     10290  node             vscode.lock\n7283     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n7283     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n7283     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n7283     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n7283     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n7283     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n7283     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n7283     10290  node             vscode.lock\n7283     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n7283     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n7283     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n7283     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n7283     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n7283     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n7283     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n7283     10290  node             vscode.lock\n7283     10290  node             home\n7283     10290  node             home/yunwei\n7283     10290  node             yunwei\n7283     10290  node             home/yunwei/.vscode-server\n7283     10290  node             yunwei/.vscode-server\n7283     10290  node             .vscode-server\n7283     10290  node             home/yunwei/.vscode-server/data\n7283     10290  node             yunwei/.vscode-server/data\n7283     10290  node             .vscode-server/data\n7283     10290  node             data\n7283     10290  node             home/yunwei/.vscode-server/data/User\n7283     10290  node             yunwei/.vscode-server/data/User\n7283     10290  node             .vscode-server/data/User\n7283     10290  node             data/User\n7283     10290  node             User\n7283     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n7283     10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n7283     10290  node             .vscode-server/data/User/workspaceStorage\n7283     10290  node             data/User/workspaceStorage\n7283     10290  node             User/workspaceStorage\n7283     10290  node             workspaceStorage\n7283     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n7283     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n7283     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n7283     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n7283     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n7283     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n7283     10290  node             683061573fc2bafa947b4d87342b0cd1\n7283     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n7283     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n7283     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n7283     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n7283     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n7283     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n7283     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n7283     10290  node             vscode.lock\n7283     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n7283     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n7283     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n7283     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n7283     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n7283     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n7283     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n7283     10290  node             vscode.lock\n7283     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n7283     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n7283     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n7283     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n7283     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n7283     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n7283     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n7283     10290  node             vscode.lock\n7283     10290  node             home\n7283     10290  node             home/yunwei\n7283     10290  node             yunwei\n7283     10290  node             home/yunwei/.vscode-server\n7283     10290  node             yunwei/.vscode-server\n7283     10290  node             .vscode-server\n7283     10290  node             home/yunwei/.vscode-server/data\n7283     10290  node             yunwei/.vscode-server/data\n7283     10290  node             .vscode-server/data\n7283     10290  node             data\n7283     10290  node             home/yunwei/.vscode-server/data/User\n7283     10290  node             yunwei/.vscode-server/data/User\n7283     10290  node             .vscode-server/data/User\n7283     10290  node             data/User\n7283     10290  node             User\n7283     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n7283     10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n7283     10290  node             .vscode-server/data/User/workspaceStorage\n7283     10290  node             data/User/workspaceStorage\n7283     10290  node             User/workspaceStorage\n7283     10290  node             workspaceStorage\n7283     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n7283     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n7283     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n7283     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n7283     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n7283     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n7283     10290  node             683061573fc2bafa947b4d87342b0cd1\n7283     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n7283     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n7283     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n7283     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n7283     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n7283     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n7283     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n7283     10290  node             vscode.lock\n7283     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n7283     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n7283     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n7283     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n7283     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n7283     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n7283     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n7283     10290  node             vscode.lock\n7283     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n7283     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n7283     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n7283     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n7283     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n7283     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n7283     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n7283     10290  node             vscode.lock\n7464     1720   node             proc/14828/cmdline\n7464     1720   node             14828/cmdline\n7464     1720   node             cmdline\n7465     1720   node             proc/12050/cmdline\n7465     1720   node             12050/cmdline\n7465     1720   node             cmdline\n7465     1720   node             proc/30931/cmdline\n7465     1720   node             30931/cmdline\n7465     1720   node             cmdline\n7465     1720   node             proc/31190/cmdline\n7465     1720   node             31190/cmdline\n7465     1720   node             cmdline\n7465     1720   node             proc/17505/cmdline\n7465     1720   node             17505/cmdline\n7465     1720   node             cmdline\n7664     1720   node             proc/14828/cmdline\n7664     1720   node             14828/cmdline\n7664     1720   node             cmdline\n7665     1720   node             proc/12050/cmdline\n7665     1720   node             12050/cmdline\n7665     1720   node             cmdline\n7665     1720   node             proc/30931/cmdline\n7665     1720   node             30931/cmdline\n7665     1720   node             cmdline\n7665     1720   node             proc/31190/cmdline\n7665     1720   node             31190/cmdline\n7665     1720   node             cmdline\n7665     1720   node             proc/17505/cmdline\n7665     1720   node             17505/cmdline\n7665     1720   node             cmdline\n7864     1720   node             proc/14828/cmdline\n7882     1720   node             14828/cmdline\n7882     1720   node             cmdline\n7883     1720   node             proc/12050/cmdline\n7883     1720   node             12050/cmdline\n7883     1720   node             cmdline\n7883     1720   node             proc/30931/cmdline\n7883     1720   node             30931/cmdline\n7883     1720   node             cmdline\n7883     1720   node             proc/31190/cmdline\n7883     1720   node             31190/cmdline\n7883     1720   node             cmdline\n7883     1720   node             proc/17505/cmdline\n7883     1720   node             17505/cmdline\n7883     1720   node             cmdline\n7947     10038  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n7947     10038  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n7947     10038  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n7947     10038  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n7947     10038  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n7947     10038  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n7947     10038  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n7947     10038  node             vscode.lock\n7947     10038  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n7947     10038  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n7947     10038  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n7947     10038  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n7947     10038  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n7947     10038  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n7947     10038  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n7947     10038  node             vscode.lock\n7947     1703   node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n7947     1703   node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n7947     1703   node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n7947     1703   node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n7947     1703   node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n7947     1703   node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n7947     1703   node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n7947     1703   node             vscode.lock\n7947     10049  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n7947     10049  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n7947     10049  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n7947     10049  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n7947     10049  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n7947     10049  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n7947     10049  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n7947     10049  node             vscode.lock\n8048     818    irqbalance       proc/interrupts\n8048     818    irqbalance       interrupts\n8048     818    irqbalance       proc/stat\n8048     818    irqbalance       stat\n8066     1720   node             proc/14828/cmdline\n8066     1720   node             14828/cmdline\n8066     1720   node             cmdline\n8085     1720   node             proc/12050/cmdline\n8085     1720   node             12050/cmdline\n8085     1720   node             cmdline\n8085     1720   node             proc/30931/cmdline\n8085     1720   node             30931/cmdline\n8085     1720   node             cmdline\n8085     1720   node             proc/31190/cmdline\n8085     1720   node             31190/cmdline\n8085     1720   node             cmdline\n8085     1720   node             proc/17505/cmdline\n8085     1720   node             17505/cmdline\n8085     1720   node             cmdline\n8268     1720   node             proc/14828/cmdline\n8268     1720   node             14828/cmdline\n8268     1720   node             cmdline\n8279     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n8279     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n8279     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n8279     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n8279     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n8279     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n8279     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n8279     10290  node             vscode.lock\n8279     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n8279     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n8279     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n8279     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n8279     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n8279     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n8279     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n8279     10290  node             vscode.lock\n8279     10290  node             home\n8279     10290  node             home/yunwei\n8279     10290  node             yunwei\n8279     10290  node             home/yunwei/.vscode-server\n8279     10290  node             yunwei/.vscode-server\n8279     10290  node             .vscode-server\n8279     10290  node             home/yunwei/.vscode-server/data\n8279     10290  node             yunwei/.vscode-server/data\n8279     10290  node             .vscode-server/data\n8279     10290  node             data\n8279     10290  node             home/yunwei/.vscode-server/data/User\n8279     10290  node             yunwei/.vscode-server/data/User\n8279     10290  node             .vscode-server/data/User\n8279     10290  node             data/User\n8279     10290  node             User\n8279     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n8279     10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n8279     10290  node             .vscode-server/data/User/workspaceStorage\n8279     10290  node             data/User/workspaceStorage\n8279     10290  node             User/workspaceStorage\n8279     10290  node             workspaceStorage\n8279     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n8279     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n8279     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n8279     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n8279     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n8279     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n8279     10290  node             683061573fc2bafa947b4d87342b0cd1\n8279     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n8279     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n8279     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n8279     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n8279     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n8279     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n8279     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n8279     10290  node             vscode.lock\n8279     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n8279     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n8279     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n8279     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n8279     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n8279     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n8279     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n8279     10290  node             vscode.lock\n8279     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n8279     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n8279     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n8279     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n8279     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n8279     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n8279     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n8279     10290  node             vscode.lock\n8279     10290  node             home\n8279     10290  node             home/yunwei\n8279     10290  node             yunwei\n8279     10290  node             home/yunwei/.vscode-server\n8279     10290  node             yunwei/.vscode-server\n8279     10290  node             .vscode-server\n8279     10290  node             home/yunwei/.vscode-server/data\n8279     10290  node             yunwei/.vscode-server/data\n8279     10290  node             .vscode-server/data\n8279     10290  node             data\n8279     10290  node             home/yunwei/.vscode-server/data/User\n8279     10290  node             yunwei/.vscode-server/data/User\n8279     10290  node             .vscode-server/data/User\n8279     10290  node             data/User\n8279     10290  node             User\n8279     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n8279     10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n8279     10290  node             .vscode-server/data/User/workspaceStorage\n8279     10290  node             data/User/workspaceStorage\n8279     10290  node             User/workspaceStorage\n8279     10290  node             workspaceStorage\n8279     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n8279     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n8279     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n8279     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n8279     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n8279     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n8279     10290  node             683061573fc2bafa947b4d87342b0cd1\n8279     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n8279     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n8279     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n8279     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n8279     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n8279     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n8279     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n8279     10290  node             vscode.lock\n8279     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n8279     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n8279     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n8279     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n8279     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n8279     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n8279     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n8279     10290  node             vscode.lock\n8279     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n8279     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n8279     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n8279     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n8279     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n8279     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n8279     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n8279     10290  node             vscode.lock\n8279     10290  node             home\n8279     10290  node             home/yunwei\n8279     10290  node             yunwei\n8279     10290  node             home/yunwei/.vscode-server\n8279     10290  node             yunwei/.vscode-server\n8279     10290  node             .vscode-server\n8279     10290  node             home/yunwei/.vscode-server/data\n8279     10290  node             yunwei/.vscode-server/data\n8279     10290  node             .vscode-server/data\n8279     10290  node             data\n8279     10290  node             home/yunwei/.vscode-server/data/User\n8279     10290  node             yunwei/.vscode-server/data/User\n8279     10290  node             .vscode-server/data/User\n8279     10290  node             data/User\n8279     10290  node             User\n8279     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n8279     10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n8279     10290  node             .vscode-server/data/User/workspaceStorage\n8279     10290  node             data/User/workspaceStorage\n8279     10290  node             User/workspaceStorage\n8279     10290  node             workspaceStorage\n8279     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n8279     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n8279     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n8279     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n8279     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n8279     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n8279     10290  node             683061573fc2bafa947b4d87342b0cd1\n8279     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n8279     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n8279     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n8279     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n8279     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n8279     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n8279     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n8279     10290  node             vscode.lock\n8279     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n8279     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n8279     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n8279     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n8279     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n8279     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n8279     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n8279     10290  node             vscode.lock\n8279     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n8279     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n8279     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n8279     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n8279     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n8279     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n8279     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n8279     10290  node             vscode.lock\n8286     1720   node             proc/12050/cmdline\n8286     1720   node             12050/cmdline\n8286     1720   node             cmdline\n8286     1720   node             proc/30931/cmdline\n8286     1720   node             30931/cmdline\n8286     1720   node             cmdline\n8286     1720   node             proc/31190/cmdline\n8286     1720   node             31190/cmdline\n8286     1720   node             cmdline\n8286     1720   node             proc/17505/cmdline\n8286     1720   node             17505/cmdline\n8286     1720   node             cmdline\n8469     1720   node             proc/14828/cmdline\n8469     1720   node             14828/cmdline\n8469     1720   node             cmdline\n8486     1720   node             proc/12050/cmdline\n8486     1720   node             12050/cmdline\n8486     1720   node             cmdline\n8486     1720   node             proc/30931/cmdline\n8486     1720   node             30931/cmdline\n8486     1720   node             cmdline\n8486     1720   node             proc/31190/cmdline\n8486     1720   node             31190/cmdline\n8486     1720   node             cmdline\n8486     1720   node             proc/17505/cmdline\n8486     1720   node             17505/cmdline\n8486     1720   node             cmdline\n8628     10038  node             proc/meminfo\n8628     10038  node             meminfo\n8628     10038  node             home/yunwei/.vscode/c_cpp_properties.json\n8628     10038  node             yunwei/.vscode/c_cpp_properties.json\n8628     10038  node             .vscode/c_cpp_properties.json\n8628     10038  node             c_cpp_properties.json\n8672     1720   node             proc/14828/cmdline\n8672     1720   node             14828/cmdline\n8672     1720   node             cmdline\n8686     1720   node             proc/12050/cmdline\n8686     1720   node             12050/cmdline\n8686     1720   node             cmdline\n8686     1720   node             proc/30931/cmdline\n8686     1720   node             30931/cmdline\n8686     1720   node             cmdline\n8686     1720   node             proc/31190/cmdline\n8686     1720   node             31190/cmdline\n8686     1720   node             cmdline\n8686     1720   node             proc/17505/cmdline\n8686     1720   node             17505/cmdline\n8686     1720   node             cmdline\n8875     1720   node             proc/14828/cmdline\n8875     1720   node             14828/cmdline\n8875     1720   node             cmdline\n8888     1720   node             proc/12050/cmdline\n8888     1720   node             12050/cmdline\n8888     1720   node             cmdline\n8888     1720   node             proc/30931/cmdline\n8888     1720   node             30931/cmdline\n8888     1720   node             cmdline\n8888     1720   node             proc/31190/cmdline\n8888     1720   node             31190/cmdline\n8888     1720   node             cmdline\n8888     1720   node             proc/17505/cmdline\n8888     1720   node             17505/cmdline\n8888     1720   node             cmdline\n8950     10038  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n8950     10038  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n8950     10038  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n8950     10038  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n8950     10038  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n8950     10038  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n8950     10038  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n8950     10038  node             vscode.lock\n8952     10038  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n8952     10038  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n8952     10038  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n8952     10038  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n8952     10038  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n8952     10038  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n8952     10038  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n8952     10038  node             vscode.lock\n8952     1703   node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n8952     1703   node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n8952     1703   node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n8952     1703   node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n8952     1703   node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n8952     1703   node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n8952     1703   node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n8952     1703   node             vscode.lock\n8952     10049  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n8952     10049  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n8952     10049  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n8952     10049  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n8952     10049  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n8952     10049  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n8952     10049  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n8952     10049  node             vscode.lock\n9075     1720   node             proc/14828/cmdline\n9075     1720   node             14828/cmdline\n9075     1720   node             cmdline\n9089     1720   node             proc/12050/cmdline\n9089     1720   node             12050/cmdline\n9089     1720   node             cmdline\n9089     1720   node             proc/30931/cmdline\n9089     1720   node             30931/cmdline\n9089     1720   node             cmdline\n9089     1720   node             proc/31190/cmdline\n9089     1720   node             31190/cmdline\n9089     1720   node             cmdline\n9089     1720   node             proc/17505/cmdline\n9089     1720   node             17505/cmdline\n9089     1720   node             cmdline\n9276     1720   node             proc/14828/cmdline\n9277     1720   node             14828/cmdline\n9277     1720   node             cmdline\n9288     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n9288     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n9288     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n9288     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n9288     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n9288     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n9288     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n9288     10290  node             vscode.lock\n9288     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n9288     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n9288     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n9288     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n9288     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n9288     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n9288     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n9288     10290  node             vscode.lock\n9288     10290  node             home\n9288     10290  node             home/yunwei\n9288     10290  node             yunwei\n9288     10290  node             home/yunwei/.vscode-server\n9288     10290  node             yunwei/.vscode-server\n9288     10290  node             .vscode-server\n9288     10290  node             home/yunwei/.vscode-server/data\n9288     10290  node             yunwei/.vscode-server/data\n9288     10290  node             .vscode-server/data\n9288     10290  node             data\n9288     10290  node             home/yunwei/.vscode-server/data/User\n9288     10290  node             yunwei/.vscode-server/data/User\n9288     10290  node             .vscode-server/data/User\n9288     10290  node             data/User\n9288     10290  node             User\n9288     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n9288     10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n9288     10290  node             .vscode-server/data/User/workspaceStorage\n9288     10290  node             data/User/workspaceStorage\n9288     10290  node             User/workspaceStorage\n9288     10290  node             workspaceStorage\n9288     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n9288     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n9288     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n9288     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n9288     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n9288     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n9288     10290  node             683061573fc2bafa947b4d87342b0cd1\n9288     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n9288     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n9288     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n9288     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n9288     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n9288     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n9288     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n9288     10290  node             vscode.lock\n9288     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n9288     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n9288     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n9288     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n9288     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n9288     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n9288     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n9288     10290  node             vscode.lock\n9288     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n9288     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n9288     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n9288     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n9288     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n9288     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n9288     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n9288     10290  node             vscode.lock\n9288     10290  node             home\n9288     10290  node             home/yunwei\n9288     10290  node             yunwei\n9288     10290  node             home/yunwei/.vscode-server\n9288     10290  node             yunwei/.vscode-server\n9288     10290  node             .vscode-server\n9288     10290  node             home/yunwei/.vscode-server/data\n9288     10290  node             yunwei/.vscode-server/data\n9288     10290  node             .vscode-server/data\n9288     10290  node             data\n9288     10290  node             home/yunwei/.vscode-server/data/User\n9288     10290  node             yunwei/.vscode-server/data/User\n9288     10290  node             .vscode-server/data/User\n9288     10290  node             data/User\n9288     10290  node             User\n9288     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n9288     10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n9288     10290  node             .vscode-server/data/User/workspaceStorage\n9288     10290  node             data/User/workspaceStorage\n9288     10290  node             User/workspaceStorage\n9288     10290  node             workspaceStorage\n9288     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n9288     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n9288     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n9288     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n9288     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n9288     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n9288     10290  node             683061573fc2bafa947b4d87342b0cd1\n9288     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n9288     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n9288     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n9288     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n9288     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n9288     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n9288     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n9288     10290  node             vscode.lock\n9288     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n9288     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n9288     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n9288     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n9288     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n9288     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n9288     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n9288     10290  node             vscode.lock\n9288     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n9288     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n9288     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n9288     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n9288     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n9288     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n9288     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n9288     10290  node             vscode.lock\n9288     10290  node             home\n9288     10290  node             home/yunwei\n9288     10290  node             yunwei\n9288     10290  node             home/yunwei/.vscode-server\n9288     10290  node             yunwei/.vscode-server\n9288     10290  node             .vscode-server\n9288     10290  node             home/yunwei/.vscode-server/data\n9288     10290  node             yunwei/.vscode-server/data\n9288     10290  node             .vscode-server/data\n9288     10290  node             data\n9288     10290  node             home/yunwei/.vscode-server/data/User\n9288     10290  node             yunwei/.vscode-server/data/User\n9288     10290  node             .vscode-server/data/User\n9288     10290  node             data/User\n9288     10290  node             User\n9288     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n9288     10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n9288     10290  node             .vscode-server/data/User/workspaceStorage\n9288     10290  node             data/User/workspaceStorage\n9288     10290  node             User/workspaceStorage\n9288     10290  node             workspaceStorage\n9288     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n9288     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n9288     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n9288     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n9288     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n9288     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n9288     10290  node             683061573fc2bafa947b4d87342b0cd1\n9288     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n9288     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n9288     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n9288     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n9288     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n9288     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n9288     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n9288     10290  node             vscode.lock\n9288     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n9288     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n9288     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n9288     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n9288     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n9288     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n9288     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n9288     10290  node             vscode.lock\n9288     10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n9288     10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n9288     10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n9288     10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n9288     10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n9288     10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n9288     10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n9288     10290  node             vscode.lock\n9289     1720   node             proc/12050/cmdline\n9289     1720   node             12050/cmdline\n9289     1720   node             cmdline\n9289     1720   node             proc/30931/cmdline\n9289     1720   node             30931/cmdline\n9289     1720   node             cmdline\n9289     1720   node             proc/31190/cmdline\n9289     1720   node             31190/cmdline\n9289     1720   node             cmdline\n9289     1720   node             proc/17505/cmdline\n9289     1720   node             17505/cmdline\n9289     1720   node             cmdline\n9485     1720   node             proc/14828/cmdline\n9485     1720   node             14828/cmdline\n9485     1720   node             cmdline\n9492     1720   node             proc/12050/cmdline\n9492     1720   node             12050/cmdline\n9492     1720   node             cmdline\n9492     1720   node             proc/30931/cmdline\n9492     1720   node             30931/cmdline\n9492     1720   node             cmdline\n9492     1720   node             proc/31190/cmdline\n9492     1720   node             31190/cmdline\n9492     1720   node             cmdline\n9492     1720   node             proc/17505/cmdline\n9492     1720   node             17505/cmdline\n9492     1720   node             cmdline\n9511     409    systemd-journal  proc/19214/status\n9511     409    systemd-journal  19214/status\n9511     409    systemd-journal  status\n9511     409    systemd-journal  proc/19214/status\n9511     409    systemd-journal  19214/status\n9511     409    systemd-journal  status\n9511     409    systemd-journal  proc/19214/comm\n9511     409    systemd-journal  19214/comm\n9511     409    systemd-journal  comm\n9511     409    systemd-journal  proc/19214/exe\n9511     409    systemd-journal  19214/exe\n9511     409    systemd-journal  exe\n9511     409    systemd-journal  proc/19214/cmdline\n9511     409    systemd-journal  19214/cmdline\n9511     409    systemd-journal  cmdline\n9511     409    systemd-journal  proc/19214/status\n9511     409    systemd-journal  19214/status\n9511     409    systemd-journal  status\n9511     409    systemd-journal  proc/19214/attr/current\n9511     409    systemd-journal  19214/attr/current\n9511     409    systemd-journal  attr/current\n9511     409    systemd-journal  current\n9511     409    systemd-journal  proc/19214/sessionid\n9511     409    systemd-journal  19214/sessionid\n9511     409    systemd-journal  sessionid\n9511     409    systemd-journal  proc/19214/loginuid\n9511     409    systemd-journal  19214/loginuid\n9511     409    systemd-journal  loginuid\n9511     409    systemd-journal  proc/19214/cgroup\n9511     409    systemd-journal  19214/cgroup\n9511     409    systemd-journal  cgroup\n9511     409    systemd-journal  run/systemd/units/invocation:fwupd-refresh.service\n9511     409    systemd-journal  systemd/units/invocation:fwupd-refresh.service\n9511     409    systemd-journal  units/invocation:fwupd-refresh.service\n9511     409    systemd-journal  invocation:fwupd-refresh.service\n9511     409    systemd-journal  run/systemd/units/log-level-max:fwupd-refresh.service\n9511     409    systemd-journal  systemd/units/log-level-max:fwupd-refresh.service\n9511     409    systemd-journal  units/log-level-max:fwupd-refresh.service\n9511     409    systemd-journal  log-level-max:fwupd-refresh.service\n9511     409    systemd-journal  run/systemd/units/log-extra-fields:fwupd-refresh.service\n9511     409    systemd-journal  systemd/units/log-extra-fields:fwupd-refresh.service\n9511     409    systemd-journal  units/log-extra-fields:fwupd-refresh.service\n9511     409    systemd-journal  log-extra-fields:fwupd-refresh.service\n9511     409    systemd-journal  log-extra-fields:fwupd-refresh.service\n9511     409    systemd-journal  run/systemd/units/log-rate-limit-interval:fwupd-refresh.service\n9511     409    systemd-journal  systemd/units/log-rate-limit-interval:fwupd-refresh.service\n9511     409    systemd-journal  units/log-rate-limit-interval:fwupd-refresh.service\n9511     409    systemd-journal  log-rate-limit-interval:fwupd-refresh.service\n9511     409    systemd-journal  run/systemd/units/log-rate-limit-burst:fwupd-refresh.service\n9511     409    systemd-journal  systemd/units/log-rate-limit-burst:fwupd-refresh.service\n9511     409    systemd-journal  units/log-rate-limit-burst:fwupd-refresh.service\n9511     409    systemd-journal  log-rate-limit-burst:fwupd-refresh.service\n9511     409    systemd-journal  run/systemd/journal/syslog\n9511     409    systemd-journal  systemd/journal/syslog\n9511     409    systemd-journal  journal/syslog\n9511     409    systemd-journal  syslog\n9511     409    systemd-journal  var/log/journal/67922be613574cad92bec8b012036c37\n9511     409    systemd-journal  log/journal/67922be613574cad92bec8b012036c37\n9511     409    systemd-journal  journal/67922be613574cad92bec8b012036c37\n9511     409    systemd-journal  67922be613574cad92bec8b012036c37\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-0000000000015662-000606\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-000000000000d02d-000605\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-0000000000015688-000606\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-000000000000c286-000604\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-000000000000c2bb-000604\n9511     409    systemd-journal  user-1000@34447659dff2459eb6e88620be71b20f-000000000000e24b-000\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-000000000000c2c1-000604\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-000000000001566f-000606\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-000000000001569a-000606\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-0000000000015710-000606\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-000000000000d091-000605\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-000000000000c280-000604\n9511     409    systemd-journal  system.journal\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-000000000000d8dd-000605\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-0000000000014cbf-000605\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-000000000000c2b8-000604\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-00000000000156aa-000606\n9511     409    systemd-journal  system@000606403a2214c5-e78b89ca15c2c120.journal~\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-000000000000d0a9-000605\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-000000000000c28d-000604\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-000000000000c296-000604\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-00000000000156a4-000606\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-0000000000015665-000606\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-000000000001567d-000606\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-000000000000d048-000605\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-000000000001569d-000606\n9511     409    systemd-journal  user-1000@6179e5b194e0427aa5ed23852618ee97-0000000000015737-000\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-000000000000c2a6-000604\n9511     409    systemd-journal  user-1000@34447659dff2459eb6e88620be71b20f-000000000000e4fa-000\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-000000000000cca2-000605\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-000000000001568e-000606\n9511     409    systemd-journal  user-1000@6b69531fa4ac494f8575bea64e1f7651-000000000000d91e-000\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-000000000000c29c-000604\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-000000000001568b-000606\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-000000000000c289-000604\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-000000000001326f-000605\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-000000000000c2af-000604\n9511     409    systemd-journal  user-1000@af442bad58814b319d83faac9ba64369-000000000000ccb9-000\n9511     409    systemd-journal  user-1000@af442bad58814b319d83faac9ba64369-000000000000c36d-000\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-000000000000d7ff-000605\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-000000000000c293-000604\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-000000000000e4f4-000605\n9511     409    systemd-journal  user-1000@6179e5b194e0427aa5ed23852618ee97-0000000000014d71-000\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-0000000000015685-000606\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-000000000000c2b5-000604\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-000000000000c27d-000604\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-000000000000c2b2-000604\n9511     409    systemd-journal  user-1000@6b69531fa4ac494f8575bea64e1f7651-000000000000d885-000\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-000000000000c2ab-000604\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-000000000000edfb-000605\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-0000000000015728-000606\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-00000000000156a1-000606\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-00000000000156fa-000606\n9511     409    systemd-journal  user-1000@6179e5b194e0427aa5ed23852618ee97-00000000000156b5-000\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-0000000000011734-000605\n9511     409    systemd-journal  system@000605b056a4c17b-2e90214a064568cd.journal~\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-000000000000cead-000605\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-000000000000d90b-000605\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-000000000000c2d3-000604\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-0000000000014caf-000605\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-000000000000c2f1-000604\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-000000000000e1e4-000605\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-000000000000c2be-000604\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-000000000000c290-000604\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-0000000000015694-000606\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-000000000000c283-000604\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-000000000000d027-000605\n9511     409    systemd-journal  user-1000@af442bad58814b319d83faac9ba64369-000000000000ceb9-000\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-000000000001039c-000605\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-000000000000c27a-000604\n9511     409    systemd-journal  user-1000@6179e5b194e0427aa5ed23852618ee97-0000000000016330-000\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-000000000001565f-000606\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-000000000000d035-000605\n9511     409    systemd-journal  user-1000.journal\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-0000000000011747-000605\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-00000000000165b4-000606\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-000000000001570b-000606\n9511     409    systemd-journal  user-1000@6179e5b194e0427aa5ed23852618ee97-000000000000ee7d-000\n9511     409    systemd-journal  user-1000@6179e5b194e0427aa5ed23852618ee97-000000000000fd32-000\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-000000000000c299-000604\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-0000000000011731-000605\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-000000000000c2c8-000604\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-000000000000c2f5-000604\n9511     409    systemd-journal  system@0006064e73e03a92-98dd15d939b8dea7.journal~\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-0000000000015659-000606\n9511     409    systemd-journal  user-1000@6179e5b194e0427aa5ed23852618ee97-000000000001328a-000\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-0000000000015697-000606\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-000000000001564a-000606\n9511     409    systemd-journal  system@00060570b56feb24-25205eae0fdf4052.journal~\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-000000000000cc70-000605\n9511     409    systemd-journal  user-1000@6179e5b194e0427aa5ed23852618ee97-000000000001174e-000\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-0000000000015a0c-000606\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-000000000001567a-000606\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-0000000000015669-000606\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-000000000000c2a0-000604\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-0000000000015719-000606\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-0000000000015682-000606\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-0000000000015691-000606\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-00000000000156a7-000606\n9511     409    systemd-journal  system@67c15c62282b46458129610e3a94815a-000000000000d000-000605\n9511     409    systemd-journal  run/log/journal/67922be613574cad92bec8b012036c37/system.journal\n9511     409    systemd-journal  log/journal/67922be613574cad92bec8b012036c37/system.journal\n9511     409    systemd-journal  journal/67922be613574cad92bec8b012036c37/system.journal\n9511     409    systemd-journal  67922be613574cad92bec8b012036c37/system.journal\n9688     1720   node             proc/14828/cmdline\n9688     1720   node             14828/cmdline\n9688     1720   node             cmdline\n9697     1720   node             proc/12050/cmdline\n9697     1720   node             12050/cmdline\n9697     1720   node             cmdline\n9697     1720   node             proc/30931/cmdline\n9697     1720   node             30931/cmdline\n9697     1720   node             cmdline\n9697     1720   node             proc/31190/cmdline\n9697     1720   node             31190/cmdline\n9697     1720   node             cmdline\n9697     1720   node             proc/17505/cmdline\n9697     1720   node             17505/cmdline\n9697     1720   node             cmdline\n9889     1720   node             proc/14828/cmdline\n9889     1720   node             14828/cmdline\n9889     1720   node             cmdline\n9897     1720   node             proc/12050/cmdline\n9897     1720   node             12050/cmdline\n9897     1720   node             cmdline\n9897     1720   node             proc/30931/cmdline\n9897     1720   node             30931/cmdline\n9897     1720   node             cmdline\n9897     1720   node             proc/31190/cmdline\n9897     1720   node             31190/cmdline\n9897     1720   node             cmdline\n9897     1720   node             proc/17505/cmdline\n9897     1720   node             17505/cmdline\n9897     1720   node             cmdline\n9953     10038  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n9953     10038  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n9953     10038  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n9953     10038  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n9953     10038  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n9953     10038  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n9953     10038  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n9953     10038  node             vscode.lock\n9953     10038  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n9953     10038  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n9953     10038  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n9953     10038  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n9953     10038  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n9953     10038  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n9953     10038  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n9953     10038  node             vscode.lock\n9954     1703   node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n9954     1703   node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n9954     1703   node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n9954     1703   node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n9954     1703   node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n9954     1703   node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n9954     1703   node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n9954     1703   node             vscode.lock\n9954     10049  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n9954     10049  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n9954     10049  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n9954     10049  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n9954     10049  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n9954     10049  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n9954     10049  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n9954     10049  node             vscode.lock\n10021    572    vmtoolsd         etc/vmware-tools/tools-global.conf\n10021    572    vmtoolsd         vmware-tools/tools-global.conf\n10021    572    vmtoolsd         tools-global.conf\n10021    572    vmtoolsd         etc/vmware-tools/tools.conf\n10021    572    vmtoolsd         vmware-tools/tools.conf\n10021    572    vmtoolsd         tools.conf\n10093    1720   node             proc/14828/cmdline\n10093    1720   node             14828/cmdline\n10093    1720   node             cmdline\n10101    1720   node             proc/12050/cmdline\n10101    1720   node             12050/cmdline\n10101    1720   node             cmdline\n10101    1720   node             proc/30931/cmdline\n10101    1720   node             30931/cmdline\n10101    1720   node             cmdline\n10101    1720   node             proc/31190/cmdline\n10101    1720   node             31190/cmdline\n10101    1720   node             cmdline\n10101    1720   node             proc/17505/cmdline\n10101    1720   node             17505/cmdline\n10101    1720   node             cmdline\n10289    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n10289    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n10289    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n10289    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n10289    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n10289    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n10289    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n10289    10290  node             vscode.lock\n10289    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n10289    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n10289    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n10289    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n10289    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n10289    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n10289    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n10289    10290  node             vscode.lock\n10289    10290  node             home\n10289    10290  node             home/yunwei\n10289    10290  node             yunwei\n10289    10290  node             home/yunwei/.vscode-server\n10289    10290  node             yunwei/.vscode-server\n10289    10290  node             .vscode-server\n10289    10290  node             home/yunwei/.vscode-server/data\n10289    10290  node             yunwei/.vscode-server/data\n10289    10290  node             .vscode-server/data\n10289    10290  node             data\n10289    10290  node             home/yunwei/.vscode-server/data/User\n10289    10290  node             yunwei/.vscode-server/data/User\n10289    10290  node             .vscode-server/data/User\n10289    10290  node             data/User\n10289    10290  node             User\n10289    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n10289    10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n10289    10290  node             .vscode-server/data/User/workspaceStorage\n10289    10290  node             data/User/workspaceStorage\n10289    10290  node             User/workspaceStorage\n10289    10290  node             workspaceStorage\n10289    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n10289    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n10289    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n10289    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n10289    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n10289    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n10289    10290  node             683061573fc2bafa947b4d87342b0cd1\n10289    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n10289    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n10289    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n10289    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n10289    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n10289    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n10289    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n10289    10290  node             vscode.lock\n10289    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n10289    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n10289    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n10289    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n10289    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n10289    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n10289    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n10289    10290  node             vscode.lock\n10289    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n10289    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n10289    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n10289    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n10289    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n10289    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n10289    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n10289    10290  node             vscode.lock\n10289    10290  node             home\n10289    10290  node             home/yunwei\n10289    10290  node             yunwei\n10289    10290  node             home/yunwei/.vscode-server\n10289    10290  node             yunwei/.vscode-server\n10289    10290  node             .vscode-server\n10289    10290  node             home/yunwei/.vscode-server/data\n10289    10290  node             yunwei/.vscode-server/data\n10289    10290  node             .vscode-server/data\n10289    10290  node             data\n10289    10290  node             home/yunwei/.vscode-server/data/User\n10289    10290  node             yunwei/.vscode-server/data/User\n10289    10290  node             .vscode-server/data/User\n10289    10290  node             data/User\n10289    10290  node             User\n10289    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n10289    10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n10289    10290  node             .vscode-server/data/User/workspaceStorage\n10289    10290  node             data/User/workspaceStorage\n10289    10290  node             User/workspaceStorage\n10289    10290  node             workspaceStorage\n10289    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n10289    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n10289    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n10289    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n10289    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n10289    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n10289    10290  node             683061573fc2bafa947b4d87342b0cd1\n10289    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n10289    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n10289    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n10289    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n10289    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n10289    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n10289    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n10289    10290  node             vscode.lock\n10289    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n10289    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n10289    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n10289    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n10289    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n10289    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n10289    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n10289    10290  node             vscode.lock\n10289    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n10289    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n10289    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n10289    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n10289    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n10289    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n10289    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n10289    10290  node             vscode.lock\n10289    10290  node             home\n10289    10290  node             home/yunwei\n10289    10290  node             yunwei\n10289    10290  node             home/yunwei/.vscode-server\n10289    10290  node             yunwei/.vscode-server\n10289    10290  node             .vscode-server\n10289    10290  node             home/yunwei/.vscode-server/data\n10289    10290  node             yunwei/.vscode-server/data\n10289    10290  node             .vscode-server/data\n10289    10290  node             data\n10289    10290  node             home/yunwei/.vscode-server/data/User\n10289    10290  node             yunwei/.vscode-server/data/User\n10289    10290  node             .vscode-server/data/User\n10289    10290  node             data/User\n10289    10290  node             User\n10289    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n10289    10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n10289    10290  node             .vscode-server/data/User/workspaceStorage\n10289    10290  node             data/User/workspaceStorage\n10289    10290  node             User/workspaceStorage\n10289    10290  node             workspaceStorage\n10289    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n10289    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n10289    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n10289    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n10289    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n10289    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n10289    10290  node             683061573fc2bafa947b4d87342b0cd1\n10289    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n10289    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n10289    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n10289    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n10289    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n10289    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n10289    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n10289    10290  node             vscode.lock\n10289    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n10289    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n10289    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n10289    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n10289    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n10289    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n10289    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n10289    10290  node             vscode.lock\n10289    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n10289    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n10289    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n10289    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n10289    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n10289    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n10289    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n10289    10290  node             vscode.lock\n10295    1720   node             proc/14828/cmdline\n10295    1720   node             14828/cmdline\n10295    1720   node             cmdline\n10302    1720   node             proc/12050/cmdline\n10302    1720   node             12050/cmdline\n10302    1720   node             cmdline\n10302    1720   node             proc/30931/cmdline\n10302    1720   node             30931/cmdline\n10302    1720   node             cmdline\n10302    1720   node             proc/31190/cmdline\n10302    1720   node             31190/cmdline\n10302    1720   node             cmdline\n10302    1720   node             proc/17505/cmdline\n10302    1720   node             17505/cmdline\n10302    1720   node             cmdline\n10497    1720   node             proc/14828/cmdline\n10497    1720   node             14828/cmdline\n10497    1720   node             cmdline\n10505    1720   node             proc/12050/cmdline\n10505    1720   node             12050/cmdline\n10505    1720   node             cmdline\n10505    1720   node             proc/30931/cmdline\n10505    1720   node             30931/cmdline\n10505    1720   node             cmdline\n10505    1720   node             proc/31190/cmdline\n10505    1720   node             31190/cmdline\n10505    1720   node             cmdline\n10505    1720   node             proc/17505/cmdline\n10505    1720   node             17505/cmdline\n10505    1720   node             cmdline\n10699    1720   node             proc/14828/cmdline\n10699    1720   node             14828/cmdline\n10699    1720   node             cmdline\n10706    1720   node             proc/12050/cmdline\n10706    1720   node             12050/cmdline\n10706    1720   node             cmdline\n10706    1720   node             proc/30931/cmdline\n10706    1720   node             30931/cmdline\n10706    1720   node             cmdline\n10706    1720   node             proc/31190/cmdline\n10706    1720   node             31190/cmdline\n10706    1720   node             cmdline\n10706    1720   node             proc/17505/cmdline\n10706    1720   node             17505/cmdline\n10706    1720   node             cmdline\n10901    1720   node             proc/14828/cmdline\n10901    1720   node             14828/cmdline\n10901    1720   node             cmdline\n10908    1720   node             proc/12050/cmdline\n10908    1720   node             12050/cmdline\n10908    1720   node             cmdline\n10908    1720   node             proc/30931/cmdline\n10908    1720   node             30931/cmdline\n10908    1720   node             cmdline\n10908    1720   node             proc/31190/cmdline\n10908    1720   node             31190/cmdline\n10908    1720   node             cmdline\n10908    1720   node             proc/17505/cmdline\n10908    1720   node             17505/cmdline\n10908    1720   node             cmdline\n10954    10038  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n10954    10038  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n10954    10038  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n10954    10038  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n10954    10038  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n10954    10038  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n10954    10038  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n10954    10038  node             vscode.lock\n10955    10038  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n10955    10038  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n10955    10038  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n10955    10038  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n10955    10038  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n10955    10038  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n10955    10038  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n10955    10038  node             vscode.lock\n10955    1703   node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n10955    1703   node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n10955    1703   node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n10955    1703   node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n10955    1703   node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n10955    1703   node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n10955    1703   node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n10955    1703   node             vscode.lock\n10955    10049  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n10955    10049  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n10955    10049  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n10955    10049  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n10955    10049  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n10955    10049  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n10955    10049  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n10955    10049  node             vscode.lock\n11102    1720   node             proc/14828/cmdline\n11102    1720   node             14828/cmdline\n11102    1720   node             cmdline\n11108    1720   node             proc/12050/cmdline\n11108    1720   node             12050/cmdline\n11108    1720   node             cmdline\n11108    1720   node             proc/30931/cmdline\n11108    1720   node             30931/cmdline\n11108    1720   node             cmdline\n11108    1720   node             proc/31190/cmdline\n11108    1720   node             31190/cmdline\n11108    1720   node             cmdline\n11108    1720   node             proc/17505/cmdline\n11108    1720   node             17505/cmdline\n11108    1720   node             cmdline\n11128    10038  node             proc/meminfo\n11128    10038  node             meminfo\n11129    10038  node             home/yunwei/.vscode/c_cpp_properties.json\n11129    10038  node             yunwei/.vscode/c_cpp_properties.json\n11129    10038  node             .vscode/c_cpp_properties.json\n11129    10038  node             c_cpp_properties.json\n11294    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n11294    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n11294    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n11294    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n11294    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n11294    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n11294    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n11294    10290  node             vscode.lock\n11294    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n11294    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n11294    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n11294    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n11294    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n11294    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n11294    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n11294    10290  node             vscode.lock\n11294    10290  node             home\n11294    10290  node             home/yunwei\n11294    10290  node             yunwei\n11294    10290  node             home/yunwei/.vscode-server\n11294    10290  node             yunwei/.vscode-server\n11294    10290  node             .vscode-server\n11294    10290  node             home/yunwei/.vscode-server/data\n11294    10290  node             yunwei/.vscode-server/data\n11294    10290  node             .vscode-server/data\n11294    10290  node             data\n11294    10290  node             home/yunwei/.vscode-server/data/User\n11294    10290  node             yunwei/.vscode-server/data/User\n11294    10290  node             .vscode-server/data/User\n11294    10290  node             data/User\n11294    10290  node             User\n11294    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n11294    10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n11294    10290  node             .vscode-server/data/User/workspaceStorage\n11294    10290  node             data/User/workspaceStorage\n11294    10290  node             User/workspaceStorage\n11294    10290  node             workspaceStorage\n11294    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n11294    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n11294    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n11294    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n11294    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n11294    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n11294    10290  node             683061573fc2bafa947b4d87342b0cd1\n11294    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n11294    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n11294    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n11294    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n11294    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n11294    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n11294    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n11294    10290  node             vscode.lock\n11294    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n11294    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n11294    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n11294    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n11294    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n11294    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n11294    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n11294    10290  node             vscode.lock\n11294    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n11294    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n11294    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n11294    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n11294    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n11294    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n11294    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n11294    10290  node             vscode.lock\n11294    10290  node             home\n11294    10290  node             home/yunwei\n11294    10290  node             yunwei\n11294    10290  node             home/yunwei/.vscode-server\n11294    10290  node             yunwei/.vscode-server\n11294    10290  node             .vscode-server\n11294    10290  node             home/yunwei/.vscode-server/data\n11294    10290  node             yunwei/.vscode-server/data\n11294    10290  node             .vscode-server/data\n11294    10290  node             data\n11294    10290  node             home/yunwei/.vscode-server/data/User\n11294    10290  node             yunwei/.vscode-server/data/User\n11294    10290  node             .vscode-server/data/User\n11294    10290  node             data/User\n11294    10290  node             User\n11294    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n11294    10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n11294    10290  node             .vscode-server/data/User/workspaceStorage\n11294    10290  node             data/User/workspaceStorage\n11294    10290  node             User/workspaceStorage\n11294    10290  node             workspaceStorage\n11294    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n11294    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n11294    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n11294    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n11294    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n11294    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n11294    10290  node             683061573fc2bafa947b4d87342b0cd1\n11294    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n11294    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n11294    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n11294    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n11294    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n11294    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n11294    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n11294    10290  node             vscode.lock\n11294    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n11294    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n11294    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n11294    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n11294    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n11294    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n11294    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n11294    10290  node             vscode.lock\n11294    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n11294    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n11294    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n11294    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n11294    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n11294    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n11294    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n11294    10290  node             vscode.lock\n11294    10290  node             home\n11294    10290  node             home/yunwei\n11294    10290  node             yunwei\n11294    10290  node             home/yunwei/.vscode-server\n11294    10290  node             yunwei/.vscode-server\n11294    10290  node             .vscode-server\n11294    10290  node             home/yunwei/.vscode-server/data\n11294    10290  node             yunwei/.vscode-server/data\n11294    10290  node             .vscode-server/data\n11294    10290  node             data\n11294    10290  node             home/yunwei/.vscode-server/data/User\n11294    10290  node             yunwei/.vscode-server/data/User\n11294    10290  node             .vscode-server/data/User\n11294    10290  node             data/User\n11294    10290  node             User\n11294    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n11294    10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n11294    10290  node             .vscode-server/data/User/workspaceStorage\n11294    10290  node             data/User/workspaceStorage\n11294    10290  node             User/workspaceStorage\n11294    10290  node             workspaceStorage\n11294    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n11294    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n11294    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n11294    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n11294    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n11294    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n11294    10290  node             683061573fc2bafa947b4d87342b0cd1\n11294    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n11294    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n11294    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n11294    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n11294    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n11294    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n11294    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n11294    10290  node             vscode.lock\n11294    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n11294    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n11294    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n11294    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n11294    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n11294    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n11294    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n11294    10290  node             vscode.lock\n11294    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n11294    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n11294    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n11294    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n11294    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n11294    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n11294    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n11294    10290  node             vscode.lock\n11304    1720   node             proc/14828/cmdline\n11304    1720   node             14828/cmdline\n11304    1720   node             cmdline\n11311    1720   node             proc/12050/cmdline\n11311    1720   node             12050/cmdline\n11311    1720   node             cmdline\n11311    1720   node             proc/30931/cmdline\n11311    1720   node             30931/cmdline\n11311    1720   node             cmdline\n11311    1720   node             proc/31190/cmdline\n11311    1720   node             31190/cmdline\n11311    1720   node             cmdline\n11311    1720   node             proc/17505/cmdline\n11311    1720   node             17505/cmdline\n11311    1720   node             cmdline\n11507    1720   node             proc/14828/cmdline\n11507    1720   node             14828/cmdline\n11507    1720   node             cmdline\n11514    1720   node             proc/12050/cmdline\n11514    1720   node             12050/cmdline\n11514    1720   node             cmdline\n11514    1720   node             proc/30931/cmdline\n11514    1720   node             30931/cmdline\n11514    1720   node             cmdline\n11514    1720   node             proc/31190/cmdline\n11514    1720   node             31190/cmdline\n11514    1720   node             cmdline\n11514    1720   node             proc/17505/cmdline\n11514    1720   node             17505/cmdline\n11514    1720   node             cmdline\n11710    1720   node             proc/14828/cmdline\n11710    1720   node             14828/cmdline\n11710    1720   node             cmdline\n11716    1720   node             proc/12050/cmdline\n11716    1720   node             12050/cmdline\n11716    1720   node             cmdline\n11716    1720   node             proc/30931/cmdline\n11716    1720   node             30931/cmdline\n11716    1720   node             cmdline\n11716    1720   node             proc/31190/cmdline\n11716    1720   node             31190/cmdline\n11716    1720   node             cmdline\n11716    1720   node             proc/17505/cmdline\n11716    1720   node             17505/cmdline\n11716    1720   node             cmdline\n11914    1720   node             proc/14828/cmdline\n11914    1720   node             14828/cmdline\n11914    1720   node             cmdline\n11919    1720   node             proc/12050/cmdline\n11919    1720   node             12050/cmdline\n11919    1720   node             cmdline\n11919    1720   node             proc/30931/cmdline\n11919    1720   node             30931/cmdline\n11919    1720   node             cmdline\n11919    1720   node             proc/31190/cmdline\n11919    1720   node             31190/cmdline\n11919    1720   node             cmdline\n11919    1720   node             proc/17505/cmdline\n11919    1720   node             17505/cmdline\n11919    1720   node             cmdline\n11958    10038  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n11958    10038  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n11958    10038  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n11958    10038  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n11958    10038  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n11958    10038  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n11958    10038  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n11958    10038  node             vscode.lock\n11958    10038  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n11958    10038  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n11958    10038  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n11958    10038  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n11958    10038  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n11958    10038  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n11958    10038  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n11958    10038  node             vscode.lock\n11958    1703   node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n11958    1703   node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n11958    1703   node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n11958    1703   node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n11958    1703   node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n11958    1703   node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n11958    1703   node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n11958    1703   node             vscode.lock\n11958    10049  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n11958    10049  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n11958    10049  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n11958    10049  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n11958    10049  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n11958    10049  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n11958    10049  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n11958    10049  node             vscode.lock\n12116    1720   node             proc/14828/cmdline\n12116    1720   node             14828/cmdline\n12116    1720   node             cmdline\n12120    1720   node             proc/12050/cmdline\n12120    1720   node             12050/cmdline\n12120    1720   node             cmdline\n12120    1720   node             proc/30931/cmdline\n12120    1720   node             30931/cmdline\n12120    1720   node             cmdline\n12120    1720   node             proc/31190/cmdline\n12120    1720   node             31190/cmdline\n12120    1720   node             cmdline\n12120    1720   node             proc/17505/cmdline\n12120    1720   node             17505/cmdline\n12120    1720   node             cmdline\n12295    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n12295    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n12295    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n12295    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n12295    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n12295    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n12295    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n12295    10290  node             vscode.lock\n12295    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n12295    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n12295    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n12295    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n12295    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n12295    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n12295    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n12295    10290  node             vscode.lock\n12295    10290  node             home\n12295    10290  node             home/yunwei\n12295    10290  node             yunwei\n12295    10290  node             home/yunwei/.vscode-server\n12295    10290  node             yunwei/.vscode-server\n12295    10290  node             .vscode-server\n12295    10290  node             home/yunwei/.vscode-server/data\n12295    10290  node             yunwei/.vscode-server/data\n12295    10290  node             .vscode-server/data\n12295    10290  node             data\n12295    10290  node             home/yunwei/.vscode-server/data/User\n12295    10290  node             yunwei/.vscode-server/data/User\n12295    10290  node             .vscode-server/data/User\n12295    10290  node             data/User\n12295    10290  node             User\n12295    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n12295    10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n12295    10290  node             .vscode-server/data/User/workspaceStorage\n12295    10290  node             data/User/workspaceStorage\n12295    10290  node             User/workspaceStorage\n12295    10290  node             workspaceStorage\n12295    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n12295    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n12295    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n12295    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n12295    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n12295    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n12295    10290  node             683061573fc2bafa947b4d87342b0cd1\n12295    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n12295    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n12295    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n12295    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n12295    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n12295    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n12295    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n12295    10290  node             vscode.lock\n12295    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n12295    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n12295    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n12295    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n12295    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n12295    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n12295    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n12295    10290  node             vscode.lock\n12295    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n12295    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n12295    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n12295    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n12295    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n12295    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n12295    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n12295    10290  node             vscode.lock\n12295    10290  node             home\n12295    10290  node             home/yunwei\n12295    10290  node             yunwei\n12295    10290  node             home/yunwei/.vscode-server\n12295    10290  node             yunwei/.vscode-server\n12295    10290  node             .vscode-server\n12295    10290  node             home/yunwei/.vscode-server/data\n12295    10290  node             yunwei/.vscode-server/data\n12295    10290  node             .vscode-server/data\n12295    10290  node             data\n12295    10290  node             home/yunwei/.vscode-server/data/User\n12295    10290  node             yunwei/.vscode-server/data/User\n12295    10290  node             .vscode-server/data/User\n12295    10290  node             data/User\n12295    10290  node             User\n12295    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n12295    10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n12295    10290  node             .vscode-server/data/User/workspaceStorage\n12295    10290  node             data/User/workspaceStorage\n12295    10290  node             User/workspaceStorage\n12295    10290  node             workspaceStorage\n12295    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n12295    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n12295    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n12295    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n12295    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n12295    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n12295    10290  node             683061573fc2bafa947b4d87342b0cd1\n12295    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n12295    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n12295    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n12295    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n12295    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n12295    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n12295    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n12295    10290  node             vscode.lock\n12295    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n12295    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n12295    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n12295    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n12295    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n12295    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n12295    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n12295    10290  node             vscode.lock\n12295    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n12295    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n12295    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n12295    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n12295    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n12295    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n12295    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n12295    10290  node             vscode.lock\n12295    10290  node             home\n12295    10290  node             home/yunwei\n12295    10290  node             yunwei\n12295    10290  node             home/yunwei/.vscode-server\n12295    10290  node             yunwei/.vscode-server\n12295    10290  node             .vscode-server\n12295    10290  node             home/yunwei/.vscode-server/data\n12295    10290  node             yunwei/.vscode-server/data\n12295    10290  node             .vscode-server/data\n12295    10290  node             data\n12295    10290  node             home/yunwei/.vscode-server/data/User\n12295    10290  node             yunwei/.vscode-server/data/User\n12295    10290  node             .vscode-server/data/User\n12295    10290  node             data/User\n12295    10290  node             User\n12295    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n12295    10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n12295    10290  node             .vscode-server/data/User/workspaceStorage\n12295    10290  node             data/User/workspaceStorage\n12295    10290  node             User/workspaceStorage\n12295    10290  node             workspaceStorage\n12295    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n12295    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n12295    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n12295    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n12295    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n12295    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n12295    10290  node             683061573fc2bafa947b4d87342b0cd1\n12295    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n12295    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n12295    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n12295    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n12295    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n12295    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n12295    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n12295    10290  node             vscode.lock\n12295    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n12295    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n12295    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n12295    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n12295    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n12295    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n12295    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n12295    10290  node             vscode.lock\n12295    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n12295    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n12295    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n12295    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n12295    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n12295    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n12295    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n12295    10290  node             vscode.lock\n12318    1720   node             proc/14828/cmdline\n12318    1720   node             14828/cmdline\n12318    1720   node             cmdline\n12322    1720   node             proc/12050/cmdline\n12322    1720   node             12050/cmdline\n12322    1720   node             cmdline\n12322    1720   node             proc/30931/cmdline\n12322    1720   node             30931/cmdline\n12322    1720   node             cmdline\n12322    1720   node             proc/31190/cmdline\n12322    1720   node             31190/cmdline\n12322    1720   node             cmdline\n12322    1720   node             proc/17505/cmdline\n12322    1720   node             17505/cmdline\n12322    1720   node             cmdline\n12521    1720   node             proc/14828/cmdline\n12521    1720   node             14828/cmdline\n12521    1720   node             cmdline\n12525    1720   node             proc/12050/cmdline\n12525    1720   node             12050/cmdline\n12525    1720   node             cmdline\n12525    1720   node             proc/30931/cmdline\n12525    1720   node             30931/cmdline\n12525    1720   node             cmdline\n12525    1720   node             proc/31190/cmdline\n12525    1720   node             31190/cmdline\n12525    1720   node             cmdline\n12525    1720   node             proc/17505/cmdline\n12525    1720   node             17505/cmdline\n12525    1720   node             cmdline\n12724    1720   node             proc/14828/cmdline\n12725    1720   node             14828/cmdline\n12725    1720   node             cmdline\n12725    1720   node             proc/12050/cmdline\n12725    1720   node             12050/cmdline\n12725    1720   node             cmdline\n12725    1720   node             proc/30931/cmdline\n12725    1720   node             30931/cmdline\n12725    1720   node             cmdline\n12725    1720   node             proc/31190/cmdline\n12725    1720   node             31190/cmdline\n12725    1720   node             cmdline\n12725    1720   node             proc/17505/cmdline\n12725    1720   node             17505/cmdline\n12725    1720   node             cmdline\n12926    1720   node             proc/14828/cmdline\n12926    1720   node             14828/cmdline\n12926    1720   node             cmdline\n12926    1720   node             proc/12050/cmdline\n12926    1720   node             12050/cmdline\n12926    1720   node             cmdline\n12926    1720   node             proc/30931/cmdline\n12926    1720   node             30931/cmdline\n12926    1720   node             cmdline\n12926    1720   node             proc/31190/cmdline\n12926    1720   node             31190/cmdline\n12926    1720   node             cmdline\n12926    1720   node             proc/17505/cmdline\n12926    1720   node             17505/cmdline\n12926    1720   node             cmdline\n12961    10038  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n12961    10038  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n12961    10038  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n12961    10038  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n12961    10038  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n12961    10038  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n12961    10038  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n12961    10038  node             vscode.lock\n12961    10038  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n12961    10038  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n12961    10038  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n12961    10038  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n12961    10038  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n12961    10038  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n12961    10038  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n12961    10038  node             vscode.lock\n12961    1703   node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n12961    1703   node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n12961    1703   node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n12961    1703   node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n12961    1703   node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n12961    1703   node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n12961    1703   node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n12961    1703   node             vscode.lock\n12961    10049  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n12961    10049  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n12961    10049  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n12961    10049  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n12961    10049  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n12961    10049  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n12961    10049  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n12961    10049  node             vscode.lock\n13128    1720   node             proc/14828/cmdline\n13128    1720   node             14828/cmdline\n13128    1720   node             cmdline\n13128    1720   node             proc/12050/cmdline\n13128    1720   node             12050/cmdline\n13128    1720   node             cmdline\n13128    1720   node             proc/30931/cmdline\n13128    1720   node             30931/cmdline\n13128    1720   node             cmdline\n13128    1720   node             proc/31190/cmdline\n13128    1720   node             31190/cmdline\n13128    1720   node             cmdline\n13128    1720   node             proc/17505/cmdline\n13128    1720   node             17505/cmdline\n13128    1720   node             cmdline\n13314    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n13314    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n13314    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n13314    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n13314    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n13314    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n13314    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n13314    10290  node             vscode.lock\n13314    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n13314    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n13314    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n13314    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n13314    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n13314    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n13314    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n13314    10290  node             vscode.lock\n13314    10290  node             home\n13314    10290  node             home/yunwei\n13314    10290  node             yunwei\n13314    10290  node             home/yunwei/.vscode-server\n13314    10290  node             yunwei/.vscode-server\n13314    10290  node             .vscode-server\n13314    10290  node             home/yunwei/.vscode-server/data\n13314    10290  node             yunwei/.vscode-server/data\n13314    10290  node             .vscode-server/data\n13314    10290  node             data\n13314    10290  node             home/yunwei/.vscode-server/data/User\n13314    10290  node             yunwei/.vscode-server/data/User\n13314    10290  node             .vscode-server/data/User\n13314    10290  node             data/User\n13314    10290  node             User\n13314    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n13314    10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n13314    10290  node             .vscode-server/data/User/workspaceStorage\n13314    10290  node             data/User/workspaceStorage\n13314    10290  node             User/workspaceStorage\n13314    10290  node             workspaceStorage\n13314    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n13314    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n13314    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n13314    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n13314    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n13314    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n13314    10290  node             683061573fc2bafa947b4d87342b0cd1\n13314    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n13314    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n13314    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n13314    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n13314    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n13314    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n13314    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n13314    10290  node             vscode.lock\n13314    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n13314    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n13314    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n13314    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n13314    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n13314    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n13314    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n13314    10290  node             vscode.lock\n13314    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n13314    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n13314    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n13314    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n13314    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n13314    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n13314    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n13314    10290  node             vscode.lock\n13314    10290  node             home\n13314    10290  node             home/yunwei\n13314    10290  node             yunwei\n13314    10290  node             home/yunwei/.vscode-server\n13314    10290  node             yunwei/.vscode-server\n13314    10290  node             .vscode-server\n13314    10290  node             home/yunwei/.vscode-server/data\n13314    10290  node             yunwei/.vscode-server/data\n13314    10290  node             .vscode-server/data\n13314    10290  node             data\n13314    10290  node             home/yunwei/.vscode-server/data/User\n13314    10290  node             yunwei/.vscode-server/data/User\n13314    10290  node             .vscode-server/data/User\n13314    10290  node             data/User\n13314    10290  node             User\n13314    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n13314    10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n13314    10290  node             .vscode-server/data/User/workspaceStorage\n13314    10290  node             data/User/workspaceStorage\n13314    10290  node             User/workspaceStorage\n13314    10290  node             workspaceStorage\n13314    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n13314    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n13314    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n13314    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n13314    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n13314    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n13314    10290  node             683061573fc2bafa947b4d87342b0cd1\n13314    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n13314    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n13314    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n13314    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n13314    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n13314    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n13314    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n13314    10290  node             vscode.lock\n13314    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n13314    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n13314    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n13314    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n13314    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n13314    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n13314    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n13314    10290  node             vscode.lock\n13314    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n13314    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n13314    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n13314    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n13314    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n13314    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n13314    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n13314    10290  node             vscode.lock\n13314    10290  node             home\n13314    10290  node             home/yunwei\n13314    10290  node             yunwei\n13314    10290  node             home/yunwei/.vscode-server\n13314    10290  node             yunwei/.vscode-server\n13314    10290  node             .vscode-server\n13314    10290  node             home/yunwei/.vscode-server/data\n13314    10290  node             yunwei/.vscode-server/data\n13314    10290  node             .vscode-server/data\n13314    10290  node             data\n13314    10290  node             home/yunwei/.vscode-server/data/User\n13314    10290  node             yunwei/.vscode-server/data/User\n13314    10290  node             .vscode-server/data/User\n13314    10290  node             data/User\n13314    10290  node             User\n13314    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n13314    10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n13314    10290  node             .vscode-server/data/User/workspaceStorage\n13314    10290  node             data/User/workspaceStorage\n13314    10290  node             User/workspaceStorage\n13314    10290  node             workspaceStorage\n13314    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n13314    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n13314    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n13314    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n13314    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n13314    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n13314    10290  node             683061573fc2bafa947b4d87342b0cd1\n13314    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n13314    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n13314    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n13314    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n13314    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n13314    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n13314    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n13314    10290  node             vscode.lock\n13314    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n13314    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n13314    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n13314    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n13314    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n13314    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n13314    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n13314    10290  node             vscode.lock\n13314    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n13314    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n13314    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n13314    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n13314    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n13314    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n13314    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n13314    10290  node             vscode.lock\n13330    1720   node             proc/14828/cmdline\n13330    1720   node             14828/cmdline\n13330    1720   node             cmdline\n13330    1720   node             proc/12050/cmdline\n13330    1720   node             12050/cmdline\n13330    1720   node             cmdline\n13330    1720   node             proc/30931/cmdline\n13330    1720   node             30931/cmdline\n13330    1720   node             cmdline\n13330    1720   node             proc/31190/cmdline\n13330    1720   node             31190/cmdline\n13330    1720   node             cmdline\n13330    1720   node             proc/17505/cmdline\n13331    1720   node             17505/cmdline\n13331    1720   node             cmdline\n13530    1720   node             proc/14828/cmdline\n13530    1720   node             14828/cmdline\n13530    1720   node             cmdline\n13533    1720   node             proc/12050/cmdline\n13533    1720   node             12050/cmdline\n13533    1720   node             cmdline\n13533    1720   node             proc/30931/cmdline\n13533    1720   node             30931/cmdline\n13533    1720   node             cmdline\n13533    1720   node             proc/31190/cmdline\n13533    1720   node             31190/cmdline\n13533    1720   node             cmdline\n13533    1720   node             proc/17505/cmdline\n13533    1720   node             17505/cmdline\n13533    1720   node             cmdline\n13629    10038  node             proc/meminfo\n13629    10038  node             meminfo\n13629    10038  node             home/yunwei/.vscode/c_cpp_properties.json\n13629    10038  node             yunwei/.vscode/c_cpp_properties.json\n13629    10038  node             .vscode/c_cpp_properties.json\n13629    10038  node             c_cpp_properties.json\n13734    1720   node             proc/14828/cmdline\n13747    1720   node             14828/cmdline\n13747    1720   node             cmdline\n13747    1720   node             proc/12050/cmdline\n13747    1720   node             12050/cmdline\n13747    1720   node             cmdline\n13747    1720   node             proc/30931/cmdline\n13747    1720   node             30931/cmdline\n13747    1720   node             cmdline\n13747    1720   node             proc/31190/cmdline\n13747    1720   node             31190/cmdline\n13747    1720   node             cmdline\n13747    1720   node             proc/17505/cmdline\n13747    1720   node             17505/cmdline\n13747    1720   node             cmdline\n13937    1720   node             proc/14828/cmdline\n13937    1720   node             14828/cmdline\n13938    1720   node             cmdline\n13949    1720   node             proc/12050/cmdline\n13949    1720   node             12050/cmdline\n13949    1720   node             cmdline\n13949    1720   node             proc/30931/cmdline\n13949    1720   node             30931/cmdline\n13949    1720   node             cmdline\n13949    1720   node             proc/31190/cmdline\n13949    1720   node             31190/cmdline\n13949    1720   node             cmdline\n13949    1720   node             proc/17505/cmdline\n13949    1720   node             17505/cmdline\n13949    1720   node             cmdline\n13962    10038  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n13962    10038  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n13962    10038  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n13962    10038  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n13962    10038  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n13962    10038  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n13962    10038  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n13962    10038  node             vscode.lock\n13962    10038  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n13964    10038  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n13964    10038  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n13964    10038  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n13964    10038  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n13964    10038  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n13964    10038  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n13964    10038  node             vscode.lock\n13964    10049  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n13964    10049  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n13964    10049  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n13964    10049  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n13964    10049  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n13964    10049  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n13964    10049  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n13964    10049  node             vscode.lock\n13964    1703   node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n13964    1703   node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n13964    1703   node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n13964    1703   node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n13964    1703   node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n13964    1703   node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n13964    1703   node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n13964    1703   node             vscode.lock\n14138    1720   node             proc/14828/cmdline\n14138    1720   node             14828/cmdline\n14138    1720   node             cmdline\n14149    1720   node             proc/12050/cmdline\n14149    1720   node             12050/cmdline\n14149    1720   node             cmdline\n14150    1720   node             proc/30931/cmdline\n14150    1720   node             30931/cmdline\n14150    1720   node             cmdline\n14150    1720   node             proc/31190/cmdline\n14150    1720   node             31190/cmdline\n14150    1720   node             cmdline\n14150    1720   node             proc/17505/cmdline\n14150    1720   node             17505/cmdline\n14150    1720   node             cmdline\n14300    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n14300    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n14300    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n14300    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n14300    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n14300    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n14300    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n14300    10290  node             vscode.lock\n14300    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n14300    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n14300    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n14300    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n14300    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n14300    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n14300    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n14300    10290  node             vscode.lock\n14300    10290  node             home\n14300    10290  node             home/yunwei\n14300    10290  node             yunwei\n14300    10290  node             home/yunwei/.vscode-server\n14300    10290  node             yunwei/.vscode-server\n14300    10290  node             .vscode-server\n14300    10290  node             home/yunwei/.vscode-server/data\n14300    10290  node             yunwei/.vscode-server/data\n14300    10290  node             .vscode-server/data\n14300    10290  node             data\n14300    10290  node             home/yunwei/.vscode-server/data/User\n14300    10290  node             yunwei/.vscode-server/data/User\n14300    10290  node             .vscode-server/data/User\n14300    10290  node             data/User\n14300    10290  node             User\n14300    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n14300    10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n14300    10290  node             .vscode-server/data/User/workspaceStorage\n14300    10290  node             data/User/workspaceStorage\n14300    10290  node             User/workspaceStorage\n14300    10290  node             workspaceStorage\n14300    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n14300    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n14300    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n14300    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n14300    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n14300    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n14300    10290  node             683061573fc2bafa947b4d87342b0cd1\n14300    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n14300    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n14300    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n14300    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n14300    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n14300    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n14300    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n14300    10290  node             vscode.lock\n14301    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n14301    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n14301    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n14301    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n14301    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n14301    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n14301    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n14301    10290  node             vscode.lock\n14301    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n14301    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n14301    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n14301    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n14301    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n14301    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n14301    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n14301    10290  node             vscode.lock\n14301    10290  node             home\n14301    10290  node             home/yunwei\n14301    10290  node             yunwei\n14301    10290  node             home/yunwei/.vscode-server\n14301    10290  node             yunwei/.vscode-server\n14301    10290  node             .vscode-server\n14301    10290  node             home/yunwei/.vscode-server/data\n14301    10290  node             yunwei/.vscode-server/data\n14301    10290  node             .vscode-server/data\n14301    10290  node             data\n14301    10290  node             home/yunwei/.vscode-server/data/User\n14301    10290  node             yunwei/.vscode-server/data/User\n14301    10290  node             .vscode-server/data/User\n14301    10290  node             data/User\n14301    10290  node             User\n14301    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n14301    10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n14301    10290  node             .vscode-server/data/User/workspaceStorage\n14301    10290  node             data/User/workspaceStorage\n14301    10290  node             User/workspaceStorage\n14301    10290  node             workspaceStorage\n14301    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n14301    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n14301    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n14301    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n14301    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n14301    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n14301    10290  node             683061573fc2bafa947b4d87342b0cd1\n14301    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n14301    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n14301    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n14301    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n14301    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n14301    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n14301    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n14301    10290  node             vscode.lock\n14301    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n14301    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n14301    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n14301    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n14301    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n14301    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n14301    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n14301    10290  node             vscode.lock\n14301    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n14301    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n14301    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n14301    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n14301    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n14301    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n14301    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n14301    10290  node             vscode.lock\n14301    10290  node             home\n14301    10290  node             home/yunwei\n14301    10290  node             yunwei\n14301    10290  node             home/yunwei/.vscode-server\n14301    10290  node             yunwei/.vscode-server\n14301    10290  node             .vscode-server\n14301    10290  node             home/yunwei/.vscode-server/data\n14301    10290  node             yunwei/.vscode-server/data\n14301    10290  node             .vscode-server/data\n14301    10290  node             data\n14301    10290  node             home/yunwei/.vscode-server/data/User\n14301    10290  node             yunwei/.vscode-server/data/User\n14301    10290  node             .vscode-server/data/User\n14301    10290  node             data/User\n14301    10290  node             User\n14301    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n14301    10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n14301    10290  node             .vscode-server/data/User/workspaceStorage\n14301    10290  node             data/User/workspaceStorage\n14301    10290  node             User/workspaceStorage\n14301    10290  node             workspaceStorage\n14301    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n14301    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n14301    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n14301    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n14301    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n14301    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n14301    10290  node             683061573fc2bafa947b4d87342b0cd1\n14301    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n14301    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n14301    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n14301    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n14301    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n14301    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n14301    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n14301    10290  node             vscode.lock\n14301    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n14301    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n14301    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n14301    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n14301    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n14301    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n14301    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n14301    10290  node             vscode.lock\n14301    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n14301    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n14301    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n14301    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n14301    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n14301    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n14301    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n14301    10290  node             vscode.lock\n14339    1720   node             proc/14828/cmdline\n14339    1720   node             14828/cmdline\n14339    1720   node             cmdline\n14351    1720   node             proc/12050/cmdline\n14351    1720   node             12050/cmdline\n14351    1720   node             cmdline\n14352    1720   node             proc/30931/cmdline\n14352    1720   node             30931/cmdline\n14352    1720   node             cmdline\n14352    1720   node             proc/31190/cmdline\n14352    1720   node             31190/cmdline\n14352    1720   node             cmdline\n14352    1720   node             proc/17505/cmdline\n14352    1720   node             17505/cmdline\n14352    1720   node             cmdline\n14543    1720   node             proc/14828/cmdline\n14543    1720   node             14828/cmdline\n14543    1720   node             cmdline\n14554    1720   node             proc/12050/cmdline\n14554    1720   node             12050/cmdline\n14554    1720   node             cmdline\n14554    1720   node             proc/30931/cmdline\n14554    1720   node             30931/cmdline\n14554    1720   node             cmdline\n14554    1720   node             proc/31190/cmdline\n14554    1720   node             31190/cmdline\n14554    1720   node             cmdline\n14554    1720   node             proc/17505/cmdline\n14554    1720   node             17505/cmdline\n14554    1720   node             cmdline\n14744    1720   node             proc/14828/cmdline\n14745    1720   node             14828/cmdline\n14745    1720   node             cmdline\n14756    1720   node             proc/12050/cmdline\n14756    1720   node             12050/cmdline\n14756    1720   node             cmdline\n14756    1720   node             proc/30931/cmdline\n14756    1720   node             30931/cmdline\n14756    1720   node             cmdline\n14756    1720   node             proc/31190/cmdline\n14756    1720   node             31190/cmdline\n14756    1720   node             cmdline\n14756    1720   node             proc/17505/cmdline\n14756    1720   node             17505/cmdline\n14756    1720   node             cmdline\n14944    1720   node             proc/14828/cmdline\n14944    1720   node             14828/cmdline\n14944    1720   node             cmdline\n14960    1720   node             proc/12050/cmdline\n14960    1720   node             12050/cmdline\n14960    1720   node             cmdline\n14960    1720   node             proc/30931/cmdline\n14960    1720   node             30931/cmdline\n14960    1720   node             cmdline\n14960    1720   node             proc/31190/cmdline\n14960    1720   node             31190/cmdline\n14960    1720   node             cmdline\n14960    1720   node             proc/17505/cmdline\n14960    1720   node             17505/cmdline\n14960    1720   node             cmdline\n14964    10038  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n14964    10038  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n14964    10038  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n14964    10038  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n14964    10038  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n14964    10038  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n14964    10038  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n14964    10038  node             vscode.lock\n14964    10038  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n14964    10038  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n14964    10038  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n14964    10038  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n14964    10038  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n14964    10038  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n14964    10038  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n14964    10038  node             vscode.lock\n14964    1703   node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n14964    1703   node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n14964    1703   node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n14964    1703   node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n14964    1703   node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n14964    1703   node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n14964    1703   node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n14964    1703   node             vscode.lock\n14964    10049  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n14964    10049  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n14964    10049  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n14964    10049  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n14964    10049  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n14964    10049  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n14964    10049  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n14964    10049  node             vscode.lock\n15022    572    vmtoolsd         etc/vmware-tools/tools-global.conf\n15022    572    vmtoolsd         vmware-tools/tools-global.conf\n15022    572    vmtoolsd         tools-global.conf\n15022    572    vmtoolsd         etc/vmware-tools/tools.conf\n15022    572    vmtoolsd         vmware-tools/tools.conf\n15022    572    vmtoolsd         tools.conf\n15147    1720   node             proc/14828/cmdline\n15147    1720   node             14828/cmdline\n15147    1720   node             cmdline\n15163    1720   node             proc/12050/cmdline\n15163    1720   node             12050/cmdline\n15163    1720   node             cmdline\n15163    1720   node             proc/30931/cmdline\n15163    1720   node             30931/cmdline\n15163    1720   node             cmdline\n15163    1720   node             proc/31190/cmdline\n15163    1720   node             31190/cmdline\n15163    1720   node             cmdline\n15163    1720   node             proc/17505/cmdline\n15163    1720   node             17505/cmdline\n15163    1720   node             cmdline\n15299    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n15299    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n15299    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n15299    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n15299    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n15299    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n15299    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n15299    10290  node             vscode.lock\n15299    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n15299    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n15299    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n15299    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n15299    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n15299    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n15299    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n15299    10290  node             vscode.lock\n15299    10290  node             home\n15299    10290  node             home/yunwei\n15299    10290  node             yunwei\n15299    10290  node             home/yunwei/.vscode-server\n15299    10290  node             yunwei/.vscode-server\n15299    10290  node             .vscode-server\n15299    10290  node             home/yunwei/.vscode-server/data\n15299    10290  node             yunwei/.vscode-server/data\n15299    10290  node             .vscode-server/data\n15299    10290  node             data\n15299    10290  node             home/yunwei/.vscode-server/data/User\n15299    10290  node             yunwei/.vscode-server/data/User\n15299    10290  node             .vscode-server/data/User\n15299    10290  node             data/User\n15299    10290  node             User\n15299    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n15299    10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n15299    10290  node             .vscode-server/data/User/workspaceStorage\n15299    10290  node             data/User/workspaceStorage\n15299    10290  node             User/workspaceStorage\n15299    10290  node             workspaceStorage\n15299    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n15299    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n15299    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n15299    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n15299    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n15299    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n15299    10290  node             683061573fc2bafa947b4d87342b0cd1\n15299    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n15299    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n15299    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n15299    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n15299    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n15299    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n15299    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n15299    10290  node             vscode.lock\n15299    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n15299    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n15299    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n15299    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n15299    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n15299    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n15299    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n15299    10290  node             vscode.lock\n15299    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n15299    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n15299    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n15299    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n15299    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n15299    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n15299    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n15299    10290  node             vscode.lock\n15299    10290  node             home\n15299    10290  node             home/yunwei\n15299    10290  node             yunwei\n15299    10290  node             home/yunwei/.vscode-server\n15299    10290  node             yunwei/.vscode-server\n15299    10290  node             .vscode-server\n15299    10290  node             home/yunwei/.vscode-server/data\n15299    10290  node             yunwei/.vscode-server/data\n15299    10290  node             .vscode-server/data\n15299    10290  node             data\n15299    10290  node             home/yunwei/.vscode-server/data/User\n15299    10290  node             yunwei/.vscode-server/data/User\n15299    10290  node             .vscode-server/data/User\n15299    10290  node             data/User\n15299    10290  node             User\n15299    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n15299    10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n15299    10290  node             .vscode-server/data/User/workspaceStorage\n15299    10290  node             data/User/workspaceStorage\n15299    10290  node             User/workspaceStorage\n15299    10290  node             workspaceStorage\n15299    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n15299    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n15299    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n15299    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n15299    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n15299    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n15299    10290  node             683061573fc2bafa947b4d87342b0cd1\n15299    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n15299    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n15299    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n15299    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n15299    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n15299    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n15299    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n15299    10290  node             vscode.lock\n15299    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n15299    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n15299    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n15299    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n15299    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n15299    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n15299    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n15299    10290  node             vscode.lock\n15299    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n15299    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n15299    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n15299    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n15299    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n15299    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n15299    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n15299    10290  node             vscode.lock\n15299    10290  node             home\n15299    10290  node             home/yunwei\n15299    10290  node             yunwei\n15299    10290  node             home/yunwei/.vscode-server\n15299    10290  node             yunwei/.vscode-server\n15299    10290  node             .vscode-server\n15299    10290  node             home/yunwei/.vscode-server/data\n15299    10290  node             yunwei/.vscode-server/data\n15299    10290  node             .vscode-server/data\n15299    10290  node             data\n15299    10290  node             home/yunwei/.vscode-server/data/User\n15299    10290  node             yunwei/.vscode-server/data/User\n15299    10290  node             .vscode-server/data/User\n15299    10290  node             data/User\n15299    10290  node             User\n15299    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n15299    10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n15299    10290  node             .vscode-server/data/User/workspaceStorage\n15299    10290  node             data/User/workspaceStorage\n15299    10290  node             User/workspaceStorage\n15299    10290  node             workspaceStorage\n15299    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n15299    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n15299    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n15299    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n15299    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n15299    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n15299    10290  node             683061573fc2bafa947b4d87342b0cd1\n15299    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n15299    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n15299    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n15299    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n15299    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n15299    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n15299    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n15299    10290  node             vscode.lock\n15299    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n15299    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n15299    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n15299    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n15299    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n15299    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n15299    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n15299    10290  node             vscode.lock\n15299    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n15299    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n15299    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n15299    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n15299    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n15299    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n15299    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n15299    10290  node             vscode.lock\n15347    1720   node             proc/14828/cmdline\n15347    1720   node             14828/cmdline\n15347    1720   node             cmdline\n15364    1720   node             proc/12050/cmdline\n15364    1720   node             12050/cmdline\n15364    1720   node             cmdline\n15364    1720   node             proc/30931/cmdline\n15364    1720   node             30931/cmdline\n15364    1720   node             cmdline\n15364    1720   node             proc/31190/cmdline\n15364    1720   node             31190/cmdline\n15364    1720   node             cmdline\n15364    1720   node             proc/17505/cmdline\n15364    1720   node             17505/cmdline\n15364    1720   node             cmdline\n15548    1720   node             proc/14828/cmdline\n15548    1720   node             14828/cmdline\n15548    1720   node             cmdline\n15564    1720   node             proc/12050/cmdline\n15564    1720   node             12050/cmdline\n15564    1720   node             cmdline\n15564    1720   node             proc/30931/cmdline\n15564    1720   node             30931/cmdline\n15564    1720   node             cmdline\n15564    1720   node             proc/31190/cmdline\n15564    1720   node             31190/cmdline\n15564    1720   node             cmdline\n15564    1720   node             proc/17505/cmdline\n15564    1720   node             17505/cmdline\n15564    1720   node             cmdline\n15750    1720   node             proc/14828/cmdline\n15750    1720   node             14828/cmdline\n15750    1720   node             cmdline\n15765    1720   node             proc/12050/cmdline\n15765    1720   node             12050/cmdline\n15765    1720   node             cmdline\n15765    1720   node             proc/30931/cmdline\n15765    1720   node             30931/cmdline\n15765    1720   node             cmdline\n15765    1720   node             proc/31190/cmdline\n15765    1720   node             31190/cmdline\n15765    1720   node             cmdline\n15765    1720   node             proc/17505/cmdline\n15765    1720   node             17505/cmdline\n15765    1720   node             cmdline\n15952    1720   node             proc/14828/cmdline\n15952    1720   node             14828/cmdline\n15952    1720   node             cmdline\n15964    10038  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n15964    10038  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n15964    10038  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n15964    10038  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n15964    10038  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n15964    10038  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n15964    10038  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n15964    10038  node             vscode.lock\n15965    10038  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n15965    10038  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n15965    10038  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n15965    10038  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n15965    10038  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n15965    10038  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n15965    10038  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n15965    10038  node             vscode.lock\n15965    1703   node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n15965    1703   node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n15965    1703   node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n15965    1703   node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n15965    1703   node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n15965    1703   node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n15965    1703   node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n15965    1703   node             vscode.lock\n15965    1720   node             proc/12050/cmdline\n15965    1720   node             12050/cmdline\n15965    1720   node             cmdline\n15965    10049  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n15965    10049  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n15965    10049  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n15965    10049  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n15965    10049  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n15965    10049  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n15965    10049  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n15965    10049  node             vscode.lock\n15965    1720   node             proc/30931/cmdline\n15965    1720   node             30931/cmdline\n15965    1720   node             cmdline\n15965    1720   node             proc/31190/cmdline\n15965    1720   node             31190/cmdline\n15965    1720   node             cmdline\n15965    1720   node             proc/17505/cmdline\n15965    1720   node             17505/cmdline\n15965    1720   node             cmdline\n16131    10038  node             proc/meminfo\n16131    10038  node             meminfo\n16131    10038  node             home/yunwei/.vscode/c_cpp_properties.json\n16131    10038  node             yunwei/.vscode/c_cpp_properties.json\n16131    10038  node             .vscode/c_cpp_properties.json\n16131    10038  node             c_cpp_properties.json\n16155    1720   node             proc/14828/cmdline\n16155    1720   node             14828/cmdline\n16155    1720   node             cmdline\n16166    1720   node             proc/12050/cmdline\n16166    1720   node             12050/cmdline\n16166    1720   node             cmdline\n16166    1720   node             proc/30931/cmdline\n16166    1720   node             30931/cmdline\n16166    1720   node             cmdline\n16166    1720   node             proc/31190/cmdline\n16166    1720   node             31190/cmdline\n16166    1720   node             cmdline\n16166    1720   node             proc/17505/cmdline\n16166    1720   node             17505/cmdline\n16166    1720   node             cmdline\n16302    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n16302    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n16302    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n16302    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n16302    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n16302    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n16302    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n16302    10290  node             vscode.lock\n16302    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n16302    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n16302    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n16302    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n16302    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n16302    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n16302    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n16302    10290  node             vscode.lock\n16302    10290  node             home\n16302    10290  node             home/yunwei\n16302    10290  node             yunwei\n16302    10290  node             home/yunwei/.vscode-server\n16302    10290  node             yunwei/.vscode-server\n16302    10290  node             .vscode-server\n16302    10290  node             home/yunwei/.vscode-server/data\n16302    10290  node             yunwei/.vscode-server/data\n16302    10290  node             .vscode-server/data\n16302    10290  node             data\n16302    10290  node             home/yunwei/.vscode-server/data/User\n16302    10290  node             yunwei/.vscode-server/data/User\n16302    10290  node             .vscode-server/data/User\n16302    10290  node             data/User\n16302    10290  node             User\n16302    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n16302    10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n16302    10290  node             .vscode-server/data/User/workspaceStorage\n16302    10290  node             data/User/workspaceStorage\n16302    10290  node             User/workspaceStorage\n16302    10290  node             workspaceStorage\n16302    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n16302    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n16302    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n16302    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n16302    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n16302    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n16302    10290  node             683061573fc2bafa947b4d87342b0cd1\n16302    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n16302    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n16302    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n16302    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n16302    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n16302    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n16302    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n16302    10290  node             vscode.lock\n16302    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n16302    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n16302    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n16302    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n16302    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n16302    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n16302    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n16302    10290  node             vscode.lock\n16302    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n16302    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n16302    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n16302    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n16302    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n16302    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n16302    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n16302    10290  node             vscode.lock\n16302    10290  node             home\n16302    10290  node             home/yunwei\n16302    10290  node             yunwei\n16302    10290  node             home/yunwei/.vscode-server\n16302    10290  node             yunwei/.vscode-server\n16302    10290  node             .vscode-server\n16302    10290  node             home/yunwei/.vscode-server/data\n16302    10290  node             yunwei/.vscode-server/data\n16302    10290  node             .vscode-server/data\n16302    10290  node             data\n16302    10290  node             home/yunwei/.vscode-server/data/User\n16302    10290  node             yunwei/.vscode-server/data/User\n16302    10290  node             .vscode-server/data/User\n16302    10290  node             data/User\n16302    10290  node             User\n16302    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n16302    10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n16302    10290  node             .vscode-server/data/User/workspaceStorage\n16302    10290  node             data/User/workspaceStorage\n16302    10290  node             User/workspaceStorage\n16302    10290  node             workspaceStorage\n16302    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n16302    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n16302    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n16302    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n16302    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n16302    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n16302    10290  node             683061573fc2bafa947b4d87342b0cd1\n16302    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n16302    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n16302    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n16302    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n16302    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n16302    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n16302    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n16303    10290  node             vscode.lock\n16303    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n16303    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n16303    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n16303    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n16303    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n16303    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n16303    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n16303    10290  node             vscode.lock\n16303    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n16303    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n16303    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n16303    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n16303    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n16303    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n16303    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n16303    10290  node             vscode.lock\n16303    10290  node             home\n16303    10290  node             home/yunwei\n16303    10290  node             yunwei\n16303    10290  node             home/yunwei/.vscode-server\n16303    10290  node             yunwei/.vscode-server\n16303    10290  node             .vscode-server\n16303    10290  node             home/yunwei/.vscode-server/data\n16303    10290  node             yunwei/.vscode-server/data\n16303    10290  node             .vscode-server/data\n16303    10290  node             data\n16303    10290  node             home/yunwei/.vscode-server/data/User\n16303    10290  node             yunwei/.vscode-server/data/User\n16303    10290  node             .vscode-server/data/User\n16303    10290  node             data/User\n16303    10290  node             User\n16303    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n16303    10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n16303    10290  node             .vscode-server/data/User/workspaceStorage\n16303    10290  node             data/User/workspaceStorage\n16303    10290  node             User/workspaceStorage\n16303    10290  node             workspaceStorage\n16303    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n16303    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n16303    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n16303    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n16303    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n16303    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n16303    10290  node             683061573fc2bafa947b4d87342b0cd1\n16303    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n16303    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n16303    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n16303    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n16303    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n16303    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n16303    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n16303    10290  node             vscode.lock\n16303    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n16303    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n16303    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n16303    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n16303    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n16303    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n16303    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n16303    10290  node             vscode.lock\n16303    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n16303    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n16303    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n16303    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n16303    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n16303    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n16303    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n16303    10290  node             vscode.lock\n16358    1720   node             proc/14828/cmdline\n16358    1720   node             14828/cmdline\n16358    1720   node             cmdline\n16368    1720   node             proc/12050/cmdline\n16368    1720   node             12050/cmdline\n16368    1720   node             cmdline\n16369    1720   node             proc/30931/cmdline\n16369    1720   node             30931/cmdline\n16369    1720   node             cmdline\n16369    1720   node             proc/31190/cmdline\n16369    1720   node             31190/cmdline\n16369    1720   node             cmdline\n16369    1720   node             proc/17505/cmdline\n16369    1720   node             17505/cmdline\n16369    1720   node             cmdline\n16561    1720   node             proc/14828/cmdline\n16561    1720   node             14828/cmdline\n16561    1720   node             cmdline\n16569    1720   node             proc/12050/cmdline\n16569    1720   node             12050/cmdline\n16569    1720   node             cmdline\n16569    1720   node             proc/30931/cmdline\n16569    1720   node             30931/cmdline\n16569    1720   node             cmdline\n16569    1720   node             proc/31190/cmdline\n16569    1720   node             31190/cmdline\n16569    1720   node             cmdline\n16569    1720   node             proc/17505/cmdline\n16569    1720   node             17505/cmdline\n16569    1720   node             cmdline\n16764    1720   node             proc/14828/cmdline\n16769    1720   node             14828/cmdline\n16769    1720   node             cmdline\n16769    1720   node             proc/12050/cmdline\n16769    1720   node             12050/cmdline\n16769    1720   node             cmdline\n16769    1720   node             proc/30931/cmdline\n16769    1720   node             30931/cmdline\n16769    1720   node             cmdline\n16769    1720   node             proc/31190/cmdline\n16769    1720   node             31190/cmdline\n16769    1720   node             cmdline\n16769    1720   node             proc/17505/cmdline\n16769    1720   node             17505/cmdline\n16769    1720   node             cmdline\n16967    1720   node             proc/14828/cmdline\n16967    1720   node             14828/cmdline\n16967    1720   node             cmdline\n16967    10038  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n16967    10038  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n16967    10038  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n16967    10038  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n16967    10038  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n16967    10038  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n16967    10038  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n16967    10038  node             vscode.lock\n16968    10038  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n16968    10038  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n16968    10038  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n16968    10038  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n16968    10038  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n16968    10038  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n16968    10038  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n16968    10038  node             vscode.lock\n16968    10049  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n16968    10049  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n16968    10049  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n16968    10049  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n16968    10049  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n16968    10049  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n16968    10049  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n16968    10049  node             vscode.lock\n16968    1703   node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n16968    1703   node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n16968    1703   node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n16968    1703   node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n16968    1703   node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n16968    1703   node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n16968    1703   node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n16968    1703   node             vscode.lock\n16971    1720   node             proc/12050/cmdline\n16971    1720   node             12050/cmdline\n16971    1720   node             cmdline\n16971    1720   node             proc/30931/cmdline\n16971    1720   node             30931/cmdline\n16971    1720   node             cmdline\n16971    1720   node             proc/31190/cmdline\n16971    1720   node             31190/cmdline\n16971    1720   node             cmdline\n16971    1720   node             proc/17505/cmdline\n16971    1720   node             17505/cmdline\n16971    1720   node             cmdline\n17170    1720   node             proc/14828/cmdline\n17170    1720   node             14828/cmdline\n17170    1720   node             cmdline\n17174    1720   node             proc/12050/cmdline\n17174    1720   node             12050/cmdline\n17174    1720   node             cmdline\n17174    1720   node             proc/30931/cmdline\n17174    1720   node             30931/cmdline\n17174    1720   node             cmdline\n17174    1720   node             proc/31190/cmdline\n17174    1720   node             31190/cmdline\n17174    1720   node             cmdline\n17174    1720   node             proc/17505/cmdline\n17174    1720   node             17505/cmdline\n17174    1720   node             cmdline\n17306    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n17306    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n17306    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n17306    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n17306    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n17306    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n17306    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n17306    10290  node             vscode.lock\n17306    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n17306    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n17306    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n17306    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n17306    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n17306    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n17306    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n17306    10290  node             vscode.lock\n17306    10290  node             home\n17306    10290  node             home/yunwei\n17306    10290  node             yunwei\n17306    10290  node             home/yunwei/.vscode-server\n17306    10290  node             yunwei/.vscode-server\n17306    10290  node             .vscode-server\n17306    10290  node             home/yunwei/.vscode-server/data\n17306    10290  node             yunwei/.vscode-server/data\n17306    10290  node             .vscode-server/data\n17306    10290  node             data\n17306    10290  node             home/yunwei/.vscode-server/data/User\n17306    10290  node             yunwei/.vscode-server/data/User\n17306    10290  node             .vscode-server/data/User\n17306    10290  node             data/User\n17306    10290  node             User\n17306    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n17306    10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n17306    10290  node             .vscode-server/data/User/workspaceStorage\n17306    10290  node             data/User/workspaceStorage\n17306    10290  node             User/workspaceStorage\n17306    10290  node             workspaceStorage\n17306    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n17306    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n17306    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n17306    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n17306    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n17306    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n17306    10290  node             683061573fc2bafa947b4d87342b0cd1\n17306    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n17306    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n17306    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n17306    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n17306    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n17306    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n17306    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n17306    10290  node             vscode.lock\n17307    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n17307    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n17307    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n17307    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n17307    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n17307    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n17307    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n17307    10290  node             vscode.lock\n17307    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n17307    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n17307    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n17307    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n17307    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n17307    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n17307    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n17307    10290  node             vscode.lock\n17307    10290  node             home\n17307    10290  node             home/yunwei\n17307    10290  node             yunwei\n17307    10290  node             home/yunwei/.vscode-server\n17307    10290  node             yunwei/.vscode-server\n17307    10290  node             .vscode-server\n17307    10290  node             home/yunwei/.vscode-server/data\n17307    10290  node             yunwei/.vscode-server/data\n17307    10290  node             .vscode-server/data\n17307    10290  node             data\n17307    10290  node             home/yunwei/.vscode-server/data/User\n17307    10290  node             yunwei/.vscode-server/data/User\n17307    10290  node             .vscode-server/data/User\n17307    10290  node             data/User\n17307    10290  node             User\n17307    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n17307    10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n17307    10290  node             .vscode-server/data/User/workspaceStorage\n17307    10290  node             data/User/workspaceStorage\n17307    10290  node             User/workspaceStorage\n17307    10290  node             workspaceStorage\n17307    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n17307    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n17307    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n17307    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n17307    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n17307    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n17307    10290  node             683061573fc2bafa947b4d87342b0cd1\n17307    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n17307    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n17307    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n17307    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n17307    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n17307    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n17307    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n17307    10290  node             vscode.lock\n17307    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n17307    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n17307    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n17307    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n17307    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n17307    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n17307    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n17307    10290  node             vscode.lock\n17307    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n17307    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n17307    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n17307    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n17307    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n17307    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n17307    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n17307    10290  node             vscode.lock\n17307    10290  node             home\n17307    10290  node             home/yunwei\n17307    10290  node             yunwei\n17307    10290  node             home/yunwei/.vscode-server\n17307    10290  node             yunwei/.vscode-server\n17307    10290  node             .vscode-server\n17307    10290  node             home/yunwei/.vscode-server/data\n17307    10290  node             yunwei/.vscode-server/data\n17307    10290  node             .vscode-server/data\n17307    10290  node             data\n17307    10290  node             home/yunwei/.vscode-server/data/User\n17307    10290  node             yunwei/.vscode-server/data/User\n17307    10290  node             .vscode-server/data/User\n17307    10290  node             data/User\n17307    10290  node             User\n17307    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n17307    10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n17307    10290  node             .vscode-server/data/User/workspaceStorage\n17307    10290  node             data/User/workspaceStorage\n17307    10290  node             User/workspaceStorage\n17307    10290  node             workspaceStorage\n17307    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n17307    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n17307    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n17307    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n17307    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n17307    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n17307    10290  node             683061573fc2bafa947b4d87342b0cd1\n17307    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n17307    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n17307    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n17307    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n17307    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n17307    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n17307    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n17307    10290  node             vscode.lock\n17307    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n17307    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n17307    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n17307    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n17307    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n17307    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n17307    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n17307    10290  node             vscode.lock\n17307    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n17307    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n17307    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n17307    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n17307    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n17307    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n17307    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n17307    10290  node             vscode.lock\n17373    1720   node             proc/14828/cmdline\n17373    1720   node             14828/cmdline\n17373    1720   node             cmdline\n17376    1720   node             proc/12050/cmdline\n17376    1720   node             12050/cmdline\n17376    1720   node             cmdline\n17376    1720   node             proc/30931/cmdline\n17376    1720   node             30931/cmdline\n17376    1720   node             cmdline\n17376    1720   node             proc/31190/cmdline\n17376    1720   node             31190/cmdline\n17376    1720   node             cmdline\n17376    1720   node             proc/17505/cmdline\n17376    1720   node             17505/cmdline\n17376    1720   node             cmdline\n17574    1720   node             proc/14828/cmdline\n17574    1720   node             14828/cmdline\n17574    1720   node             cmdline\n17578    1720   node             proc/12050/cmdline\n17578    1720   node             12050/cmdline\n17578    1720   node             cmdline\n17578    1720   node             proc/30931/cmdline\n17578    1720   node             30931/cmdline\n17578    1720   node             cmdline\n17578    1720   node             proc/31190/cmdline\n17578    1720   node             31190/cmdline\n17578    1720   node             cmdline\n17578    1720   node             proc/17505/cmdline\n17578    1720   node             17505/cmdline\n17578    1720   node             cmdline\n17778    1720   node             proc/14828/cmdline\n17778    1720   node             14828/cmdline\n17778    1720   node             cmdline\n17778    1720   node             proc/12050/cmdline\n17778    1720   node             12050/cmdline\n17778    1720   node             cmdline\n17778    1720   node             proc/30931/cmdline\n17778    1720   node             30931/cmdline\n17778    1720   node             cmdline\n17778    1720   node             proc/31190/cmdline\n17778    1720   node             31190/cmdline\n17778    1720   node             cmdline\n17778    1720   node             proc/17505/cmdline\n17778    1720   node             17505/cmdline\n17778    1720   node             cmdline\n17976    10038  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n17976    10038  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n17976    10038  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n17976    10038  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n17976    10038  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n17976    10038  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n17976    10038  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n17976    10038  node             vscode.lock\n17977    10038  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n17977    10038  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n17977    10038  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n17977    10038  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n17977    10038  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n17977    10038  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n17977    10038  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n17977    10038  node             vscode.lock\n17977    1703   node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n17977    1703   node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n17977    1703   node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n17977    1703   node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n17977    1703   node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n17977    1703   node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n17977    1703   node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n17977    1703   node             vscode.lock\n17977    10049  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n17977    10049  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n17977    10049  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n17977    10049  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n17977    10049  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n17977    10049  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n17977    10049  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n17977    10049  node             vscode.lock\n17979    1720   node             proc/14828/cmdline\n17979    1720   node             14828/cmdline\n17979    1720   node             cmdline\n17979    1720   node             proc/12050/cmdline\n17979    1720   node             12050/cmdline\n17979    1720   node             cmdline\n17979    1720   node             proc/30931/cmdline\n17979    1720   node             30931/cmdline\n17979    1720   node             cmdline\n17979    1720   node             proc/31190/cmdline\n17979    1720   node             31190/cmdline\n17979    1720   node             cmdline\n17979    1720   node             proc/17505/cmdline\n17979    1720   node             17505/cmdline\n17979    1720   node             cmdline\n18039    818    irqbalance       proc/interrupts\n18039    818    irqbalance       interrupts\n18039    818    irqbalance       proc/stat\n18039    818    irqbalance       stat\n18180    1720   node             proc/14828/cmdline\n18180    1720   node             14828/cmdline\n18180    1720   node             cmdline\n18180    1720   node             proc/12050/cmdline\n18180    1720   node             12050/cmdline\n18180    1720   node             cmdline\n18180    1720   node             proc/30931/cmdline\n18180    1720   node             30931/cmdline\n18180    1720   node             cmdline\n18180    1720   node             proc/31190/cmdline\n18180    1720   node             31190/cmdline\n18180    1720   node             cmdline\n18180    1720   node             proc/17505/cmdline\n18180    1720   node             17505/cmdline\n18180    1720   node             cmdline\n18315    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n18315    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n18315    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n18315    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n18315    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n18315    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n18315    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n18315    10290  node             vscode.lock\n18315    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n18315    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n18315    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n18315    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n18315    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n18315    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n18315    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n18315    10290  node             vscode.lock\n18315    10290  node             home\n18315    10290  node             home/yunwei\n18315    10290  node             yunwei\n18315    10290  node             home/yunwei/.vscode-server\n18315    10290  node             yunwei/.vscode-server\n18315    10290  node             .vscode-server\n18315    10290  node             home/yunwei/.vscode-server/data\n18315    10290  node             yunwei/.vscode-server/data\n18315    10290  node             .vscode-server/data\n18315    10290  node             data\n18315    10290  node             home/yunwei/.vscode-server/data/User\n18315    10290  node             yunwei/.vscode-server/data/User\n18315    10290  node             .vscode-server/data/User\n18315    10290  node             data/User\n18315    10290  node             User\n18315    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n18315    10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n18315    10290  node             .vscode-server/data/User/workspaceStorage\n18315    10290  node             data/User/workspaceStorage\n18315    10290  node             User/workspaceStorage\n18315    10290  node             workspaceStorage\n18315    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n18315    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n18315    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n18315    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n18315    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n18315    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n18315    10290  node             683061573fc2bafa947b4d87342b0cd1\n18315    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n18315    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n18315    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n18315    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n18315    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n18315    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n18315    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n18315    10290  node             vscode.lock\n18315    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n18315    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n18315    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n18315    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n18315    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n18315    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n18315    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n18315    10290  node             vscode.lock\n18315    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n18315    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n18315    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n18315    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n18315    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n18315    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n18315    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n18315    10290  node             vscode.lock\n18315    10290  node             home\n18315    10290  node             home/yunwei\n18315    10290  node             yunwei\n18315    10290  node             home/yunwei/.vscode-server\n18315    10290  node             yunwei/.vscode-server\n18315    10290  node             .vscode-server\n18315    10290  node             home/yunwei/.vscode-server/data\n18315    10290  node             yunwei/.vscode-server/data\n18315    10290  node             .vscode-server/data\n18315    10290  node             data\n18315    10290  node             home/yunwei/.vscode-server/data/User\n18315    10290  node             yunwei/.vscode-server/data/User\n18315    10290  node             .vscode-server/data/User\n18315    10290  node             data/User\n18315    10290  node             User\n18315    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n18315    10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n18315    10290  node             .vscode-server/data/User/workspaceStorage\n18315    10290  node             data/User/workspaceStorage\n18315    10290  node             User/workspaceStorage\n18315    10290  node             workspaceStorage\n18315    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n18315    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n18315    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n18315    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n18315    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n18315    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n18315    10290  node             683061573fc2bafa947b4d87342b0cd1\n18315    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n18315    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n18315    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n18315    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n18315    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n18315    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n18315    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n18315    10290  node             vscode.lock\n18315    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n18315    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n18315    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n18315    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n18315    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n18315    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n18315    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n18315    10290  node             vscode.lock\n18315    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n18315    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n18315    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n18315    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n18315    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n18315    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n18315    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n18315    10290  node             vscode.lock\n18315    10290  node             home\n18315    10290  node             home/yunwei\n18315    10290  node             yunwei\n18315    10290  node             home/yunwei/.vscode-server\n18315    10290  node             yunwei/.vscode-server\n18315    10290  node             .vscode-server\n18315    10290  node             home/yunwei/.vscode-server/data\n18315    10290  node             yunwei/.vscode-server/data\n18315    10290  node             .vscode-server/data\n18315    10290  node             data\n18315    10290  node             home/yunwei/.vscode-server/data/User\n18315    10290  node             yunwei/.vscode-server/data/User\n18315    10290  node             .vscode-server/data/User\n18315    10290  node             data/User\n18315    10290  node             User\n18315    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage\n18315    10290  node             yunwei/.vscode-server/data/User/workspaceStorage\n18315    10290  node             .vscode-server/data/User/workspaceStorage\n18315    10290  node             data/User/workspaceStorage\n18315    10290  node             User/workspaceStorage\n18315    10290  node             workspaceStorage\n18315    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n18315    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n18315    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n18315    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n18315    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n18315    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1\n18315    10290  node             683061573fc2bafa947b4d87342b0cd1\n18315    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n18315    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n18315    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n18315    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n18315    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n18315    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n18315    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n18315    10290  node             vscode.lock\n18315    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n18315    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n18315    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n18315    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n18315    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n18315    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n18315    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n18315    10290  node             vscode.lock\n18315    10290  node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n18315    10290  node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n18315    10290  node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n18315    10290  node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n18315    10290  node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n18315    10290  node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n18315    10290  node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n18315    10290  node             vscode.lock\n18383    1720   node             proc/14828/cmdline\n18383    1720   node             14828/cmdline\n18383    1720   node             cmdline\n18383    1720   node             proc/12050/cmdline\n18383    1720   node             12050/cmdline\n18383    1720   node             cmdline\n18383    1720   node             proc/30931/cmdline\n18383    1720   node             30931/cmdline\n18383    1720   node             cmdline\n18383    1720   node             proc/31190/cmdline\n18383    1720   node             31190/cmdline\n18383    1720   node             cmdline\n18383    1720   node             proc/17505/cmdline\n18383    1720   node             17505/cmdline\n18383    1720   node             cmdline\n18433    31556  bpftrace         sys/kernel/debug/tracing\n18433    31556  bpftrace         kernel/debug/tracing\n18433    31556  bpftrace         debug/tracing\n18433    31556  bpftrace         tracing\n18433    31556  bpftrace         sys/kernel/debug/tracing/kprobe_events\n18433    31556  bpftrace         kernel/debug/tracing/kprobe_events\n18433    31556  bpftrace         debug/tracing/kprobe_events\n18433    31556  bpftrace         tracing/kprobe_events\n18433    31556  bpftrace         kprobe_events\n18458    31556  bpftrace         sys/kernel/debug/tracing\n18458    31556  bpftrace         kernel/debug/tracing\n18458    31556  bpftrace         debug/tracing\n18458    31556  bpftrace         tracing\n18458    31556  bpftrace         sys/kernel/debug/tracing/kprobe_events\n18458    31556  bpftrace         kernel/debug/tracing/kprobe_events\n18458    31556  bpftrace         debug/tracing/kprobe_events\n18458    31556  bpftrace         tracing/kprobe_events\n18458    31556  bpftrace         kprobe_events\n\n\n\n", "stderr": "", "returncode": 0, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nTrace directory entry cache (dcache) lookups by process\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces directory entry cache (dcache) lookups in the Linux kernel. The code uses kernel dynamic tracing of functions lookup_fast() and d_lookup() to capture lookup information and prints the time, process ID, command, and file name for each lookup event.\n\n```\n#ifndef BPFTRACE_HAVE_BTF\n#include <linux/fs.h>\n#include <linux/sched.h>\n\n// from fs/namei.c:\nstruct nameidata {\n        struct path     path;\n        struct qstr     last;\n        // [...]\n};\n#endif\n\nBEGIN\n{\n\tprintf(\"Tracing dcache lookups... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-8s %-6s %-16s %1s %s\\n\", \"TIME\", \"PID\", \"COMM\", \"T\", \"FILE\");\n}\n\n// comment out this block to avoid showing hits:\nkprobe:lookup_fast,\nkprobe:lookup_fast.constprop.*\n{\n\t$nd = (struct nameidata *)arg0;\n\tprintf(\"%-8d %-6d %-16s R %s\\n\", elapsed / 1e6, pid, comm,\n\t    str($nd->last.name));\n}\n\nkprobe:d_lookup\n{\n\t$name = (struct qstr *)arg1;\n\t@fname[tid] = $name->name;\n}\n\nkretprobe:d_lookup\n/@fname[tid]/\n{\n\tprintf(\"%-8d %-6d %-16s M %s\\n\", elapsed / 1e6, pid, comm,\n\t    str(@fname[tid]));\n\tdelete(@fname[tid]);\n}\n\n```\n\nexample: Write a BPF code that traces the syscalls statfs(), statx(), newstat(), and newlstat(), providing information about the PID, process name, error code, and path being accessed.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing stat syscalls... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-6s %-16s %3s %s\\n\", \"PID\", \"COMM\", \"ERR\", \"PATH\");\n}\n\ntracepoint:syscalls:sys_enter_statfs\n{\n\t@filename[tid] = args.pathname;\n}\n\ntracepoint:syscalls:sys_enter_statx,\ntracepoint:syscalls:sys_enter_newstat,\ntracepoint:syscalls:sys_enter_newlstat\n{\n\t@filename[tid] = args.filename;\n}\n\ntracepoint:syscalls:sys_exit_statfs,\ntracepoint:syscalls:sys_exit_statx,\ntracepoint:syscalls:sys_exit_newstat,\ntracepoint:syscalls:sys_exit_newlstat\n/@filename[tid]/\n{\n\t$ret = args.ret;\n\t$errno = $ret >= 0 ? 0 : - $ret;\n\n\tprintf(\"%-6d %-16s %3d %s\\n\", pid, comm, $errno,\n\t    str(@filename[tid]));\n\tdelete(@filename[tid]);\n}\n\nEND\n{\n\tclear(@filename);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nTrace directory entry cache (dcache) lookups by process\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e #ifndef BPFTRACE_HAVE_BTF\n#include <linux/genhd.h>\n#include <linux/bio.h>\n#endif\n\nBEGIN\n{\n\tprintf(\"Tracing md flush events... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-8s %-6s %-16s\\n\", \"TIME\", \"PID\", \"COMM\");\n}\n\nkprobe:md_flush_request\n{\n\ttime(\"%H:%M:%S \");\n\tprintf(\"%-6d %-16s\\n\", pid, comm);\n}", "stdout": "Attaching 2 probes...\nTracing md flush events... Hit Ctrl-C to end.\nTIME     PID    COMM            \n\n\n", "stderr": "", "returncode": 0, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nTrace md flush events with pid and process name\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces md flush events and displays the time, process ID, command, and device information of each event.\n\n```\n#ifndef BPFTRACE_HAVE_BTF\n#include <linux/genhd.h>\n#include <linux/bio.h>\n#endif\n\nBEGIN\n{\n\tprintf(\"Tracing md flush events... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-8s %-6s %-16s %s\\n\", \"TIME\", \"PID\", \"COMM\", \"DEVICE\");\n}\n\nkprobe:md_flush_request\n{\n\ttime(\"%H:%M:%S \");\n\tprintf(\"%-6d %-16s %s\\n\", pid, comm,\n\t    ((struct bio *)arg1)->bi_bdev->bd_disk->disk_name);\n}\n\n```\n\nexample: Write a BPF code that traces sync-related system calls, such as sync(), syncfs(), fsync(), and fdatasync(), and prints the time, process ID, command, and event for each traced system call.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing sync syscalls... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-9s %-6s %-16s %s\\n\", \"TIME\", \"PID\", \"COMM\", \"EVENT\");\n}\n\ntracepoint:syscalls:sys_enter_sync,\ntracepoint:syscalls:sys_enter_syncfs,\ntracepoint:syscalls:sys_enter_fsync,\ntracepoint:syscalls:sys_enter_fdatasync,\ntracepoint:syscalls:sys_enter_sync_file_range*,\ntracepoint:syscalls:sys_enter_msync\n{\n\ttime(\"%H:%M:%S  \");\n\tprintf(\"%-6d %-16s %s\\n\", pid, comm, probe);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nTrace md flush events with pid and process name\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN\n{\n\tprintf(\"Tracing cap_capable syscalls... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-9s %-6s %-6s %-16s %-4s %-20s AUDIT\\n\", \"TIME\", \"UID\", \"PID\",\n\t    \"COMM\", \"CAP\", \"NAME\");\n\t@cap[0] = \"CAP_CHOWN\";\n\t@cap[1] = \"CAP_DAC_OVERRIDE\";\n\t@cap[2] = \"CAP_DAC_READ_SEARCH\";\n\t@cap[3] = \"CAP_FOWNER\";\n\t@cap[4] = \"CAP_FSETID\";\n\t@cap[5] = \"CAP_KILL\";\n\t@cap[6] = \"CAP_SETGID\";\n\t@cap[7] = \"CAP_SETUID\";\n\t@cap[8] = \"CAP_SETPCAP\";\n\t@cap[9] = \"CAP_LINUX_IMMUTABLE\";\n\t@cap[10] = \"CAP_NET_BIND_SERVICE\";\n\t@cap[11] = \"CAP_NET_BROADCAST\";\n\t@cap[12] = \"CAP_NET_ADMIN\";\n\t@cap[13] = \"CAP_NET_RAW\";\n\t@cap[14] = \"CAP_IPC_LOCK\";\n\t@cap[15] = \"CAP_IPC_OWNER\";\n\t@cap[16] = \"CAP_SYS_MODULE\";\n\t@cap[17] = \"CAP_SYS_RAWIO\";\n\t@cap[18] = \"CAP_SYS_CHROOT\";\n\t@cap[19] = \"CAP_SYS_PTRACE\";\n\t@cap[20] = \"CAP_SYS_PACCT\";\n\t@cap[21] = \"CAP_SYS_ADMIN\";\n\t@cap[22] = \"CAP_SYS_BOOT\";\n\t@cap[23] = \"CAP_SYS_NICE\";\n\t@cap[24] = \"CAP_SYS_RESOURCE\";\n\t@cap[25] = \"CAP_SYS_TIME\";\n\t@cap[26] = \"CAP_SYS_TTY_CONFIG\";\n\t@cap[27] = \"CAP_MKNOD\";\n\t@cap[28] = \"CAP_LEASE\";\n\t@cap[29] = \"CAP_AUDIT_WRITE\";\n\t@cap[30] = \"CAP_AUDIT_CONTROL\";\n\t@cap[31] = \"CAP_SETFCAP\";\n\t@cap[32] = \"CAP_MAC_OVERRIDE\";\n\t@cap[33] = \"CAP_MAC_ADMIN\";\n\t@cap[34] = \"CAP_SYSLOG\";\n\t@cap[35] = \"CAP_WAKE_ALARM\";\n\t@cap[36] = \"CAP_BLOCK_SUSPEND\";\n\t@cap[37] = \"CAP_AUDIT_READ\";\n\t@cap[38] = \"CAP_PERFMON\";\n\t@cap[39] = \"CAP_BPF\";\n\t@cap[40] = \"CAP_CHECKPOINT_RESTORE\";\n}\n\nkprobe:cap_capable\n{\n\t$cap = arg2;\n\t$audit = arg3;\n\ttime(\"%H:%M:%S  \");\n\tprintf(\"%-6d %-6d %-16s %-4d %-20s %d\\n\", uid, pid, comm, $cap,\n\t    @cap[$cap], $audit);\n}\n\nEND\n{\n\tclear(@cap);\n}\n", "stdout": "Attaching 3 probes...\nTracing cap_capable syscalls... Hit Ctrl-C to end.\nTIME      UID    PID    COMM             CAP  NAME                 AUDIT\n00:04:57  1000   31564  sudo             29   CAP_AUDIT_WRITE      0\n00:04:57  1000   31564  sudo             29   CAP_AUDIT_WRITE      0\n00:04:57  0      409    systemd-journal  19   CAP_SYS_PTRACE       0\n00:04:57  0      409    systemd-journal  19   CAP_SYS_PTRACE       0\n00:04:57  0      409    systemd-journal  21   CAP_SYS_ADMIN        0\n00:04:57  0      409    systemd-journal  7    CAP_SETUID           0\n00:05:13  997    563    systemd-timesyn  12   CAP_NET_ADMIN        0\n\n\n\n", "stderr": "", "returncode": 0, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nTrace security capability checks events\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces the security capability checks (cap_capable()) and prints the UID, PID, command name, capability, capability name, and audit value for each syscall in a clear and organized manner.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing cap_capable syscalls... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-9s %-6s %-6s %-16s %-4s %-20s AUDIT\\n\", \"TIME\", \"UID\", \"PID\",\n\t    \"COMM\", \"CAP\", \"NAME\");\n\t@cap[0] = \"CAP_CHOWN\";\n\t@cap[1] = \"CAP_DAC_OVERRIDE\";\n\t@cap[2] = \"CAP_DAC_READ_SEARCH\";\n\t@cap[3] = \"CAP_FOWNER\";\n\t@cap[4] = \"CAP_FSETID\";\n\t@cap[5] = \"CAP_KILL\";\n\t@cap[6] = \"CAP_SETGID\";\n\t@cap[7] = \"CAP_SETUID\";\n\t@cap[8] = \"CAP_SETPCAP\";\n\t@cap[9] = \"CAP_LINUX_IMMUTABLE\";\n\t@cap[10] = \"CAP_NET_BIND_SERVICE\";\n\t@cap[11] = \"CAP_NET_BROADCAST\";\n\t@cap[12] = \"CAP_NET_ADMIN\";\n\t@cap[13] = \"CAP_NET_RAW\";\n\t@cap[14] = \"CAP_IPC_LOCK\";\n\t@cap[15] = \"CAP_IPC_OWNER\";\n\t@cap[16] = \"CAP_SYS_MODULE\";\n\t@cap[17] = \"CAP_SYS_RAWIO\";\n\t@cap[18] = \"CAP_SYS_CHROOT\";\n\t@cap[19] = \"CAP_SYS_PTRACE\";\n\t@cap[20] = \"CAP_SYS_PACCT\";\n\t@cap[21] = \"CAP_SYS_ADMIN\";\n\t@cap[22] = \"CAP_SYS_BOOT\";\n\t@cap[23] = \"CAP_SYS_NICE\";\n\t@cap[24] = \"CAP_SYS_RESOURCE\";\n\t@cap[25] = \"CAP_SYS_TIME\";\n\t@cap[26] = \"CAP_SYS_TTY_CONFIG\";\n\t@cap[27] = \"CAP_MKNOD\";\n\t@cap[28] = \"CAP_LEASE\";\n\t@cap[29] = \"CAP_AUDIT_WRITE\";\n\t@cap[30] = \"CAP_AUDIT_CONTROL\";\n\t@cap[31] = \"CAP_SETFCAP\";\n\t@cap[32] = \"CAP_MAC_OVERRIDE\";\n\t@cap[33] = \"CAP_MAC_ADMIN\";\n\t@cap[34] = \"CAP_SYSLOG\";\n\t@cap[35] = \"CAP_WAKE_ALARM\";\n\t@cap[36] = \"CAP_BLOCK_SUSPEND\";\n\t@cap[37] = \"CAP_AUDIT_READ\";\n\t@cap[38] = \"CAP_PERFMON\";\n\t@cap[39] = \"CAP_BPF\";\n\t@cap[40] = \"CAP_CHECKPOINT_RESTORE\";\n}\n\nkprobe:cap_capable\n{\n\t$cap = arg2;\n\t$audit = arg3;\n\ttime(\"%H:%M:%S  \");\n\tprintf(\"%-6d %-6d %-16s %-4d %-20s %d\\n\", uid, pid, comm, $cap,\n\t    @cap[$cap], $audit);\n}\n\nEND\n{\n\tclear(@cap);\n}\n\n```\n\nexample: Write a BPF code that traces sync-related system calls, such as sync(), syncfs(), fsync(), and fdatasync(), and prints the time, process ID, command, and event for each traced system call.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing sync syscalls... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-9s %-6s %-16s %s\\n\", \"TIME\", \"PID\", \"COMM\", \"EVENT\");\n}\n\ntracepoint:syscalls:sys_enter_sync,\ntracepoint:syscalls:sys_enter_syncfs,\ntracepoint:syscalls:sys_enter_fsync,\ntracepoint:syscalls:sys_enter_fdatasync,\ntracepoint:syscalls:sys_enter_sync_file_range*,\ntracepoint:syscalls:sys_enter_msync\n{\n\ttime(\"%H:%M:%S  \");\n\tprintf(\"%-6d %-16s %s\\n\", pid, comm, probe);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nTrace security capability checks events\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e #include <linux/sched.h>\n\nBEGIN\n{\n\tprintf(\"Tracing CPU scheduler... Hit Ctrl-C to end.\\n\");\n}\n\ntracepoint:sched:sched_wakeup,\ntracepoint:sched:sched_wakeup_new\n{\n\t@qtime[args.pid] = nsecs;\n}\n\ntracepoint:sched:sched_switch\n{\n\tif (args.prev_state == TASK_RUNNING) {\n\t\t@qtime[args.prev_pid] = nsecs;\n\t}\n\n\t$ns = @qtime[args.next_pid];\n\tif ($ns) {\n\t\t@usecs = hist((nsecs - $ns) / 1000);\n\t}\n\tdelete(@qtime[args.next_pid]);\n}\n\nEND\n{\n\tclear(@qtime);\n}", "stdout": "", "stderr": "stdin:11:2-14: ERROR: Can not access field 'pid' on type '(ctx) struct _tracepoint_sched_sched_wakeup_new *'. Try dereferencing it first, or using '->'\n    @qtime[args.pid] = nsecs;\n    ~~~~~~~~~~~~\nstdin:16:5-11: ERROR: Can not access field 'prev_state' on type '(ctx) struct _tracepoint_sched_sched_switch *'. Try dereferencing it first, or using '->'\n    if (args.prev_state == TASK_RUNNING) {\n       ~~~~~~\nstdin:17:3-15: ERROR: Can not access field 'prev_pid' on type '(ctx) struct _tracepoint_sched_sched_switch *'. Try dereferencing it first, or using '->'\n        @qtime[args.prev_pid] = nsecs;\n        ~~~~~~~~~~~~\nstdin:20:8-20: ERROR: Can not access field 'next_pid' on type '(ctx) struct _tracepoint_sched_sched_switch *'. Try dereferencing it first, or using '->'\n    $ns = @qtime[args.next_pid];\n          ~~~~~~~~~~~~\nstdin:24:2-21: ERROR: Can not access field 'next_pid' on type '(ctx) struct _tracepoint_sched_sched_switch *'. Try dereferencing it first, or using '->'\n    delete(@qtime[args.next_pid]);\n    ~~~~~~~~~~~~~~~~~~~\n", "returncode": 1, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nPrint CPU scheduler run queue latency as a histogram\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces the CPU scheduler and records the latency of tasks in the run queue, using the sched_wakeup, sched_wakeup_new, and sched_switch tracepoints, and displays the latency as a histogram.\n\n```\n#include <linux/sched.h>\n\nBEGIN\n{\n\tprintf(\"Tracing CPU scheduler... Hit Ctrl-C to end.\\n\");\n}\n\ntracepoint:sched:sched_wakeup,\ntracepoint:sched:sched_wakeup_new\n{\n\t@qtime[args.pid] = nsecs;\n}\n\ntracepoint:sched:sched_switch\n{\n\tif (args.prev_state == TASK_RUNNING) {\n\t\t@qtime[args.prev_pid] = nsecs;\n\t}\n\n\t$ns = @qtime[args.next_pid];\n\tif ($ns) {\n\t\t@usecs = hist((nsecs - $ns) / 1000);\n\t}\n\tdelete(@qtime[args.next_pid]);\n}\n\nEND\n{\n\tclear(@qtime);\n}\n\n```\n\nexample: Write a BPF code that calculates and samples the length of the CPU scheduler run queue as a histogram, subtracting the currently running task from the total queue length.\n\n```\n#ifndef BPFTRACE_HAVE_BTF\n#include <linux/sched.h>\n\n// Until BTF is available, we'll need to declare some of this struct manually,\n// since it isn't available to be #included. This will need maintenance to match\n// your kernel version. It is from kernel/sched/sched.h:\nstruct cfs_rq {\n\tstruct load_weight load;\n\tunsigned long runnable_weight;\n\tunsigned int nr_running;\n\tunsigned int h_nr_running;\n};\n#endif\n\nBEGIN\n{\n\tprintf(\"Sampling run queue length at 99 Hertz... Hit Ctrl-C to end.\\n\");\n}\n\nprofile:hz:99\n{\n\t$task = (struct task_struct *)curtask;\n\t$my_q = (struct cfs_rq *)$task->se.cfs_rq;\n\t$len = $my_q->nr_running;\n\t$len = $len > 0 ? $len - 1 : 0;\t// subtract currently running task\n\t@runqlen = lhist($len, 0, 100, 1);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nPrint CPU scheduler run queue latency as a histogram\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e #include <linux/mmzone.h>\n\nkprobe:compact_zone {\n  @start[tid] = nsecs;\n  @pid[tid] = pid;\n}\n\nkretprobe:compact_zone {\n  $latency = (nsecs - @start[tid]) / 1000000;\n  printf(\"PID %d compacted zone with latency %d ms\\n\", @pid[tid], $latency);\n  delete(@start[tid]);\n  delete(@pid[tid]);\n}", "stdout": "", "stderr": "/lib/modules/6.2.0-33-generic/build/include/linux/compiler-clang.h:41:9: warning: '__HAVE_BUILTIN_BSWAP32__' macro redefined [-Wmacro-redefined]\nnote: previous definition is here\n/lib/modules/6.2.0-33-generic/build/include/linux/compiler-clang.h:42:9: warning: '__HAVE_BUILTIN_BSWAP64__' macro redefined [-Wmacro-redefined]\nnote: previous definition is here\n/lib/modules/6.2.0-33-generic/build/include/linux/compiler-clang.h:43:9: warning: '__HAVE_BUILTIN_BSWAP16__' macro redefined [-Wmacro-redefined]\nnote: previous definition is here\n/lib/modules/6.2.0-33-generic/build/include/linux/kasan-checks.h:24:9: error: use of undeclared identifier 'true'\n/lib/modules/6.2.0-33-generic/build/include/linux/kasan-checks.h:28:9: error: use of undeclared identifier 'true'\n/lib/modules/6.2.0-33-generic/build/include/linux/kasan-checks.h:42:9: error: use of undeclared identifier 'true'\n/lib/modules/6.2.0-33-generic/build/include/linux/kasan-checks.h:46:9: error: use of undeclared identifier 'true'\n/lib/modules/6.2.0-33-generic/build/arch/x86/include/asm/ibt.h:101:47: error: use of undeclared identifier 'false'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:21:9: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:21:9: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:21:9: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:21:9: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:36:2: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:36:2: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:36:2: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:36:2: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:41:2: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:41:2: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:41:2: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:41:2: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:56:9: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:56:9: error: use of undeclared identifier 'uintptr_t'\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n", "returncode": 1, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nTrace compact zone events with PID and latency\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces block I/O operations and displays the latency for each operation, along with the disk, process, and PID associated with it.\n\n```\n#ifndef BPFTRACE_HAVE_BTF\n#include <linux/blkdev.h>\n#include <linux/blk-mq.h>\n#endif\n\nBEGIN\n{\n\tprintf(\"%-12s %-7s %-16s %-6s %7s\\n\", \"TIME(ms)\", \"DISK\", \"COMM\", \"PID\", \"LAT(ms)\");\n}\n\nkprobe:blk_account_io_start,\nkprobe:__blk_account_io_start\n{\n\t@start[arg0] = nsecs;\n\t@iopid[arg0] = pid;\n\t@iocomm[arg0] = comm;\n\t@disk[arg0] = ((struct request *)arg0)->q->disk->disk_name;\n}\n\nkprobe:blk_account_io_done,\nkprobe:__blk_account_io_done\n/@start[arg0] != 0 && @iopid[arg0] != 0 && @iocomm[arg0] != \"\"/\n\n{\n\t$now = nsecs;\n\tprintf(\"%-12u %-7s %-16s %-6d %7d\\n\",\n\t    elapsed / 1e6, @disk[arg0], @iocomm[arg0], @iopid[arg0],\n\t    ($now - @start[arg0]) / 1e6);\n\n\tdelete(@start[arg0]);\n\tdelete(@iopid[arg0]);\n\tdelete(@iocomm[arg0]);\n\tdelete(@disk[arg0]);\n}\n\nEND\n{\n\tclear(@start);\n\tclear(@iopid);\n\tclear(@iocomm);\n\tclear(@disk);\n}\n\n```\n\nexample: Write a BPF code that traces block device I/O latency by calculating the time difference between the start and completion of I/O operations and storing them in a histogram.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing block device I/O... Hit Ctrl-C to end.\\n\");\n}\n\nkprobe:blk_account_io_start,\nkprobe:__blk_account_io_start\n{\n\t@start[arg0] = nsecs;\n}\n\nkprobe:blk_account_io_done,\nkprobe:__blk_account_io_done\n/@start[arg0]/\n{\n\t@usecs = hist((nsecs - @start[arg0]) / 1000);\n\tdelete(@start[arg0]);\n}\n\nEND\n{\n\tclear(@start);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nTrace compact zone events with PID and latency\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e #include <linux/sched.h>\n\nBEGIN\n{\n  printf(\"Tracing long atomic critical sections... Hit Ctrl-C to end.\\n\");\n}\n\nkprobe:preempt_disable\n{\n  @start[tid] = nsecs;\n}\n\nkprobe:preempt_enable\n/@start[tid]/\n{\n  $time = nsecs - @start[tid];\n  if ($time > 1000000) {\n    printf(\"Long atomic critical section detected: %d us\\n\", $time / 1000);\n  }\n  delete(@start[tid]);\n}\n\nEND\n{\n  clear(@start);\n}", "stdout": "Attaching 4 probes...\n", "stderr": "stdin:6-8: WARNING: preempt_disable is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\nstdin:11-13: WARNING: preempt_enable is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\ncannot attach kprobe, probe entry may not exist\nERROR: Error attaching probe: 'kprobe:preempt_enable'\n", "returncode": 255, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nTrace and report long atomic critical sections in the kernel\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces voluntary sleep calls, printing the time, parent process ID (PPID), parent process command (PCOMM), process ID (PID), process command (COMM), and duration in seconds.\n\n```\n#ifndef BPFTRACE_HAVE_BTF\n#include <linux/time.h>\n#include <linux/sched.h>\n#endif\n\nBEGIN\n{\n\tprintf(\"Tracing sleeps. Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-8s %-6s %-16s %-6s %-16s %s\\n\", \"TIME\", \"PPID\", \"PCOMM\",\n\t    \"PID\", \"COMM\", \"SECONDS\");\n}\n\ntracepoint:syscalls:sys_enter_nanosleep\n/args.rqtp->tv_sec + args.rqtp->tv_nsec/\n{\n\t$task = (struct task_struct *)curtask;\n\ttime(\"%H:%M:%S \");\n\tprintf(\"%-6d %-16s %-6d %-16s %d.%03d\\n\", $task->real_parent->pid,\n\t    $task->real_parent->comm, pid, comm,\n\t    args.rqtp->tv_sec, (uint64)args.rqtp->tv_nsec / 1e6);\n}\n\n```\n\nexample: Write a BPF code that traces the CPU scheduler and records the latency of tasks in the run queue, using the sched_wakeup, sched_wakeup_new, and sched_switch tracepoints, and displays the latency as a histogram.\n\n```\n#include <linux/sched.h>\n\nBEGIN\n{\n\tprintf(\"Tracing CPU scheduler... Hit Ctrl-C to end.\\n\");\n}\n\ntracepoint:sched:sched_wakeup,\ntracepoint:sched:sched_wakeup_new\n{\n\t@qtime[args.pid] = nsecs;\n}\n\ntracepoint:sched:sched_switch\n{\n\tif (args.prev_state == TASK_RUNNING) {\n\t\t@qtime[args.prev_pid] = nsecs;\n\t}\n\n\t$ns = @qtime[args.next_pid];\n\tif ($ns) {\n\t\t@usecs = hist((nsecs - $ns) / 1000);\n\t}\n\tdelete(@qtime[args.next_pid]);\n}\n\nEND\n{\n\tclear(@qtime);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nTrace and report long atomic critical sections in the kernel\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e #include <linux/sched.h>\n\nBEGIN\n{\n\tprintf(\"Sampling run queue length at 99 Hertz... Hit Ctrl-C to end.\\n\");\n}\n\nprofile:hz:99\n{\n\t$task = (struct task_struct *)curtask;\n\t$my_q = (struct cfs_rq *)$task->se.cfs_rq;\n\t$len = $my_q->nr_running;\n\t$len = $len > 0 ? $len - 1 : 0;\n\t@runqlen = lhist($len, 0, 100, 1);\n}", "stdout": "Attaching 2 probes...\nSampling run queue length at 99 Hertz... Hit Ctrl-C to end.\n\n\n@runqlen: \n[0, 1)              3030 |@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@|\n[1, 2)               602 |@@@@@@@@@@                                          |\n[2, 3)                33 |                                                    |\n[3, 4)                 7 |                                                    |\n\n", "stderr": "", "returncode": 0, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nSummarizes CPU scheduler run queue length as a histogram\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that calculates and samples the length of the CPU scheduler run queue as a histogram, subtracting the currently running task from the total queue length.\n\n```\n#ifndef BPFTRACE_HAVE_BTF\n#include <linux/sched.h>\n\n// Until BTF is available, we'll need to declare some of this struct manually,\n// since it isn't available to be #included. This will need maintenance to match\n// your kernel version. It is from kernel/sched/sched.h:\nstruct cfs_rq {\n\tstruct load_weight load;\n\tunsigned long runnable_weight;\n\tunsigned int nr_running;\n\tunsigned int h_nr_running;\n};\n#endif\n\nBEGIN\n{\n\tprintf(\"Sampling run queue length at 99 Hertz... Hit Ctrl-C to end.\\n\");\n}\n\nprofile:hz:99\n{\n\t$task = (struct task_struct *)curtask;\n\t$my_q = (struct cfs_rq *)$task->se.cfs_rq;\n\t$len = $my_q->nr_running;\n\t$len = $len > 0 ? $len - 1 : 0;\t// subtract currently running task\n\t@runqlen = lhist($len, 0, 100, 1);\n}\n\n```\n\nexample: Write a BPF code that traces the CPU scheduler and records the latency of tasks in the run queue, using the sched_wakeup, sched_wakeup_new, and sched_switch tracepoints, and displays the latency as a histogram.\n\n```\n#include <linux/sched.h>\n\nBEGIN\n{\n\tprintf(\"Tracing CPU scheduler... Hit Ctrl-C to end.\\n\");\n}\n\ntracepoint:sched:sched_wakeup,\ntracepoint:sched:sched_wakeup_new\n{\n\t@qtime[args.pid] = nsecs;\n}\n\ntracepoint:sched:sched_switch\n{\n\tif (args.prev_state == TASK_RUNNING) {\n\t\t@qtime[args.prev_pid] = nsecs;\n\t}\n\n\t$ns = @qtime[args.next_pid];\n\tif ($ns) {\n\t\t@usecs = hist((nsecs - $ns) / 1000);\n\t}\n\tdelete(@qtime[args.next_pid]);\n}\n\nEND\n{\n\tclear(@qtime);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nSummarizes CPU scheduler run queue length as a histogram\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN\n{\n\tprintf(\"Tracing kill() signals... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-9s %-6s %-16s %-4s %-6s %s\\n\", \"TIME\", \"PID\", \"COMM\", \"SIG\",\n\t    \"TPID\", \"RESULT\");\n}\n\ntracepoint:syscalls:sys_enter_kill\n{\n\t@tpid[tid] = args.pid;\n\t@tsig[tid] = args.sig;\n}\n\ntracepoint:syscalls:sys_exit_kill\n/@tpid[tid]/\n{\n\ttime(\"%H:%M:%S  \");\n\tprintf(\"%-6d %-16s %-4d %-6d %d\\n\", pid, comm, @tsig[tid], @tpid[tid],\n\t    args.ret);\n\tdelete(@tpid[tid]);\n\tdelete(@tsig[tid]);\n}\n", "stdout": "", "stderr": "stdin:10:15-20: ERROR: Can not access field 'pid' on type '(ctx) struct _tracepoint_syscalls_sys_enter_kill *'. Try dereferencing it first, or using '->'\n    @tpid[tid] = args.pid;\n                 ~~~~~\nstdin:11:15-20: ERROR: Can not access field 'sig' on type '(ctx) struct _tracepoint_syscalls_sys_enter_kill *'. Try dereferencing it first, or using '->'\n    @tsig[tid] = args.sig;\n                 ~~~~~\nstdin:19:6-11: ERROR: Can not access field 'ret' on type '(ctx) struct _tracepoint_syscalls_sys_exit_kill *'. Try dereferencing it first, or using '->'\n        args.ret);\n        ~~~~~\n", "returncode": 1, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nTrace signals issued by the kill() syscall system-wide\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Please write a BPF code that traces signals issued by the kill() syscall and prints information such as the timestamp, process ID, command, signal, target process ID, and the result of the kill() syscall.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing kill() signals... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-9s %-6s %-16s %-4s %-6s %s\\n\", \"TIME\", \"PID\", \"COMM\", \"SIG\",\n\t    \"TPID\", \"RESULT\");\n}\n\ntracepoint:syscalls:sys_enter_kill\n{\n\t@tpid[tid] = args.pid;\n\t@tsig[tid] = args.sig;\n}\n\ntracepoint:syscalls:sys_exit_kill\n/@tpid[tid]/\n{\n\ttime(\"%H:%M:%S  \");\n\tprintf(\"%-6d %-16s %-4d %-6d %d\\n\", pid, comm, @tsig[tid], @tpid[tid],\n\t    args.ret);\n\tdelete(@tpid[tid]);\n\tdelete(@tsig[tid]);\n}\n\n```\n\nexample: Write a BPF code that traces the syscalls statfs(), statx(), newstat(), and newlstat(), providing information about the PID, process name, error code, and path being accessed.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing stat syscalls... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-6s %-16s %3s %s\\n\", \"PID\", \"COMM\", \"ERR\", \"PATH\");\n}\n\ntracepoint:syscalls:sys_enter_statfs\n{\n\t@filename[tid] = args.pathname;\n}\n\ntracepoint:syscalls:sys_enter_statx,\ntracepoint:syscalls:sys_enter_newstat,\ntracepoint:syscalls:sys_enter_newlstat\n{\n\t@filename[tid] = args.filename;\n}\n\ntracepoint:syscalls:sys_exit_statfs,\ntracepoint:syscalls:sys_exit_statx,\ntracepoint:syscalls:sys_exit_newstat,\ntracepoint:syscalls:sys_exit_newlstat\n/@filename[tid]/\n{\n\t$ret = args.ret;\n\t$errno = $ret >= 0 ? 0 : - $ret;\n\n\tprintf(\"%-6d %-16s %3d %s\\n\", pid, comm, $errno,\n\t    str(@filename[tid]));\n\tdelete(@filename[tid]);\n}\n\nEND\n{\n\tclear(@filename);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nTrace signals issued by the kill() syscall system-wide\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN\n{\n    printf(\"%-10s %-6s %-16s %s\\n\", \"TIME(ms)\", \"PID\", \"COMM\", \"FUNC\");\n}\n\nuprobe:libpthread:pthread_create,\nuprobe:libc:pthread_create\n{\n    printf(\"%-10u %-6d %-16s %s\\n\", elapsed / 1e6, pid, comm,\n        usym(arg2));\n}", "stdout": "Attaching 2 probes...\nTIME(ms)   PID    COMM             FUNC\n4678       31665  bpftrace         0x7fd4899c85f0\n4703       31665  bpftrace         0x7fd4899c85f0\n4729       31665  bpftrace         0x7fd4899c85f0\n4735       31665  bpftrace         0x7fd4899c85f0\n4750       31665  bpftrace         0x7fd4899c85f0\n4757       31665  bpftrace         0x7fd4899c85f0\n\n\n", "stderr": "", "returncode": 0, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nList new thread creation with pid and thread identifies\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that lists new thread creations, printing the time in milliseconds, PID, process name, and function name where the thread was created.\n\n```\nBEGIN\n{\n\tprintf(\"%-10s %-6s %-16s %s\\n\", \"TIME(ms)\", \"PID\", \"COMM\", \"FUNC\");\n}\n\nuprobe:libpthread:pthread_create,\nuprobe:libc:pthread_create\n{\n\tprintf(\"%-10u %-6d %-16s %s\\n\", elapsed / 1e6, pid, comm,\n\t    usym(arg2));\n}\n\n```\n\nexample: Write a BPF code that traces new processes and counts the number of new process creations per second using the eBPF technology.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing new processes... Hit Ctrl-C to end.\\n\");\n\n}\n\ntracepoint:sched:sched_process_fork\n{\n\t@ = count();\n}\n\ninterval:s:1\n{\n\ttime(\"%H:%M:%S PIDs/sec: \");\n\tprint(@);\n\tclear(@);\n}\n\nEND\n{\n\tclear(@);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nList new thread creation with pid and thread identifies\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e #include <linux/mutex.h>\n\nBEGIN\n{\n  printf(\"Tracing kernel mutex lock events... Hit Ctrl-C to end.\\n\");\n}\n\nkprobe:mutex_lock\n{\n  @locks[comm, pid] = count();\n}\n\nkprobe:mutex_unlock\n{\n  @unlocks[comm, pid] = count();\n}\n\ninterval:s:1\n{\n  printf(\"%10s %6s %8s %8s\\n\", \"COMM\", \"PID\", \"LOCKS\", \"UNLOCKS\");\n  print(@locks);\n  print(@unlocks);\n  clear(@locks);\n  clear(@unlocks);\n}\n\nEND\n{\n  clear(@locks);\n  clear(@unlocks);\n}", "stdout": "", "stderr": "/lib/modules/6.2.0-33-generic/build/include/linux/compiler-clang.h:41:9: warning: '__HAVE_BUILTIN_BSWAP32__' macro redefined [-Wmacro-redefined]\nnote: previous definition is here\n/lib/modules/6.2.0-33-generic/build/include/linux/compiler-clang.h:42:9: warning: '__HAVE_BUILTIN_BSWAP64__' macro redefined [-Wmacro-redefined]\nnote: previous definition is here\n/lib/modules/6.2.0-33-generic/build/include/linux/compiler-clang.h:43:9: warning: '__HAVE_BUILTIN_BSWAP16__' macro redefined [-Wmacro-redefined]\nnote: previous definition is here\n/lib/modules/6.2.0-33-generic/build/include/linux/kasan-checks.h:24:9: error: use of undeclared identifier 'true'\n/lib/modules/6.2.0-33-generic/build/include/linux/kasan-checks.h:28:9: error: use of undeclared identifier 'true'\n/lib/modules/6.2.0-33-generic/build/include/linux/kasan-checks.h:42:9: error: use of undeclared identifier 'true'\n/lib/modules/6.2.0-33-generic/build/include/linux/kasan-checks.h:46:9: error: use of undeclared identifier 'true'\n/lib/modules/6.2.0-33-generic/build/arch/x86/include/asm/ibt.h:101:47: error: use of undeclared identifier 'false'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:21:9: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:21:9: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:21:9: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:21:9: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:36:2: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:36:2: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:36:2: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:36:2: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:41:2: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:41:2: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:41:2: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:41:2: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:56:9: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:56:9: error: use of undeclared identifier 'uintptr_t'\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n", "returncode": 1, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nTraces kernel mutex lock events and display locks statistics.\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces the CPU scheduler and records the latency of tasks in the run queue, using the sched_wakeup, sched_wakeup_new, and sched_switch tracepoints, and displays the latency as a histogram.\n\n```\n#include <linux/sched.h>\n\nBEGIN\n{\n\tprintf(\"Tracing CPU scheduler... Hit Ctrl-C to end.\\n\");\n}\n\ntracepoint:sched:sched_wakeup,\ntracepoint:sched:sched_wakeup_new\n{\n\t@qtime[args.pid] = nsecs;\n}\n\ntracepoint:sched:sched_switch\n{\n\tif (args.prev_state == TASK_RUNNING) {\n\t\t@qtime[args.prev_pid] = nsecs;\n\t}\n\n\t$ns = @qtime[args.next_pid];\n\tif ($ns) {\n\t\t@usecs = hist((nsecs - $ns) / 1000);\n\t}\n\tdelete(@qtime[args.next_pid]);\n}\n\nEND\n{\n\tclear(@qtime);\n}\n\n```\n\nexample: Write a BPF code that traces md flush events and displays the time, process ID, command, and device information of each event.\n\n```\n#ifndef BPFTRACE_HAVE_BTF\n#include <linux/genhd.h>\n#include <linux/bio.h>\n#endif\n\nBEGIN\n{\n\tprintf(\"Tracing md flush events... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-8s %-6s %-16s %s\\n\", \"TIME\", \"PID\", \"COMM\", \"DEVICE\");\n}\n\nkprobe:md_flush_request\n{\n\ttime(\"%H:%M:%S \");\n\tprintf(\"%-6d %-16s %s\\n\", pid, comm,\n\t    ((struct bio *)arg1)->bi_bdev->bd_disk->disk_name);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nTraces kernel mutex lock events and display locks statistics.\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:kvm_exit {\n  @[args->exit_reason] = count();\n}\n\ninterval:s:1 {\n  time();\n  print(@);\n  clear(@);\n}", "stdout": "", "stderr": "stdin:2:3-9: ERROR: The args builtin can only be used with tracepoint/kfunc/uprobeprobes (kprobe used here)\n  @[args->exit_reason] = count();\n  ~~~~~~\n", "returncode": 1, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nDisplay the exit_reason and its statistics of each vm exit in kvm\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces key VFS calls, counts the number of times each call is invoked, and prints a per-second summary.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing key VFS calls... Hit Ctrl-C to end.\\n\");\n\n}\n\nkprobe:vfs_read*,\nkprobe:vfs_write*,\nkprobe:vfs_fsync,\nkprobe:vfs_open,\nkprobe:vfs_create\n{\n\t@[func] = count();\n}\n\ninterval:s:1\n{\n\ttime();\n\tprint(@);\n\tclear(@);\n}\n\nEND\n{\n\tclear(@);\n}\n\n```\n\nexample: Write a BPF code that traces file system writeback events, including the time of occurrence, device information, reason, and duration. This code can help identify performance issues related to writeback events.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing writeback... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-9s %-8s %-8s %-16s %s\\n\", \"TIME\", \"DEVICE\", \"PAGES\",\n\t    \"REASON\", \"ms\");\n\n\t// see /sys/kernel/debug/tracing/events/writeback/writeback_start/format\n\t@reason[0] = \"background\";\n\t@reason[1] = \"vmscan\";\n\t@reason[2] = \"sync\";\n\t@reason[3] = \"periodic\";\n\t@reason[4] = \"laptop_timer\";\n\t@reason[5] = \"free_more_memory\";\n\t@reason[6] = \"fs_free_space\";\n\t@reason[7] = \"forker_thread\";\n}\n\ntracepoint:writeback:writeback_start\n{\n\t@start[args.sb_dev] = nsecs;\n}\n\ntracepoint:writeback:writeback_written\n{\n\t$sb_dev = args.sb_dev;\n\t$s = @start[$sb_dev];\n\tdelete(@start[$sb_dev]);\n\t$lat = $s ? (nsecs - $s) / 1000 : 0;\n\n\ttime(\"%H:%M:%S  \");\n\tprintf(\"%-8s %-8d %-16s %d.%03d\\n\", args.name,\n\t    args.nr_pages & 0xffff,\t// TODO: explain these bitmasks\n\t    @reason[args.reason & 0xffffffff],\n\t    $lat / 1000, $lat % 1000);\n}\n\nEND\n{\n\tclear(@reason);\n\tclear(@start);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nDisplay the exit_reason and its statistics of each vm exit in kvm\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN\n{\n    printf(\"Tracing System V shared memory syscalls... Hit Ctrl-C to end.\\n\");\n    printf(\"%-6s %-16s %-6s %-6s\\n\", \"PID\", \"COMM\", \"KEY\", \"SIZE\");\n}\n\ntracepoint:syscalls:sys_enter_shmget\n{\n    @key[tid] = args.key;\n    @size[tid] = args.size;\n}\n\ntracepoint:syscalls:sys_exit_shmget\n/@key[tid] && @size[tid]/\n{\n    printf(\"%-6d %-16s %-6d %-6d\\n\", pid, comm, @key[tid], @size[tid]);\n    delete(@key[tid]);\n    delete(@size[tid]);\n}\n\nEND\n{\n    clear(@key);\n    clear(@size);\n}\n", "stdout": "", "stderr": "stdin:9:17-22: ERROR: Can not access field 'key' on type '(ctx) struct _tracepoint_syscalls_sys_enter_shmget *'. Try dereferencing it first, or using '->'\n    @key[tid] = args.key;\n                ~~~~~\nstdin:10:18-23: ERROR: Can not access field 'size' on type '(ctx) struct _tracepoint_syscalls_sys_enter_shmget *'. Try dereferencing it first, or using '->'\n    @size[tid] = args.size;\n                 ~~~~~\n", "returncode": 1, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nTrace System V shared memory syscalls and display the size of the shared memory segment\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces the syscalls statfs(), statx(), newstat(), and newlstat(), providing information about the PID, process name, error code, and path being accessed.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing stat syscalls... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-6s %-16s %3s %s\\n\", \"PID\", \"COMM\", \"ERR\", \"PATH\");\n}\n\ntracepoint:syscalls:sys_enter_statfs\n{\n\t@filename[tid] = args.pathname;\n}\n\ntracepoint:syscalls:sys_enter_statx,\ntracepoint:syscalls:sys_enter_newstat,\ntracepoint:syscalls:sys_enter_newlstat\n{\n\t@filename[tid] = args.filename;\n}\n\ntracepoint:syscalls:sys_exit_statfs,\ntracepoint:syscalls:sys_exit_statx,\ntracepoint:syscalls:sys_exit_newstat,\ntracepoint:syscalls:sys_exit_newlstat\n/@filename[tid]/\n{\n\t$ret = args.ret;\n\t$errno = $ret >= 0 ? 0 : - $ret;\n\n\tprintf(\"%-6d %-16s %3d %s\\n\", pid, comm, $errno,\n\t    str(@filename[tid]));\n\tdelete(@filename[tid]);\n}\n\nEND\n{\n\tclear(@filename);\n}\n\n```\n\nexample: Write a BPF code that traces sync-related system calls, such as sync(), syncfs(), fsync(), and fdatasync(), and prints the time, process ID, command, and event for each traced system call.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing sync syscalls... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-9s %-6s %-16s %s\\n\", \"TIME\", \"PID\", \"COMM\", \"EVENT\");\n}\n\ntracepoint:syscalls:sys_enter_sync,\ntracepoint:syscalls:sys_enter_syncfs,\ntracepoint:syscalls:sys_enter_fsync,\ntracepoint:syscalls:sys_enter_fdatasync,\ntracepoint:syscalls:sys_enter_sync_file_range*,\ntracepoint:syscalls:sys_enter_msync\n{\n\ttime(\"%H:%M:%S  \");\n\tprintf(\"%-6d %-16s %s\\n\", pid, comm, probe);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nTrace System V shared memory syscalls and display the size of the shared memory segment\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter_mount, tracepoint:syscalls:sys_enter_umount { printf(\"%s syscall by PID %d\", probe, pid); }", "stdout": "Attaching 2 probes...\n\n\n", "stderr": "", "returncode": 0, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nTrace mount and umount syscalls system-wide and print with pid\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces the syscalls statfs(), statx(), newstat(), and newlstat(), providing information about the PID, process name, error code, and path being accessed.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing stat syscalls... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-6s %-16s %3s %s\\n\", \"PID\", \"COMM\", \"ERR\", \"PATH\");\n}\n\ntracepoint:syscalls:sys_enter_statfs\n{\n\t@filename[tid] = args.pathname;\n}\n\ntracepoint:syscalls:sys_enter_statx,\ntracepoint:syscalls:sys_enter_newstat,\ntracepoint:syscalls:sys_enter_newlstat\n{\n\t@filename[tid] = args.filename;\n}\n\ntracepoint:syscalls:sys_exit_statfs,\ntracepoint:syscalls:sys_exit_statx,\ntracepoint:syscalls:sys_exit_newstat,\ntracepoint:syscalls:sys_exit_newlstat\n/@filename[tid]/\n{\n\t$ret = args.ret;\n\t$errno = $ret >= 0 ? 0 : - $ret;\n\n\tprintf(\"%-6d %-16s %3d %s\\n\", pid, comm, $errno,\n\t    str(@filename[tid]));\n\tdelete(@filename[tid]);\n}\n\nEND\n{\n\tclear(@filename);\n}\n\n```\n\nexample: Write a BPF code that traces sync-related system calls, such as sync(), syncfs(), fsync(), and fdatasync(), and prints the time, process ID, command, and event for each traced system call.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing sync syscalls... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-9s %-6s %-16s %s\\n\", \"TIME\", \"PID\", \"COMM\", \"EVENT\");\n}\n\ntracepoint:syscalls:sys_enter_sync,\ntracepoint:syscalls:sys_enter_syncfs,\ntracepoint:syscalls:sys_enter_fsync,\ntracepoint:syscalls:sys_enter_fdatasync,\ntracepoint:syscalls:sys_enter_sync_file_range*,\ntracepoint:syscalls:sys_enter_msync\n{\n\ttime(\"%H:%M:%S  \");\n\tprintf(\"%-6d %-16s %s\\n\", pid, comm, probe);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nTrace mount and umount syscalls system-wide and print with pid\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:bpf:bpf_jit_compile { printf(\"BPF JIT compile event: PID %d, COMM %s\", pid, comm); }", "stdout": "", "stderr": "stdin:1:1-31: ERROR: tracepoint not found: bpf:bpf_jit_compile\ntracepoint:bpf:bpf_jit_compile { printf(\"BPF JIT compile event: PID %d, COMM %s\", pid, comm); }\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n", "returncode": 1, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nTrace bpf jit compile events\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces new processes and counts the number of new process creations per second using the eBPF technology.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing new processes... Hit Ctrl-C to end.\\n\");\n\n}\n\ntracepoint:sched:sched_process_fork\n{\n\t@ = count();\n}\n\ninterval:s:1\n{\n\ttime(\"%H:%M:%S PIDs/sec: \");\n\tprint(@);\n\tclear(@);\n}\n\nEND\n{\n\tclear(@);\n}\n\n```\n\nexample: Write a BPF code that traces md flush events and displays the time, process ID, command, and device information of each event.\n\n```\n#ifndef BPFTRACE_HAVE_BTF\n#include <linux/genhd.h>\n#include <linux/bio.h>\n#endif\n\nBEGIN\n{\n\tprintf(\"Tracing md flush events... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-8s %-6s %-16s %s\\n\", \"TIME\", \"PID\", \"COMM\", \"DEVICE\");\n}\n\nkprobe:md_flush_request\n{\n\ttime(\"%H:%M:%S \");\n\tprintf(\"%-6d %-16s %s\\n\", pid, comm,\n\t    ((struct bio *)arg1)->bi_bdev->bd_disk->disk_name);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nTrace bpf jit compile events\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:kmem_cache_alloc { @[comm] = count(); } interval:s:1 { time(); print(@); clear(@); }", "stdout": "Attaching 2 probes...\n00:06:57\n@[bpftrace]: 5\n@[node]: 223\n00:06:58\n@[containerd]: 2\n@[node]: 133\n00:06:59\n@[containerd]: 1\n@[node]: 176\n00:07:00\n@[vmtoolsd]: 2\n@[jbd2/sda2-8]: 15\n@[kworker/u256:0]: 75\n@[node]: 146\n00:07:01\n@[kworker/u256:3]: 4\n@[node]: 150\n@[vmtoolsd]: 213\n00:07:02\n@[rs:main Q:Reg]: 2\n@[timeout]: 2\n@[cron]: 5\n@[bpftrace]: 9\n@[systemd]: 25\n@[python3]: 40\n@[systemd-logind]: 45\n@[systemd-journal]: 47\n@[sudo]: 61\n@[node]: 203\n00:07:03\n@[irqbalance]: 11\n@[git]: 2049\n@[node]: 48558\n00:07:04\n@[containerd]: 2\n@[node]: 267\n00:07:05\n@[kworker/u256:3]: 1\n@[vmtoolsd]: 2\n@[containerd]: 2\n@[kworker/1:1H]: 2\n@[jbd2/sda2-8]: 31\n@[kworker/u256:0]: 136\n@[node]: 146\n00:07:06\n@[python3]: 7\n@[node]: 150\n00:07:07\n@[kworker/u256:0]: 3\n@[node]: 145\n00:07:08\n@[vmtoolsd]: 63\n@[node]: 145\n00:07:09\n@[node]: 150\n00:07:10\n@[kworker/0:1H]: 2\n@[vmtoolsd]: 2\n@[rs:main Q:Reg]: 6\n@[jbd2/sda2-8]: 11\n@[systemd]: 25\n@[systemd-logind]: 94\n@[python3]: 110\n@[systemd-journal]: 114\n@[kworker/u256:0]: 130\n@[timeout]: 213\n@[node]: 238\n@[bpftrace]: 1512\n@[sudo]: 2184\n00:07:11\n@[containerd]: 4\n@[git]: 2046\n@[node]: 48600\n00:07:12\n@[node]: 223\n00:07:13\n@[python3]: 7\n@[irqbalance]: 11\n@[node]: 145\n00:07:14\n@[containerd]: 1\n@[node]: 150\n00:07:15\n@[containerd]: 1\n@[vmtoolsd]: 2\n@[kworker/u256:1]: 4\n@[jbd2/sda2-8]: 17\n@[node]: 146\n\n\n@[timeout]: 1\n@[kworker/u256:1]: 4\n@[node]: 105\n", "stderr": "", "returncode": 0, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nSummarizes Kernel SLAB/SLUB memory cache allocation rate top\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces the kernel OOM killer and prints basic details, including the system load averages, providing context on the system state at the time of the OOM.\n\n```\n#ifndef BPFTRACE_HAVE_BTF\n#include <linux/oom.h>\n#endif\n\nBEGIN\n{\n\tprintf(\"Tracing oom_kill_process()... Hit Ctrl-C to end.\\n\");\n}\n\nkprobe:oom_kill_process\n{\n\t$oc = (struct oom_control *)arg0;\n\ttime(\"%H:%M:%S \");\n\tprintf(\"Triggered by PID %d (\\\"%s\\\"), \", pid, comm);\n\tprintf(\"OOM kill of PID %d (\\\"%s\\\"), %d pages, loadavg: \",\n\t    $oc->chosen->pid, $oc->chosen->comm, $oc->totalpages);\n\tcat(\"/proc/loadavg\");\n}\n\n```\n\nexample: Write a BPF code that monitors the swapins by process.\n\n```\nkprobe:swap_readpage\n{\n        @[comm, pid] = count();\n}\n\ninterval:s:1\n{\n        time();\n        print(@);\n        clear(@);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nSummarizes Kernel SLAB/SLUB memory cache allocation rate top\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e #include <linux/blkdev.h>\n\nBEGIN\n{\n  printf(\"%-16s %-6s %-7s %-10s\\n\", \"COMM\", \"PID\", \"DISK\", \"LAT(ms)\");\n}\n\nkprobe:blk_start_request\n{\n  @start[pid, comm, args->rq->rq_disk->disk_name] = nsecs;\n}\n\nkprobe:blk_mq_start_request\n{\n  @start[pid, comm, args->rq->rq_disk->disk_name] = nsecs;\n}\n\nkretprobe:blk_account_io_completion\n/@start[pid, comm, args->rq->rq_disk->disk_name]/\n{\n  $lat = (nsecs - @start[pid, comm, args->rq->rq_disk->disk_name]) / 1000000;\n  printf(\"%-16s %-6d %-7s %-10d\\n\", comm, pid, args->rq->rq_disk->disk_name, $lat);\n  delete(@start[pid, comm, args->rq->rq_disk->disk_name]);\n}\n\nEND\n{\n  clear(@start);\n}", "stdout": "", "stderr": "/lib/modules/6.2.0-33-generic/build/include/linux/compiler-clang.h:41:9: warning: '__HAVE_BUILTIN_BSWAP32__' macro redefined [-Wmacro-redefined]\nnote: previous definition is here\n/lib/modules/6.2.0-33-generic/build/include/linux/compiler-clang.h:42:9: warning: '__HAVE_BUILTIN_BSWAP64__' macro redefined [-Wmacro-redefined]\nnote: previous definition is here\n/lib/modules/6.2.0-33-generic/build/include/linux/compiler-clang.h:43:9: warning: '__HAVE_BUILTIN_BSWAP16__' macro redefined [-Wmacro-redefined]\nnote: previous definition is here\n/lib/modules/6.2.0-33-generic/build/include/linux/kasan-checks.h:24:9: error: use of undeclared identifier 'true'\n/lib/modules/6.2.0-33-generic/build/include/linux/kasan-checks.h:28:9: error: use of undeclared identifier 'true'\n/lib/modules/6.2.0-33-generic/build/include/linux/kasan-checks.h:42:9: error: use of undeclared identifier 'true'\n/lib/modules/6.2.0-33-generic/build/include/linux/kasan-checks.h:46:9: error: use of undeclared identifier 'true'\n/lib/modules/6.2.0-33-generic/build/arch/x86/include/asm/ibt.h:101:47: error: use of undeclared identifier 'false'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:21:9: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:21:9: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:21:9: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:21:9: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:36:2: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:36:2: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:36:2: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:36:2: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:41:2: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:41:2: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:41:2: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:41:2: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:56:9: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-33-generic/build/include/asm-generic/bitops/le.h:56:9: error: use of undeclared identifier 'uintptr_t'\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n", "returncode": 1, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nTrace block device I/O with PID and latency\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces block I/O operations and displays the latency for each operation, along with the disk, process, and PID associated with it.\n\n```\n#ifndef BPFTRACE_HAVE_BTF\n#include <linux/blkdev.h>\n#include <linux/blk-mq.h>\n#endif\n\nBEGIN\n{\n\tprintf(\"%-12s %-7s %-16s %-6s %7s\\n\", \"TIME(ms)\", \"DISK\", \"COMM\", \"PID\", \"LAT(ms)\");\n}\n\nkprobe:blk_account_io_start,\nkprobe:__blk_account_io_start\n{\n\t@start[arg0] = nsecs;\n\t@iopid[arg0] = pid;\n\t@iocomm[arg0] = comm;\n\t@disk[arg0] = ((struct request *)arg0)->q->disk->disk_name;\n}\n\nkprobe:blk_account_io_done,\nkprobe:__blk_account_io_done\n/@start[arg0] != 0 && @iopid[arg0] != 0 && @iocomm[arg0] != \"\"/\n\n{\n\t$now = nsecs;\n\tprintf(\"%-12u %-7s %-16s %-6d %7d\\n\",\n\t    elapsed / 1e6, @disk[arg0], @iocomm[arg0], @iopid[arg0],\n\t    ($now - @start[arg0]) / 1e6);\n\n\tdelete(@start[arg0]);\n\tdelete(@iopid[arg0]);\n\tdelete(@iocomm[arg0]);\n\tdelete(@disk[arg0]);\n}\n\nEND\n{\n\tclear(@start);\n\tclear(@iopid);\n\tclear(@iocomm);\n\tclear(@disk);\n}\n\n```\n\nexample: Write a BPF code that traces block device I/O latency by calculating the time difference between the start and completion of I/O operations and storing them in a histogram.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing block device I/O... Hit Ctrl-C to end.\\n\");\n}\n\nkprobe:blk_account_io_start,\nkprobe:__blk_account_io_start\n{\n\t@start[arg0] = nsecs;\n}\n\nkprobe:blk_account_io_done,\nkprobe:__blk_account_io_done\n/@start[arg0]/\n{\n\t@usecs = hist((nsecs - @start[arg0]) / 1000);\n\tdelete(@start[arg0]);\n}\n\nEND\n{\n\tclear(@start);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nTrace block device I/O with PID and latency\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter_sync { printf(\"PID %d called sync()\", pid); }", "stdout": "Attaching 1 probe...\n\n\n", "stderr": "", "returncode": 0, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nTrace sync() syscall and print the caller pid\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces sync-related system calls, such as sync(), syncfs(), fsync(), and fdatasync(), and prints the time, process ID, command, and event for each traced system call.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing sync syscalls... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-9s %-6s %-16s %s\\n\", \"TIME\", \"PID\", \"COMM\", \"EVENT\");\n}\n\ntracepoint:syscalls:sys_enter_sync,\ntracepoint:syscalls:sys_enter_syncfs,\ntracepoint:syscalls:sys_enter_fsync,\ntracepoint:syscalls:sys_enter_fdatasync,\ntracepoint:syscalls:sys_enter_sync_file_range*,\ntracepoint:syscalls:sys_enter_msync\n{\n\ttime(\"%H:%M:%S  \");\n\tprintf(\"%-6d %-16s %s\\n\", pid, comm, probe);\n}\n\n```\n\nexample: Write a BPF code that traces the syscalls statfs(), statx(), newstat(), and newlstat(), providing information about the PID, process name, error code, and path being accessed.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing stat syscalls... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-6s %-16s %3s %s\\n\", \"PID\", \"COMM\", \"ERR\", \"PATH\");\n}\n\ntracepoint:syscalls:sys_enter_statfs\n{\n\t@filename[tid] = args.pathname;\n}\n\ntracepoint:syscalls:sys_enter_statx,\ntracepoint:syscalls:sys_enter_newstat,\ntracepoint:syscalls:sys_enter_newlstat\n{\n\t@filename[tid] = args.filename;\n}\n\ntracepoint:syscalls:sys_exit_statfs,\ntracepoint:syscalls:sys_exit_statx,\ntracepoint:syscalls:sys_exit_newstat,\ntracepoint:syscalls:sys_exit_newlstat\n/@filename[tid]/\n{\n\t$ret = args.ret;\n\t$errno = $ret >= 0 ? 0 : - $ret;\n\n\tprintf(\"%-6d %-16s %3d %s\\n\", pid, comm, $errno,\n\t    str(@filename[tid]));\n\tdelete(@filename[tid]);\n}\n\nEND\n{\n\tclear(@filename);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nTrace sync() syscall and print the caller pid\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:btrfs_* { printf(\"%s called by %s (PID %d)\", func, comm, pid); }", "stdout": "Attaching 1 probe...\n\n\n", "stderr": "", "returncode": 0, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nTrace btrfs operations system-wide\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces the latency of four common XFS file system operations (read, write, open, and fsync) and prints a summary of the operation latency, using the bpftrace and eBPF tools.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing XFS operation latency... Hit Ctrl-C to end.\\n\");\n}\n\nkprobe:xfs_file_read_iter,\nkprobe:xfs_file_write_iter,\nkprobe:xfs_file_open,\nkprobe:xfs_file_fsync\n{\n\t@start[tid] = nsecs;\n\t@name[tid] = func;\n}\n\nkretprobe:xfs_file_read_iter,\nkretprobe:xfs_file_write_iter,\nkretprobe:xfs_file_open,\nkretprobe:xfs_file_fsync\n/@start[tid]/\n{\n\t@us[@name[tid]] = hist((nsecs - @start[tid]) / 1000);\n\tdelete(@start[tid]);\n\tdelete(@name[tid]);\n}\n\nEND\n{\n\tclear(@start);\n\tclear(@name);\n}\n\n```\n\nexample: Write a BPF code that traces sync-related system calls, such as sync(), syncfs(), fsync(), and fdatasync(), and prints the time, process ID, command, and event for each traced system call.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing sync syscalls... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-9s %-6s %-16s %s\\n\", \"TIME\", \"PID\", \"COMM\", \"EVENT\");\n}\n\ntracepoint:syscalls:sys_enter_sync,\ntracepoint:syscalls:sys_enter_syncfs,\ntracepoint:syscalls:sys_enter_fsync,\ntracepoint:syscalls:sys_enter_fdatasync,\ntracepoint:syscalls:sys_enter_sync_file_range*,\ntracepoint:syscalls:sys_enter_msync\n{\n\ttime(\"%H:%M:%S  \");\n\tprintf(\"%-6d %-16s %s\\n\", pid, comm, probe);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nTrace btrfs operations system-wide\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e #include <net/tcp_states.h>\n#include <net/sock.h>\n#include <linux/socket.h>\n#include <linux/tcp.h>\n\nBEGIN\n{\n  printf(\"%-8s %-8s %-16s %-39s %-6s %-39s %-6s %-6s\\n\", \"TIME\", \"PID\", \"COMM\", \"SADDR\", \"SPORT\", \"DADDR\", \"DPORT\", \"RTT\");\n}\n\nkprobe:tcp_v4_connect\n{\n  $sk = ((struct sock *) arg0);\n  $inet_family = $sk->__sk_common.skc_family;\n\n  if ($inet_family == AF_INET) {\n    $daddr = ntop($sk->__sk_common.skc_daddr);\n    $saddr = ntop($sk->__sk_common.skc_rcv_saddr);\n    $lport = $sk->__sk_common.skc_num;\n    $dport = $sk->__sk_common.skc_dport;\n\n    // Destination port is big endian, it must be flipped\n    $dport = bswap($dport);\n\n    @start_time[$sk] = nsecs;\n    @saddr[$sk] = $saddr;\n    @daddr[$sk] = $daddr;\n    @lport[$sk] = $lport;\n    @dport[$sk] = $dport;\n    @pid[$sk] = pid;\n    @comm[$sk] = comm;\n  }\n}\n\nkretprobe:tcp_v4_connect\n{\n  $sk = ((struct sock *) arg0);\n  $ret = (int) arg0;\n\n  if ($ret == 0) {\n    $rtt = (nsecs - @start_time[$sk]) / 1e6;\n    time(\"%H:%M:%S \");\n    printf(\"%-8d %-16s %-39s %-6d %-39s %-6d %-6d\\n\", @pid[$sk], @comm[$sk], @saddr[$sk], @lport[$sk], @daddr[$sk], @dport[$sk], $rtt);\n\n    delete(@start_time[$sk]);\n    delete(@saddr[$sk]);\n    delete(@daddr[$sk]);\n    delete(@lport[$sk]);\n    delete(@dport[$sk]);\n    delete(@pid[$sk]);\n    delete(@comm[$sk]);\n  }\n}\n", "stdout": "", "stderr": "stdin:37:27-31: ERROR: The arg0 builtin can only be used with 'kprobes', 'uprobes' and 'usdt' probes\n  $sk = ((struct sock *) arg0);\n                          ~~~~\nstdin:38:16-20: ERROR: The arg0 builtin can only be used with 'kprobes', 'uprobes' and 'usdt' probes\n  $ret = (int) arg0;\n               ~~~~\nstdin:38:10-15: ERROR: Unknown struct/union: 'int'\n  $ret = (int) arg0;\n         ~~~~~\n", "returncode": 1, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nTrace TCP round trip time (RTT) and print the sender and receiver IP addresses and ports\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces TCP connections by dynamically tracing kernel functions and prints out the time, PID, and addresses and ports of the source and destination of each connection.\n\n```\n#ifndef BPFTRACE_HAVE_BTF\n#include <linux/socket.h>\n#include <net/sock.h>\n#else\n#include <sys/socket.h>\n#endif\n\nBEGIN\n{\n  printf(\"Tracing tcp connections. Hit Ctrl-C to end.\\n\");\n  printf(\"%-8s %-8s %-16s \", \"TIME\", \"PID\", \"COMM\");\n  printf(\"%-39s %-6s %-39s %-6s\\n\", \"SADDR\", \"SPORT\", \"DADDR\", \"DPORT\");\n}\n\nkprobe:tcp_connect\n{\n  $sk = ((struct sock *) arg0);\n  $inet_family = $sk->__sk_common.skc_family;\n\n  if ($inet_family == AF_INET || $inet_family == AF_INET6) {\n    if ($inet_family == AF_INET) {\n      $daddr = ntop($sk->__sk_common.skc_daddr);\n      $saddr = ntop($sk->__sk_common.skc_rcv_saddr);\n    } else {\n      $daddr = ntop($sk->__sk_common.skc_v6_daddr.in6_u.u6_addr8);\n      $saddr = ntop($sk->__sk_common.skc_v6_rcv_saddr.in6_u.u6_addr8);\n    }\n    $lport = $sk->__sk_common.skc_num;\n    $dport = $sk->__sk_common.skc_dport;\n\n    // Destination port is big endian, it must be flipped\n    $dport = bswap($dport);\n\n    time(\"%H:%M:%S \");\n    printf(\"%-8d %-16s \", pid, comm);\n    printf(\"%-39s %-6d %-39s %-6d\\n\", $saddr, $lport, $daddr, $dport);\n  }\n}\n\n```\n\nexample: Write a BPF code that traces TCP session lifespans and prints details of the connections, including the process ID, command, local and remote addresses and ports, and data transmission statistics.\n\n```\n#ifndef BPFTRACE_HAVE_BTF\n#include <net/tcp_states.h>\n#include <net/sock.h>\n#include <linux/socket.h>\n#include <linux/tcp.h>\n#else\n#include <sys/socket.h>\n#endif\n\nBEGIN\n{\n\tprintf(\"%-5s %-10s %-15s %-5s %-15s %-5s \", \"PID\", \"COMM\",\n\t    \"LADDR\", \"LPORT\", \"RADDR\", \"RPORT\");\n\tprintf(\"%5s %5s %s\\n\", \"TX_KB\", \"RX_KB\", \"MS\");\n}\n\nkprobe:tcp_set_state\n{\n\t$sk = (struct sock *)arg0;\n\t$newstate = arg1;\n\n\t\n\n\t// record first timestamp seen for this socket\n\tif ($newstate < TCP_FIN_WAIT1 && @birth[$sk] == 0) {\n\t\t@birth[$sk] = nsecs;\n\t}\n\n\t// record PID & comm on SYN_SENT\n\tif ($newstate == TCP_SYN_SENT || $newstate == TCP_LAST_ACK) {\n\t\t@skpid[$sk] = pid;\n\t\t@skcomm[$sk] = comm;\n\t}\n\n\t// session ended: calculate lifespan and print\n\tif ($newstate == TCP_CLOSE && @birth[$sk]) {\n\t\t$delta_ms = (nsecs - @birth[$sk]) / 1e6;\n\t\t$lport = $sk->__sk_common.skc_num;\n\t\t$dport = $sk->__sk_common.skc_dport;\n\t\t$dport = bswap($dport);\n\t\t$tp = (struct tcp_sock *)$sk;\n\t\t$pid = @skpid[$sk];\n\t\t$comm = @skcomm[$sk];\n\t\tif ($comm == \"\") {\n\t\t\t// not cached, use current task\n\t\t\t$pid = pid;\n\t\t\t$comm = comm;\n\t\t}\n\n\t\t$family = $sk->__sk_common.skc_family;\n\t\t$saddr = ntop(0);\n\t\t$daddr = ntop(0);\n\t\tif ($family == AF_INET) {\n\t\t\t$saddr = ntop(AF_INET, $sk->__sk_common.skc_rcv_saddr);\n\t\t\t$daddr = ntop(AF_INET, $sk->__sk_common.skc_daddr);\n\t\t} else {\n\t\t\t// AF_INET6\n\t\t\t$saddr = ntop(AF_INET6,\n\t\t\t    $sk->__sk_common.skc_v6_rcv_saddr.in6_u.u6_addr8);\n\t\t\t$daddr = ntop(AF_INET6,\n\t\t\t    $sk->__sk_common.skc_v6_daddr.in6_u.u6_addr8);\n\t\t}\n\t\tprintf(\"%-5d %-10.10s %-15s %-5d %-15s %-6d \", $pid,\n\t\t    $comm, $saddr, $lport, $daddr, $dport);\n\t\tprintf(\"%5d %5d %d\\n\", $tp->bytes_acked / 1024,\n\t\t    $tp->bytes_received / 1024, $delta_ms);\n\n\t\tdelete(@birth[$sk]);\n\t\tdelete(@skpid[$sk]);\n\t\tdelete(@skcomm[$sk]);\n\t}\n}\n\nEND\n{\n\tclear(@birth); clear(@skpid); clear(@skcomm);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nTrace TCP round trip time (RTT) and print the sender and receiver IP addresses and ports\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN\n{\n\tprintf(\"Tracing ZFS operation latency... Hit Ctrl-C to end.\\n\");\n}\n\nkprobe:zfs_read,\nkprobe:zfs_write,\nkprobe:zfs_open,\nkprobe:zfs_fsync\n{\n\t@start[tid] = nsecs;\n\t@name[tid] = func;\n}\n\nkretprobe:zfs_read,\nkretprobe:zfs_write,\nkretprobe:zfs_open,\nkretprobe:zfs_fsync\n/@start[tid]/\n{\n\t@us[@name[tid]] = hist((nsecs - @start[tid]) / 1000);\n\tdelete(@start[tid]);\n\tdelete(@name[tid]);\n}\n\nEND\n{\n\tclear(@start);\n\tclear(@name);\n}\n", "stdout": "Attaching 10 probes...\nTracing ZFS operation latency... Hit Ctrl-C to end.\n\n\n\n\n\n", "stderr": "stdin:4-6: WARNING: zfs_read is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\nstdin:6-7: WARNING: zfs_write is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\nstdin:7-8: WARNING: zfs_open is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\nstdin:8-9: WARNING: zfs_fsync is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\nstdin:13-15: WARNING: zfs_read is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\nstdin:15-16: WARNING: zfs_write is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\nstdin:16-17: WARNING: zfs_open is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\nstdin:17-18: WARNING: zfs_fsync is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\ncannot attach kprobe, probe entry may not exist\nWARNING: could not attach probe kretprobe:zfs_read, skipping.\ncannot attach kprobe, probe entry may not exist\nWARNING: could not attach probe kretprobe:zfs_write, skipping.\ncannot attach kprobe, probe entry may not exist\nWARNING: could not attach probe kretprobe:zfs_open, skipping.\ncannot attach kprobe, probe entry may not exist\nWARNING: could not attach probe kretprobe:zfs_fsync, skipping.\ncannot attach kprobe, probe entry may not exist\nWARNING: could not attach probe kprobe:zfs_fsync, skipping.\ncannot attach kprobe, probe entry may not exist\nWARNING: could not attach probe kprobe:zfs_open, skipping.\ncannot attach kprobe, probe entry may not exist\nWARNING: could not attach probe kprobe:zfs_write, skipping.\ncannot attach kprobe, probe entry may not exist\nWARNING: could not attach probe kprobe:zfs_read, skipping.\n", "returncode": 0, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nSummarize ZFS operation latency distribution as a histogram\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces the latency of four common XFS file system operations (read, write, open, and fsync) and prints a summary of the operation latency, using the bpftrace and eBPF tools.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing XFS operation latency... Hit Ctrl-C to end.\\n\");\n}\n\nkprobe:xfs_file_read_iter,\nkprobe:xfs_file_write_iter,\nkprobe:xfs_file_open,\nkprobe:xfs_file_fsync\n{\n\t@start[tid] = nsecs;\n\t@name[tid] = func;\n}\n\nkretprobe:xfs_file_read_iter,\nkretprobe:xfs_file_write_iter,\nkretprobe:xfs_file_open,\nkretprobe:xfs_file_fsync\n/@start[tid]/\n{\n\t@us[@name[tid]] = hist((nsecs - @start[tid]) / 1000);\n\tdelete(@start[tid]);\n\tdelete(@name[tid]);\n}\n\nEND\n{\n\tclear(@start);\n\tclear(@name);\n}\n\n```\n\nexample: Write a BPF code that traces block device I/O latency by calculating the time difference between the start and completion of I/O operations and storing them in a histogram.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing block device I/O... Hit Ctrl-C to end.\\n\");\n}\n\nkprobe:blk_account_io_start,\nkprobe:__blk_account_io_start\n{\n\t@start[arg0] = nsecs;\n}\n\nkprobe:blk_account_io_done,\nkprobe:__blk_account_io_done\n/@start[arg0]/\n{\n\t@usecs = hist((nsecs - @start[arg0]) / 1000);\n\tdelete(@start[arg0]);\n}\n\nEND\n{\n\tclear(@start);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nSummarize ZFS operation latency distribution as a histogram\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN\n{\n\tprintf(\"Tracing cap_capable syscalls... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-9s %-6s %-6s %-16s %-4s %-20s AUDIT\\n\", \"TIME\", \"UID\", \"PID\",\n\t    \"COMM\", \"CAP\", \"NAME\");\n\t@cap[0] = \"CAP_CHOWN\";\n\t@cap[1] = \"CAP_DAC_OVERRIDE\";\n\t@cap[2] = \"CAP_DAC_READ_SEARCH\";\n\t@cap[3] = \"CAP_FOWNER\";\n\t@cap[4] = \"CAP_FSETID\";\n\t@cap[5] = \"CAP_KILL\";\n\t@cap[6] = \"CAP_SETGID\";\n\t@cap[7] = \"CAP_SETUID\";\n\t@cap[8] = \"CAP_SETPCAP\";\n\t@cap[9] = \"CAP_LINUX_IMMUTABLE\";\n\t@cap[10] = \"CAP_NET_BIND_SERVICE\";\n\t@cap[11] = \"CAP_NET_BROADCAST\";\n\t@cap[12] = \"CAP_NET_ADMIN\";\n\t@cap[13] = \"CAP_NET_RAW\";\n\t@cap[14] = \"CAP_IPC_LOCK\";\n\t@cap[15] = \"CAP_IPC_OWNER\";\n\t@cap[16] = \"CAP_SYS_MODULE\";\n\t@cap[17] = \"CAP_SYS_RAWIO\";\n\t@cap[18] = \"CAP_SYS_CHROOT\";\n\t@cap[19] = \"CAP_SYS_PTRACE\";\n\t@cap[20] = \"CAP_SYS_PACCT\";\n\t@cap[21] = \"CAP_SYS_ADMIN\";\n\t@cap[22] = \"CAP_SYS_BOOT\";\n\t@cap[23] = \"CAP_SYS_NICE\";\n\t@cap[24] = \"CAP_SYS_RESOURCE\";\n\t@cap[25] = \"CAP_SYS_TIME\";\n\t@cap[26] = \"CAP_SYS_TTY_CONFIG\";\n\t@cap[27] = \"CAP_MKNOD\";\n\t@cap[28] = \"CAP_LEASE\";\n\t@cap[29] = \"CAP_AUDIT_WRITE\";\n\t@cap[30] = \"CAP_AUDIT_CONTROL\";\n\t@cap[31] = \"CAP_SETFCAP\";\n\t@cap[32] = \"CAP_MAC_OVERRIDE\";\n\t@cap[33] = \"CAP_MAC_ADMIN\";\n\t@cap[34] = \"CAP_SYSLOG\";\n\t@cap[35] = \"CAP_WAKE_ALARM\";\n\t@cap[36] = \"CAP_BLOCK_SUSPEND\";\n\t@cap[37] = \"CAP_AUDIT_READ\";\n\t@cap[38] = \"CAP_PERFMON\";\n\t@cap[39] = \"CAP_BPF\";\n\t@cap[40] = \"CAP_CHECKPOINT_RESTORE\";\n}\n\nkprobe:cap_capable\n{\n\t$cap = arg2;\n\t$audit = arg3;\n\ttime(\"%H:%M:%S  \");\n\tprintf(\"%-6d %-6d %-16s %-4d %-20s %d\\n\", uid, pid, comm, $cap,\n\t    @cap[$cap], $audit);\n}\n\nEND\n{\n\tclear(@cap);\n}\n", "stdout": "Attaching 3 probes...\nTracing cap_capable syscalls... Hit Ctrl-C to end.\nTIME      UID    PID    COMM             CAP  NAME                 AUDIT\n00:09:12  0      31851  bpftrace         39   CAP_BPF              0\n00:09:12  0      31851  bpftrace         39   CAP_BPF              0\n00:09:12  0      31851  bpftrace         39   CAP_BPF              0\n00:09:12  0      31851  bpftrace         39   CAP_BPF              0\n00:09:12  0      31851  bpftrace         39   CAP_BPF              0\n00:09:12  0      31851  bpftrace         39   CAP_BPF              0\n00:09:12  0      409    systemd-journal  19   CAP_SYS_PTRACE       0\n00:09:12  0      409    systemd-journal  19   CAP_SYS_PTRACE       0\n00:09:12  0      409    systemd-journal  19   CAP_SYS_PTRACE       0\n00:09:12  0      409    systemd-journal  19   CAP_SYS_PTRACE       0\n00:09:12  0      409    systemd-journal  19   CAP_SYS_PTRACE       0\n00:09:12  0      409    systemd-journal  19   CAP_SYS_PTRACE       0\n00:09:12  0      409    systemd-journal  21   CAP_SYS_ADMIN        0\n00:09:12  0      409    systemd-journal  7    CAP_SETUID           0\n00:09:12  1000   31848  sudo             29   CAP_AUDIT_WRITE      0\n00:09:12  1000   31848  sudo             29   CAP_AUDIT_WRITE      0\n00:09:20  1000   31866  sudo             24   CAP_SYS_RESOURCE     0\n00:09:20  0      31866  sudo             6    CAP_SETGID           4\n00:09:20  0      31866  sudo             7    CAP_SETUID           4\n00:09:20  0      31866  sudo             7    CAP_SETUID           4\n00:09:20  0      31866  sudo             7    CAP_SETUID           4\n00:09:20  1000   31866  sudo             6    CAP_SETGID           4\n00:09:20  1000   31866  sudo             6    CAP_SETGID           4\n00:09:20  1000   31866  sudo             6    CAP_SETGID           4\n00:09:20  1000   31866  sudo             6    CAP_SETGID           4\n00:09:20  1000   31866  sudo             6    CAP_SETGID           4\n00:09:20  1000   31866  sudo             6    CAP_SETGID           4\n00:09:20  1000   31866  sudo             19   CAP_SYS_PTRACE       2\n00:09:20  1000   31866  sudo             29   CAP_AUDIT_WRITE      0\n00:09:20  1000   31866  sudo             29   CAP_AUDIT_WRITE      0\n00:09:20  1000   31866  sudo             24   CAP_SYS_RESOURCE     0\n00:09:20  0      848    systemd-logind   12   CAP_NET_ADMIN        0\n00:09:20  1000   31866  sudo             6    CAP_SETGID           4\n00:09:20  1000   31866  sudo             6    CAP_SETGID           4\n00:09:20  0      409    systemd-journal  5    CAP_KILL             0\n00:09:20  0      409    systemd-journal  5    CAP_KILL             0\n00:09:20  0      409    systemd-journal  5    CAP_KILL             0\n00:09:20  0      409    systemd-journal  5    CAP_KILL             0\n00:09:20  0      409    systemd-journal  5    CAP_KILL             0\n00:09:20  0      409    systemd-journal  19   CAP_SYS_PTRACE       0\n00:09:20  0      409    systemd-journal  19   CAP_SYS_PTRACE       0\n00:09:20  0      409    systemd-journal  19   CAP_SYS_PTRACE       0\n00:09:20  0      409    systemd-journal  19   CAP_SYS_PTRACE       0\n00:09:20  0      409    systemd-journal  19   CAP_SYS_PTRACE       0\n00:09:20  0      409    systemd-journal  19   CAP_SYS_PTRACE       0\n00:09:20  0      409    systemd-journal  21   CAP_SYS_ADMIN        0\n00:09:20  0      409    systemd-journal  7    CAP_SETUID           0\n00:09:20  0      409    systemd-journal  6    CAP_SETGID           0\n00:09:20  1000   31866  sudo             29   CAP_AUDIT_WRITE      0\n00:09:20  1000   31866  sudo             29   CAP_AUDIT_WRITE      0\n00:09:20  0      409    systemd-journal  19   CAP_SYS_PTRACE       0\n00:09:20  0      409    systemd-journal  19   CAP_SYS_PTRACE       0\n00:09:20  0      409    systemd-journal  19   CAP_SYS_PTRACE       0\n00:09:20  0      409    systemd-journal  19   CAP_SYS_PTRACE       0\n00:09:20  0      409    systemd-journal  19   CAP_SYS_PTRACE       0\n00:09:20  0      409    systemd-journal  19   CAP_SYS_PTRACE       0\n00:09:20  0      409    systemd-journal  21   CAP_SYS_ADMIN        0\n00:09:20  0      409    systemd-journal  7    CAP_SETUID           0\n00:09:20  1000   31868  sudo             24   CAP_SYS_RESOURCE     0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         24   CAP_SYS_RESOURCE     0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         38   CAP_PERFMON          0\n00:09:20  0      31869  bpftrace         38   CAP_PERFMON          0\n00:09:20  0      31869  bpftrace         38   CAP_PERFMON          0\n00:09:20  0      31869  bpftrace         38   CAP_PERFMON          0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         38   CAP_PERFMON          0\n00:09:20  0      31869  bpftrace         38   CAP_PERFMON          0\n00:09:20  0      31869  bpftrace         38   CAP_PERFMON          0\n00:09:20  0      31869  bpftrace         38   CAP_PERFMON          0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         38   CAP_PERFMON          0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         38   CAP_PERFMON          0\n00:09:20  0      31869  bpftrace         38   CAP_PERFMON          0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         38   CAP_PERFMON          0\n00:09:20  0      31869  bpftrace         38   CAP_PERFMON          0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         38   CAP_PERFMON          0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         38   CAP_PERFMON          0\n00:09:20  0      31869  bpftrace         38   CAP_PERFMON          0\n00:09:20  0      31869  bpftrace         38   CAP_PERFMON          0\n00:09:20  0      31869  bpftrace         38   CAP_PERFMON          0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         38   CAP_PERFMON          0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         38   CAP_PERFMON          0\n00:09:20  0      31869  bpftrace         38   CAP_PERFMON          0\n00:09:20  0      31869  bpftrace         38   CAP_PERFMON          0\n00:09:20  0      31869  bpftrace         38   CAP_PERFMON          0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         38   CAP_PERFMON          0\n00:09:20  0      31869  bpftrace         38   CAP_PERFMON          0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         38   CAP_PERFMON          0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         38   CAP_PERFMON          0\n00:09:20  0      31869  bpftrace         38   CAP_PERFMON          0\n00:09:20  0      31869  bpftrace         38   CAP_PERFMON          0\n00:09:20  0      31869  bpftrace         38   CAP_PERFMON          0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         39   CAP_BPF              0\n00:09:20  0      31869  bpftrace         21   CAP_SYS_ADMIN        0\n00:09:20  0      31869  bpftrace         38   CAP_PERFMON          0\n00:09:20  0      31869  bpftrace         38   CAP_PERFMON          0\n00:09:20  0      31869  bpftrace         38   CAP_PERFMON          0\n00:09:21  0      31869  bpftrace         39   CAP_BPF              0\n00:09:21  0      31869  bpftrace         39   CAP_BPF              0\n00:09:21  0      31869  bpftrace         39   CAP_BPF              0\n00:09:21  0      31869  bpftrace         39   CAP_BPF              0\n00:09:22  0      31869  bpftrace         39   CAP_BPF              0\n00:09:22  0      31869  bpftrace         39   CAP_BPF              0\n00:09:22  0      31869  bpftrace         39   CAP_BPF              0\n00:09:22  0      31869  bpftrace         39   CAP_BPF              0\n00:09:23  0      31869  bpftrace         39   CAP_BPF              0\n00:09:23  0      31869  bpftrace         39   CAP_BPF              0\n00:09:23  0      31869  bpftrace         39   CAP_BPF              0\n00:09:23  0      31869  bpftrace         39   CAP_BPF              0\n00:09:24  0      31869  bpftrace         39   CAP_BPF              0\n00:09:24  0      31869  bpftrace         39   CAP_BPF              0\n00:09:24  0      31869  bpftrace         39   CAP_BPF              0\n00:09:24  0      31869  bpftrace         39   CAP_BPF              0\n00:09:25  0      31869  bpftrace         39   CAP_BPF              0\n00:09:25  0      31869  bpftrace         39   CAP_BPF              0\n00:09:25  0      31869  bpftrace         39   CAP_BPF              0\n00:09:25  0      31869  bpftrace         39   CAP_BPF              0\n00:09:26  0      31869  bpftrace         39   CAP_BPF              0\n00:09:26  0      31869  bpftrace         39   CAP_BPF              0\n00:09:26  0      31869  bpftrace         39   CAP_BPF              0\n00:09:26  0      31869  bpftrace         39   CAP_BPF              0\n00:09:27  0      409    systemd-journal  19   CAP_SYS_PTRACE       0\n00:09:27  0      409    systemd-journal  19   CAP_SYS_PTRACE       0\n00:09:27  0      409    systemd-journal  21   CAP_SYS_ADMIN        0\n00:09:27  0      409    systemd-journal  7    CAP_SETUID           0\n00:09:27  0      409    systemd-journal  6    CAP_SETGID           0\n00:09:27  0      31869  bpftrace         39   CAP_BPF              0\n00:09:27  0      31869  bpftrace         39   CAP_BPF              0\n00:09:27  0      31869  bpftrace         39   CAP_BPF              0\n00:09:27  0      31869  bpftrace         39   CAP_BPF              0\n00:09:28  0      31869  bpftrace         39   CAP_BPF              0\n00:09:28  0      31869  bpftrace         39   CAP_BPF              0\n00:09:28  0      31869  bpftrace         39   CAP_BPF              0\n00:09:28  0      31869  bpftrace         39   CAP_BPF              0\n00:09:29  0      31869  bpftrace         39   CAP_BPF              0\n00:09:29  0      31869  bpftrace         39   CAP_BPF              0\n00:09:29  0      31869  bpftrace         39   CAP_BPF              0\n00:09:29  0      31869  bpftrace         39   CAP_BPF              0\n00:09:30  0      31869  bpftrace         39   CAP_BPF              0\n00:09:30  0      31869  bpftrace         39   CAP_BPF              0\n00:09:30  0      31869  bpftrace         39   CAP_BPF              0\n00:09:30  0      31869  bpftrace         39   CAP_BPF              0\n00:09:31  0      31869  bpftrace         39   CAP_BPF              0\n00:09:31  0      31869  bpftrace         39   CAP_BPF              0\n00:09:31  0      31869  bpftrace         39   CAP_BPF              0\n00:09:31  0      31869  bpftrace         39   CAP_BPF              0\n\n\n\n", "stderr": "", "returncode": 0, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nTrace security capability checks events\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces the security capability checks (cap_capable()) and prints the UID, PID, command name, capability, capability name, and audit value for each syscall in a clear and organized manner.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing cap_capable syscalls... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-9s %-6s %-6s %-16s %-4s %-20s AUDIT\\n\", \"TIME\", \"UID\", \"PID\",\n\t    \"COMM\", \"CAP\", \"NAME\");\n\t@cap[0] = \"CAP_CHOWN\";\n\t@cap[1] = \"CAP_DAC_OVERRIDE\";\n\t@cap[2] = \"CAP_DAC_READ_SEARCH\";\n\t@cap[3] = \"CAP_FOWNER\";\n\t@cap[4] = \"CAP_FSETID\";\n\t@cap[5] = \"CAP_KILL\";\n\t@cap[6] = \"CAP_SETGID\";\n\t@cap[7] = \"CAP_SETUID\";\n\t@cap[8] = \"CAP_SETPCAP\";\n\t@cap[9] = \"CAP_LINUX_IMMUTABLE\";\n\t@cap[10] = \"CAP_NET_BIND_SERVICE\";\n\t@cap[11] = \"CAP_NET_BROADCAST\";\n\t@cap[12] = \"CAP_NET_ADMIN\";\n\t@cap[13] = \"CAP_NET_RAW\";\n\t@cap[14] = \"CAP_IPC_LOCK\";\n\t@cap[15] = \"CAP_IPC_OWNER\";\n\t@cap[16] = \"CAP_SYS_MODULE\";\n\t@cap[17] = \"CAP_SYS_RAWIO\";\n\t@cap[18] = \"CAP_SYS_CHROOT\";\n\t@cap[19] = \"CAP_SYS_PTRACE\";\n\t@cap[20] = \"CAP_SYS_PACCT\";\n\t@cap[21] = \"CAP_SYS_ADMIN\";\n\t@cap[22] = \"CAP_SYS_BOOT\";\n\t@cap[23] = \"CAP_SYS_NICE\";\n\t@cap[24] = \"CAP_SYS_RESOURCE\";\n\t@cap[25] = \"CAP_SYS_TIME\";\n\t@cap[26] = \"CAP_SYS_TTY_CONFIG\";\n\t@cap[27] = \"CAP_MKNOD\";\n\t@cap[28] = \"CAP_LEASE\";\n\t@cap[29] = \"CAP_AUDIT_WRITE\";\n\t@cap[30] = \"CAP_AUDIT_CONTROL\";\n\t@cap[31] = \"CAP_SETFCAP\";\n\t@cap[32] = \"CAP_MAC_OVERRIDE\";\n\t@cap[33] = \"CAP_MAC_ADMIN\";\n\t@cap[34] = \"CAP_SYSLOG\";\n\t@cap[35] = \"CAP_WAKE_ALARM\";\n\t@cap[36] = \"CAP_BLOCK_SUSPEND\";\n\t@cap[37] = \"CAP_AUDIT_READ\";\n\t@cap[38] = \"CAP_PERFMON\";\n\t@cap[39] = \"CAP_BPF\";\n\t@cap[40] = \"CAP_CHECKPOINT_RESTORE\";\n}\n\nkprobe:cap_capable\n{\n\t$cap = arg2;\n\t$audit = arg3;\n\ttime(\"%H:%M:%S  \");\n\tprintf(\"%-6d %-6d %-16s %-4d %-20s %d\\n\", uid, pid, comm, $cap,\n\t    @cap[$cap], $audit);\n}\n\nEND\n{\n\tclear(@cap);\n}\n\n```\n\nexample: Write a BPF code that traces sync-related system calls, such as sync(), syncfs(), fsync(), and fdatasync(), and prints the time, process ID, command, and event for each traced system call.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing sync syscalls... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-9s %-6s %-16s %s\\n\", \"TIME\", \"PID\", \"COMM\", \"EVENT\");\n}\n\ntracepoint:syscalls:sys_enter_sync,\ntracepoint:syscalls:sys_enter_syncfs,\ntracepoint:syscalls:sys_enter_fsync,\ntracepoint:syscalls:sys_enter_fdatasync,\ntracepoint:syscalls:sys_enter_sync_file_range*,\ntracepoint:syscalls:sys_enter_msync\n{\n\ttime(\"%H:%M:%S  \");\n\tprintf(\"%-6d %-16s %s\\n\", pid, comm, probe);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nTrace security capability checks events\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:swap_readpage { @[comm] = count(); } interval:s:1 { print(@); clear(@); }", "stdout": "Attaching 2 probes...\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "stderr": "", "returncode": 0, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nCounts swapins by process, to show which process is affected by swapping\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that monitors the swapins by process.\n\n```\nkprobe:swap_readpage\n{\n        @[comm, pid] = count();\n}\n\ninterval:s:1\n{\n        time();\n        print(@);\n        clear(@);\n}\n\n```\n\nexample: Write a BPF code that counts the number of system calls and the number of processes. It also prints the top 10 system call IDs and the top 10 processes at the end.\n\n```\nBEGIN\n{\n\tprintf(\"Counting syscalls... Hit Ctrl-C to end.\\n\");\n\t// ausyscall --dump | awk 'NR > 1 { printf(\"\\t@sysname[%d] = \\\"%s\\\";\\n\", $1, $2); }'\n}\n\ntracepoint:raw_syscalls:sys_enter\n{\n\t@syscall[args.id] = count();\n\t@process[comm] = count();\n}\n\nEND\n{\n\tprintf(\"\\nTop 10 syscalls IDs:\\n\");\n\tprint(@syscall, 10);\n\tclear(@syscall);\n\n\tprintf(\"\\nTop 10 processes:\\n\");\n\tprint(@process, 10);\n\tclear(@process);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nCounts swapins by process, to show which process is affected by swapping\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:compact_zone { @start[tid] = nsecs; }\nkretprobe:compact_zone { @latency[tid, comm] = hist((nsecs - @start[tid]) / 1000); delete(@start[tid]); }", "stdout": "\n\n@latency[35, kcompactd0]: \n[8, 16)                1 |@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@|\n[16, 32)               0 |                                                    |\n[32, 64)               0 |                                                    |\n[64, 128)              0 |                                                    |\n[128, 256)             1 |@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@|\n[256, 512)             0 |                                                    |\n[512, 1K)              0 |                                                    |\n[1K, 2K)               0 |                                                    |\n[2K, 4K)               0 |                                                    |\n[4K, 8K)               0 |                                                    |\n[8K, 16K)              1 |@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@|\n\n\n", "stderr": "", "returncode": 0, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\nTrace compact zone events with PID and latency\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces block I/O operations and displays the latency for each operation, along with the disk, process, and PID associated with it.\n\n```\n#ifndef BPFTRACE_HAVE_BTF\n#include <linux/blkdev.h>\n#include <linux/blk-mq.h>\n#endif\n\nBEGIN\n{\n\tprintf(\"%-12s %-7s %-16s %-6s %7s\\n\", \"TIME(ms)\", \"DISK\", \"COMM\", \"PID\", \"LAT(ms)\");\n}\n\nkprobe:blk_account_io_start,\nkprobe:__blk_account_io_start\n{\n\t@start[arg0] = nsecs;\n\t@iopid[arg0] = pid;\n\t@iocomm[arg0] = comm;\n\t@disk[arg0] = ((struct request *)arg0)->q->disk->disk_name;\n}\n\nkprobe:blk_account_io_done,\nkprobe:__blk_account_io_done\n/@start[arg0] != 0 && @iopid[arg0] != 0 && @iocomm[arg0] != \"\"/\n\n{\n\t$now = nsecs;\n\tprintf(\"%-12u %-7s %-16s %-6d %7d\\n\",\n\t    elapsed / 1e6, @disk[arg0], @iocomm[arg0], @iopid[arg0],\n\t    ($now - @start[arg0]) / 1e6);\n\n\tdelete(@start[arg0]);\n\tdelete(@iopid[arg0]);\n\tdelete(@iocomm[arg0]);\n\tdelete(@disk[arg0]);\n}\n\nEND\n{\n\tclear(@start);\n\tclear(@iopid);\n\tclear(@iocomm);\n\tclear(@disk);\n}\n\n```\n\nexample: Write a BPF code that traces block device I/O latency by calculating the time difference between the start and completion of I/O operations and storing them in a histogram.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing block device I/O... Hit Ctrl-C to end.\\n\");\n}\n\nkprobe:blk_account_io_start,\nkprobe:__blk_account_io_start\n{\n\t@start[arg0] = nsecs;\n}\n\nkprobe:blk_account_io_done,\nkprobe:__blk_account_io_done\n/@start[arg0]/\n{\n\t@usecs = hist((nsecs - @start[arg0]) / 1000);\n\tdelete(@start[arg0]);\n}\n\nEND\n{\n\tclear(@start);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\nTrace compact zone events with PID and latency\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e #include <net/sock.h>\n#include <bcc/proto.h>\n\nkprobe:tcp_v4_connect\n{\n  $sk = (struct sock *)arg0;\n  $daddr = $sk->__sk_common.skc_daddr;\n  $dport = $sk->__sk_common.skc_dport;\n  printf(\"%s initiated a connection to %s:%d\\n\", comm, inet_ntoa($daddr), ntohs($dport));\n}", "stdout": "", "stderr": "stdin:9:56-65: ERROR: Unknown function: inet_ntoa\n  printf(\"%s initiated a connection to %s:%d\\n\", comm, inet_ntoa($daddr), ntohs($dport));\n                                                       ~~~~~~~~~\n", "returncode": 1, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\ntraces the kernel function performing active TCP connections(eg, via a connect() syscall; accept() are passive connections).\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces TCP accept()s by dynamically tracing the kernel inet_csk_accept() socket function and prints information such as the time, process ID, communication, remote and local addresses and ports, and backlog length.\n\n```\n#ifndef BPFTRACE_HAVE_BTF\n#include <linux/socket.h>\n#include <net/sock.h>\n#else\n#include <sys/socket.h>\n#endif\n\nBEGIN\n{\n\tprintf(\"Tracing TCP accepts. Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-8s %-6s %-14s \", \"TIME\", \"PID\", \"COMM\");\n\tprintf(\"%-39s %-5s %-39s %-5s %s\\n\", \"RADDR\", \"RPORT\", \"LADDR\",\n\t    \"LPORT\", \"BL\");\n}\n\nkretprobe:inet_csk_accept\n{\n\t$sk = (struct sock *)retval;\n\t$inet_family = $sk->__sk_common.skc_family;\n\n\tif ($inet_family == AF_INET || $inet_family == AF_INET6) {\n\t\t// initialize variable type:\n\t\t$daddr = ntop(0);\n\t\t$saddr = ntop(0);\n\t\tif ($inet_family == AF_INET) {\n\t\t\t$daddr = ntop($sk->__sk_common.skc_daddr);\n\t\t\t$saddr = ntop($sk->__sk_common.skc_rcv_saddr);\n\t\t} else {\n\t\t\t$daddr = ntop(\n\t\t\t    $sk->__sk_common.skc_v6_daddr.in6_u.u6_addr8);\n\t\t\t$saddr = ntop(\n\t\t\t    $sk->__sk_common.skc_v6_rcv_saddr.in6_u.u6_addr8);\n\t\t}\n\t\t$lport = $sk->__sk_common.skc_num;\n\t\t$dport = $sk->__sk_common.skc_dport;\n\t\t$qlen  = $sk->sk_ack_backlog;\n\t\t$qmax  = $sk->sk_max_ack_backlog;\n\n\t\t// Destination port is big endian, it must be flipped\n\t\t$dport = bswap($dport);\n\n\t\ttime(\"%H:%M:%S \");\n\t\tprintf(\"%-6d %-14s \", pid, comm);\n\t\tprintf(\"%-39s %-5d %-39s %-5d \", $daddr, $dport, $saddr,\n\t\t    $lport);\n\t\tprintf(\"%d/%d\\n\", $qlen, $qmax);\n\t}\n}\n\n```\n\nexample: Write a BPF code that traces TCP connections by dynamically tracing kernel functions and prints out the time, PID, and addresses and ports of the source and destination of each connection.\n\n```\n#ifndef BPFTRACE_HAVE_BTF\n#include <linux/socket.h>\n#include <net/sock.h>\n#else\n#include <sys/socket.h>\n#endif\n\nBEGIN\n{\n  printf(\"Tracing tcp connections. Hit Ctrl-C to end.\\n\");\n  printf(\"%-8s %-8s %-16s \", \"TIME\", \"PID\", \"COMM\");\n  printf(\"%-39s %-6s %-39s %-6s\\n\", \"SADDR\", \"SPORT\", \"DADDR\", \"DPORT\");\n}\n\nkprobe:tcp_connect\n{\n  $sk = ((struct sock *) arg0);\n  $inet_family = $sk->__sk_common.skc_family;\n\n  if ($inet_family == AF_INET || $inet_family == AF_INET6) {\n    if ($inet_family == AF_INET) {\n      $daddr = ntop($sk->__sk_common.skc_daddr);\n      $saddr = ntop($sk->__sk_common.skc_rcv_saddr);\n    } else {\n      $daddr = ntop($sk->__sk_common.skc_v6_daddr.in6_u.u6_addr8);\n      $saddr = ntop($sk->__sk_common.skc_v6_rcv_saddr.in6_u.u6_addr8);\n    }\n    $lport = $sk->__sk_common.skc_num;\n    $dport = $sk->__sk_common.skc_dport;\n\n    // Destination port is big endian, it must be flipped\n    $dport = bswap($dport);\n\n    time(\"%H:%M:%S \");\n    printf(\"%-8d %-16s \", pid, comm);\n    printf(\"%-39s %-6d %-39s %-6d\\n\", $saddr, $lport, $daddr, $dport);\n  }\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\ntraces the kernel function performing active TCP connections(eg, via a connect() syscall; accept() are passive connections).\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN\n{\n\tprintf(\"Tracing XFS operation latency... Hit Ctrl-C to end.\\n\");\n}\n\nkprobe:xfs_file_read_iter,\nkprobe:xfs_file_write_iter,\nkprobe:xfs_file_open,\nkprobe:xfs_file_fsync\n{\n\t@start[tid] = nsecs;\n\t@name[tid] = func;\n}\n\nkretprobe:xfs_file_read_iter,\nkretprobe:xfs_file_write_iter,\nkretprobe:xfs_file_open,\nkretprobe:xfs_file_fsync\n/@start[tid]/\n{\n\t@us[@name[tid]] = hist((nsecs - @start[tid]) / 1000);\n\tdelete(@start[tid]);\n\tdelete(@name[tid]);\n}\n\nEND\n{\n\tclear(@start);\n\tclear(@name);\n}\n", "stdout": "Attaching 10 probes...\nTracing XFS operation latency... Hit Ctrl-C to end.\n\n\n\n\n\n", "stderr": "stdin:4-6: WARNING: xfs_file_read_iter is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\nstdin:6-7: WARNING: xfs_file_write_iter is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\nstdin:7-8: WARNING: xfs_file_open is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\nstdin:8-9: WARNING: xfs_file_fsync is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\nstdin:13-15: WARNING: xfs_file_read_iter is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\nstdin:15-16: WARNING: xfs_file_write_iter is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\nstdin:16-17: WARNING: xfs_file_open is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\nstdin:17-18: WARNING: xfs_file_fsync is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\ncannot attach kprobe, probe entry may not exist\nWARNING: could not attach probe kretprobe:xfs_file_read_iter, skipping.\ncannot attach kprobe, probe entry may not exist\nWARNING: could not attach probe kretprobe:xfs_file_write_iter, skipping.\ncannot attach kprobe, probe entry may not exist\nWARNING: could not attach probe kretprobe:xfs_file_open, skipping.\ncannot attach kprobe, probe entry may not exist\nWARNING: could not attach probe kretprobe:xfs_file_fsync, skipping.\ncannot attach kprobe, probe entry may not exist\nWARNING: could not attach probe kprobe:xfs_file_fsync, skipping.\ncannot attach kprobe, probe entry may not exist\nWARNING: could not attach probe kprobe:xfs_file_open, skipping.\ncannot attach kprobe, probe entry may not exist\nWARNING: could not attach probe kprobe:xfs_file_write_iter, skipping.\ncannot attach kprobe, probe entry may not exist\nWARNING: could not attach probe kprobe:xfs_file_read_iter, skipping.\n", "returncode": 0, "prompt": "\nWrite a bpftrace program that traces or profile the following user request:\n\n### User Request\n\ntraces XFS reads, writes, opens, and fsyncs, and summarizes their latency as a power-of-2 histogram.\n\n### Examples\n\nHere are some simple examples to help you get started with bpftrace:\n\n\nBelow are some simple examples of bpftrace programs:\n\ntrace processes calling sleep:\n```\nkprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }\n```\n\ncount syscalls by process name:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nFiles opened by process:\n```\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\", comm, str(args->filename)); }\n```\n\nSyscall count by program:\n```\ntracepoint:raw_syscalls:sys_enter { @[comm] = count(); }\n```\n\nRead bytes by process:\n```\ntracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }\n```\n\nRead size distribution by process:\n```\ntracepoint:syscalls:sys_exit_read { @[comm] = hist(args->ret); }\n```\n\nShow per-second syscall rates:\n```\ntracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }\n```\n\nTrace disk size by process:\n```\ntracepoint:block:block_rq_issue { printf(\"%d %s %d\", pid, comm, args->bytes); }\n```\n\nCount page faults by process\n```\nsoftware:faults:1 { @[comm] = count(); }\n```\n\nCount LLC cache misses by process name and PID (uses PMCs):\n```\nhardware:cache-misses:1000000 { @[comm, pid] = count(); }\n```\n\nProfile user-level stacks at 99 Hertz, for PID 189:\n```\nprofile:hz:99 /pid == 189/ { @[ustack] = count(); }\n```\n\nFiles opened, for processes in the root cgroup-v2\n```\ntracepoint:syscalls:sys_enter_openat /cgroup == cgroupid(\"/sys/fs/cgroup/unified/mycg\")/ { printf(\"%s\", str(args->filename)); }\n```\n\ntcp connect events with PID and process name\n```\nkprobe:tcp_connect { printf(\"connected from pid %d, comm %s\", pid, comm); }\n```\n\n\nHere are some complex examples may be related to your user request:\n\nexample: Write a BPF code that traces the latency of four common XFS file system operations (read, write, open, and fsync) and prints a summary of the operation latency, using the bpftrace and eBPF tools.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing XFS operation latency... Hit Ctrl-C to end.\\n\");\n}\n\nkprobe:xfs_file_read_iter,\nkprobe:xfs_file_write_iter,\nkprobe:xfs_file_open,\nkprobe:xfs_file_fsync\n{\n\t@start[tid] = nsecs;\n\t@name[tid] = func;\n}\n\nkretprobe:xfs_file_read_iter,\nkretprobe:xfs_file_write_iter,\nkretprobe:xfs_file_open,\nkretprobe:xfs_file_fsync\n/@start[tid]/\n{\n\t@us[@name[tid]] = hist((nsecs - @start[tid]) / 1000);\n\tdelete(@start[tid]);\n\tdelete(@name[tid]);\n}\n\nEND\n{\n\tclear(@start);\n\tclear(@name);\n}\n\n```\n\nexample: Write a BPF code that traces block device I/O latency by calculating the time difference between the start and completion of I/O operations and storing them in a histogram.\n\n```\nBEGIN\n{\n\tprintf(\"Tracing block device I/O... Hit Ctrl-C to end.\\n\");\n}\n\nkprobe:blk_account_io_start,\nkprobe:__blk_account_io_start\n{\n\t@start[arg0] = nsecs;\n}\n\nkprobe:blk_account_io_done,\nkprobe:__blk_account_io_done\n/@start[arg0]/\n{\n\t@usecs = hist((nsecs - @start[arg0]) / 1000);\n\tdelete(@start[arg0]);\n}\n\nEND\n{\n\tclear(@start);\n}\n\n```\n\n\nYou can refer to the above examples to write your own bpftrace program to help user with:\n\ntraces XFS reads, writes, opens, and fsyncs, and summarizes their latency as a power-of-2 histogram.\n\nUse a tool provided to execute your bpftrace program.\nYou should only write the bpftrace program itself.\n"}
