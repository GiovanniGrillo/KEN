{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN { printf(\"Monitoring hardware interrupts... Hit Ctrl-C to end.\\n\"); } tracepoint:irq:irq_handler_entry { @[args->irq] = count(); } interval:s:1 { time(); print(@); clear(@); } END { clear(@); }", "stdout": "Attaching 4 probes...\nMonitoring hardware interrupts... Hit Ctrl-C to end.\n10:50:01\n@[17]: 2\n@[19]: 14\n10:50:02\n@[57]: 1\n@[56]: 1\n@[19]: 23\n10:50:03\n@[19]: 4\n10:50:04\n@[56]: 1\n@[19]: 5\n10:50:05\n@[17]: 1\n@[19]: 4\n10:50:06\n@[56]: 1\n@[17]: 5\n@[19]: 35\n10:50:07\n@[19]: 28\n10:50:08\n@[56]: 1\n@[19]: 67\n10:50:09\n@[19]: 5\n10:50:10\n@[56]: 1\n@[17]: 1\n@[19]: 32\n10:50:11\n@[17]: 2\n@[19]: 13\n10:50:12\n@[56]: 1\n@[57]: 2\n@[19]: 99\n10:50:13\n@[19]: 4\n10:50:14\n@[56]: 1\n@[19]: 29\n10:50:15\n@[19]: 9\n10:50:16\n@[56]: 1\n@[19]: 5\n10:50:17\n@[17]: 2\n@[19]: 11\n10:50:18\n@[19]: 8\n10:50:19\n@[56]: 1\n@[17]: 5\n@[19]: 10\n\n\n\n", "stderr": "", "returncode": 0}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:sched:sched_process_fork\n{\n    printf(\"Parent PID: %d, Parent CMD: %s, Child PID: %d, Child CMD: %s\\n\", pid, comm, args->child_pid, args->child_comm);\n}", "stdout": "Attaching 1 probe...\nParent PID: 1624, Parent CMD: node, Child PID: 16688, Child CMD: node\nParent PID: 16688, Parent CMD: git, Child PID: 16689, Child CMD: git\nParent PID: 1624, Parent CMD: node, Child PID: 16690, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16691, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16692, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16693, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16694, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16695, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16696, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16697, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16698, Child CMD: node\nParent PID: 16698, Parent CMD: git, Child PID: 16699, Child CMD: git\nParent PID: 16699, Parent CMD: sh, Child PID: 16700, Child CMD: sh\nParent PID: 16700, Parent CMD: git-editor.sh, Child PID: 16701, Child CMD: git-editor.sh\nParent PID: 16701, Parent CMD: node, Child PID: 16702, Child CMD: node\nParent PID: 16701, Parent CMD: node, Child PID: 16703, Child CMD: node\nParent PID: 16701, Parent CMD: node, Child PID: 16704, Child CMD: node\nParent PID: 16701, Parent CMD: node, Child PID: 16705, Child CMD: node\nParent PID: 16701, Parent CMD: node, Child PID: 16706, Child CMD: node\nParent PID: 16701, Parent CMD: node, Child PID: 16707, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16708, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16709, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16710, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16711, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16712, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16713, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16714, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16715, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16716, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16717, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16718, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16719, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16720, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16721, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16722, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16723, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16724, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16725, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16726, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16727, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16728, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16729, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16730, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16731, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16732, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16733, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16734, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16735, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16736, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16737, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16738, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16739, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16740, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16741, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16742, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16743, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16744, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16745, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16746, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16747, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16748, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16749, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16750, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16751, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16752, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16753, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16754, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16755, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16756, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16757, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16758, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16759, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16760, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16761, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16762, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16763, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16764, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16765, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16766, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16767, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16768, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16769, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16770, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16771, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16772, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16773, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16774, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16775, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16776, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16777, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16778, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16779, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16780, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16781, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16782, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16783, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16784, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16785, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16786, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16787, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16788, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16789, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16790, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16791, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16792, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16793, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16794, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16795, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16796, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16797, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16798, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16799, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16800, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16801, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16802, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16803, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16804, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16805, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16806, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16807, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16808, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16809, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16810, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16811, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16812, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16813, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16814, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16815, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16816, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16817, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16818, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16819, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16820, Child CMD: node\nParent PID: 1624, Parent CMD: node, Child PID: 16821, Child CMD: node\nParent PID: 16821, Parent CMD: git, Child PID: 16822, Child CMD: git\nParent PID: 16822, Parent CMD: git, Child PID: 16823, Child CMD: git\nParent PID: 16823, Parent CMD: git-remote-http, Child PID: 16824, Child CMD: git-remote-http\nParent PID: 16824, Parent CMD: askpass.sh, Child PID: 16825, Child CMD: askpass.sh\nParent PID: 16824, Parent CMD: askpass.sh, Child PID: 16826, Child CMD: askpass.sh\nParent PID: 16826, Parent CMD: node, Child PID: 16827, Child CMD: node\nParent PID: 16826, Parent CMD: node, Child PID: 16828, Child CMD: node\nParent PID: 16826, Parent CMD: node, Child PID: 16829, Child CMD: node\nParent PID: 16826, Parent CMD: node, Child PID: 16830, Child CMD: node\nParent PID: 16826, Parent CMD: node, Child PID: 16831, Child CMD: node\nParent PID: 16826, Parent CMD: node, Child PID: 16832, Child CMD: node\nParent PID: 16824, Parent CMD: askpass.sh, Child PID: 16833, Child CMD: askpass.sh\nParent PID: 16824, Parent CMD: askpass.sh, Child PID: 16834, Child CMD: askpass.sh\nParent PID: 16823, Parent CMD: git-remote-http, Child PID: 16835, Child CMD: git-remote-http\nParent PID: 16835, Parent CMD: askpass.sh, Child PID: 16836, Child CMD: askpass.sh\nParent PID: 16835, Parent CMD: askpass.sh, Child PID: 16837, Child CMD: askpass.sh\nParent PID: 16837, Parent CMD: node, Child PID: 16838, Child CMD: node\nParent PID: 16837, Parent CMD: node, Child PID: 16839, Child CMD: node\nParent PID: 16837, Parent CMD: node, Child PID: 16840, Child CMD: node\nParent PID: 16837, Parent CMD: node, Child PID: 16841, Child CMD: node\nParent PID: 16837, Parent CMD: node, Child PID: 16842, Child CMD: node\nParent PID: 16837, Parent CMD: node, Child PID: 16843, Child CMD: node\nParent PID: 16835, Parent CMD: askpass.sh, Child PID: 16844, Child CMD: askpass.sh\nParent PID: 16835, Parent CMD: askpass.sh, Child PID: 16845, Child CMD: askpass.sh\n\n\n", "stderr": "", "returncode": 0}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:kmalloc { @[comm] = hist(arg0); }", "stdout": "Attaching 1 probe...\n", "stderr": "stdin:1:1-15: WARNING: kmalloc is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\nkprobe:kmalloc { @[comm] = hist(arg0); }\n~~~~~~~~~~~~~~\ncannot attach kprobe, probe entry may not exist\nERROR: Error attaching probe: 'kprobe:kmalloc'\n", "returncode": 255}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN { printf(\"Tracing process resource limits... Hit Ctrl-C to end.\\n\"); }\n\ntracepoint:syscalls:sys_enter_setrlimit, tracepoint:syscalls:sys_enter_prlimit64 { @limits[comm, args->resource] = args->rlim->rlim_cur; }\n\ntracepoint:syscalls:sys_enter_open { @files[comm] = count(); if (@files[comm] > @limits[comm, RLIMIT_NOFILE]) { printf(\"%s exceeded file descriptor limit\\n\", comm); } }\n\ntracepoint:syscalls:sys_enter_brk, tracepoint:syscalls:sys_enter_mmap { @mem[comm] = sum(args->len); if (@mem[comm] > @limits[comm, RLIMIT_AS]) { printf(\"%s exceeded memory limit\\n\", comm); } }\n\nEND { clear(@limits); clear(@files); clear(@mem); }", "stdout": "", "stderr": "stdin:3:116-126: ERROR: Struct/union of type 'struct _tracepoint_syscalls_sys_enter_prlimit64' does not contain a field named 'rlim'\ntracepoint:syscalls:sys_enter_setrlimit, tracepoint:syscalls:sys_enter_prlimit64 { @limits[comm, args->resource] = args->rlim->rlim_cur; }\n                                                                                                                   ~~~~~~~~~~\nstdin:5:95-108: ERROR: Unknown identifier: 'RLIMIT_NOFILE'\ntracepoint:syscalls:sys_enter_open { @files[comm] = count(); if (@files[comm] > @limits[comm, RLIMIT_NOFILE]) { printf(\"%s exceeded file descriptor limit\\n\", comm); } }\n                                                                                              ~~~~~~~~~~~~~\nstdin:7:86-99: ERROR: Struct/union of type 'struct _tracepoint_syscalls_sys_enter_brk' does not contain a field named 'len'\ntracepoint:syscalls:sys_enter_brk, tracepoint:syscalls:sys_enter_mmap { @mem[comm] = sum(args->len); if (@mem[comm] > @limits[comm, RLIMIT_AS]) { printf(\"%s exceeded memory limit\\n\", comm); } }\n                                                                                     ~~~~~~~~~~~~~\nstdin:7:133-142: ERROR: Unknown identifier: 'RLIMIT_AS'\ntracepoint:syscalls:sys_enter_brk, tracepoint:syscalls:sys_enter_mmap { @mem[comm] = sum(args->len); if (@mem[comm] > @limits[comm, RLIMIT_AS]) { printf(\"%s exceeded memory limit\\n\", comm); } }\n                                                                                                                                    ~~~~~~~~~\n", "returncode": 1}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:signal:signal_deliver { printf(\"Signal %s delivered to PID %d\\n\", str(sig), pid); }", "stdout": "", "stderr": "stdin:1:78-85: ERROR: Unknown identifier: 'sig'\ntracepoint:signal:signal_deliver { printf(\"Signal %s delivered to PID %d\\n\", str(sig), pid); }\n                                                                             ~~~~~~~\nstdin:1:78-86: ERROR: str() expects an integer or a pointer type as first argument (none provided)\ntracepoint:signal:signal_deliver { printf(\"Signal %s delivered to PID %d\\n\", str(sig), pid); }\n                                                                             ~~~~~~~~\n", "returncode": 1}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN\n{\n\tprintf(\"Tracing syscall errors... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-6s %-16s %-6s %-16s\\n\", \"PID\", \"COMM\", \"ERR\", \"SYSCALL\");\n}\n\ntracepoint:syscalls:sys_enter\n{\n\t@syscall[tid] = args->id;\n}\n\ntracepoint:syscalls:sys_exit\n/@syscall[tid]/\n{\n\t$ret = args->ret;\n\t$errno = $ret >= 0 ? 0 : - $ret;\n\n\tif ($errno != 0) {\n\t\tprintf(\"%-6d %-16s %-6d %-16s\\n\", pid, comm, $errno, syscall(@syscall[tid]));\n\t\t@err_count[comm, syscall(@syscall[tid])] = count();\n\t}\n\n\tdelete(@syscall[tid]);\n}\n\ninterval:s:1\n{\n\tprintf(\"\\n%-16s %-16s %-6s\\n\", \"COMM\", \"SYSCALL\", \"COUNT\");\n\tprint(@err_count);\n\tclear(@err_count);\n}\n\nEND\n{\n\tclear(@syscall);\n\tclear(@err_count);\n}", "stdout": "", "stderr": "stdin:19:56-63: ERROR: Unknown function: syscall\n        printf(\"%-6d %-16s %-6d %-16s\\n\", pid, comm, $errno, syscall(@syscall[tid]));\n                                                             ~~~~~~~\n", "returncode": 1}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e #include <net/sock.h>\n#include <bcc/proto.h>\n\nkprobe:tcp_v4_connect\n{\n  $sk = (struct sock *)arg0;\n  $daddr = inet_ntoa($sk->__sk_common.skc_daddr);\n  $saddr = inet_ntoa($sk->__sk_common.skc_rcv_saddr);\n  $dport = ntohs($sk->__sk_common.skc_dport);\n  $sport = $sk->__sk_common.skc_num;\n  printf(\"%s:%d -> %s:%d\\n\", $saddr, $sport, $daddr, $dport);\n}\n\nkprobe:tcp_v6_connect\n{\n  $sk = (struct sock *)arg0;\n  $daddr = inet_ntop(AF_INET6, $sk->__sk_common.skc_v6_daddr.in6_u.u6_addr32);\n  $saddr = inet_ntop(AF_INET6, $sk->__sk_common.skc_v6_rcv_saddr.in6_u.u6_addr32);\n  $dport = ntohs($sk->__sk_common.skc_dport);\n  $sport = $sk->__sk_common.skc_num;\n  printf(\"%s:%d -> %s:%d\\n\", $saddr, $sport, $daddr, $dport);\n}", "stdout": "", "stderr": "stdin:7:12-21: ERROR: Unknown function: inet_ntoa\n  $daddr = inet_ntoa($sk->__sk_common.skc_daddr);\n           ~~~~~~~~~\n", "returncode": 1}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN { printf(\"Monitoring system calls... Hit Ctrl-C to end.\\n\"); }\n\ntracepoint:raw_syscalls:sys_enter { @syscall[comm, args->id] = count(); }\n\ninterval:s:1 { printf(\"\\n\"); time(\"%H:%M:%S  \"); print(@syscall); clear(@syscall); }", "stdout": "Attaching 3 probes...\nMonitoring system calls... Hit Ctrl-C to end.\n\n10:51:46  @syscall[bpftrace, 298]: 1\n@syscall[node, 4]: 1\n@syscall[multipathd, 230]: 1\n@syscall[containerd, 1]: 1\n@syscall[node, 39]: 1\n@syscall[HangDetector, 202]: 1\n@syscall[bpftrace, 8]: 1\n@syscall[containerd, 0]: 1\n@syscall[node, 47]: 1\n@syscall[node, 280]: 1\n@syscall[bpftrace, 32]: 1\n@syscall[node, 332]: 1\n@syscall[node, 230]: 1\n@syscall[cpptools, 202]: 2\n@syscall[bpftrace, 262]: 2\n@syscall[bpftrace, 1]: 2\n@syscall[bpftrace, 186]: 2\n@syscall[bpftrace, 33]: 2\n@syscall[node, 62]: 2\n@syscall[bpftrace, 0]: 2\n@syscall[python3, 0]: 2\n@syscall[sshd, 318]: 2\n@syscall[node, 7]: 2\n@syscall[multipathd, 1]: 2\n@syscall[bpftrace, 257]: 2\n@syscall[multipathd, 202]: 3\n@syscall[sshd, 0]: 3\n@syscall[bpftrace, 3]: 3\n@syscall[sshd, 1]: 3\n@syscall[bpftrace, 16]: 3\n@syscall[node, 262]: 5\n@syscall[node, 16]: 5\n@syscall[node, 3]: 6\n@syscall[node, 257]: 6\n@syscall[sshd, 271]: 6\n@syscall[bpftrace, 232]: 11\n@syscall[vmtoolsd, 7]: 11\n@syscall[sshd, 14]: 12\n@syscall[node, 1]: 16\n@syscall[node, 0]: 22\n@syscall[bpftrace, 321]: 26\n@syscall[containerd, 35]: 29\n@syscall[node, 202]: 39\n@syscall[node, 232]: 52\n@syscall[vmtoolsd, 100]: 54\n@syscall[containerd, 202]: 88\n@syscall[containerd, 281]: 89\n\n10:51:47  @syscall[HangDetector, 202]: 1\n@syscall[node, 230]: 1\n@syscall[multipathd, 230]: 1\n@syscall[containerd, 234]: 1\n@syscall[dockerd, 35]: 1\n@syscall[bpftrace, 1]: 1\n@syscall[python3, 0]: 1\n@syscall[bpftrace, 186]: 1\n@syscall[containerd, 39]: 1\n@syscall[containerd, 15]: 1\n@syscall[node, 280]: 1\n@syscall[node, 332]: 1\n@syscall[node, 4]: 1\n@syscall[vmtoolsd, 262]: 2\n@syscall[dockerd, 281]: 2\n@syscall[node, 7]: 2\n@syscall[node, 47]: 2\n@syscall[multipathd, 1]: 2\n@syscall[node, 39]: 3\n@syscall[multipathd, 202]: 3\n@syscall[dockerd, 202]: 3\n@syscall[sshd, 318]: 4\n@syscall[node, 62]: 4\n@syscall[node, 16]: 5\n@syscall[node, 262]: 5\n@syscall[node, 257]: 6\n@syscall[node, 3]: 6\n@syscall[sshd, 0]: 7\n@syscall[sshd, 1]: 7\n@syscall[cpptools, 202]: 9\n@syscall[bpftrace, 232]: 10\n@syscall[vmtoolsd, 7]: 11\n@syscall[sshd, 271]: 14\n@syscall[sshd, 14]: 28\n@syscall[node, 1]: 29\n@syscall[containerd, 35]: 30\n@syscall[node, 0]: 34\n@syscall[vmtoolsd, 100]: 54\n@syscall[bpftrace, 321]: 58\n@syscall[node, 202]: 77\n@syscall[node, 232]: 86\n@syscall[containerd, 202]: 90\n@syscall[containerd, 281]: 99\n\n10:51:48  @syscall[HangDetector, 202]: 1\n@syscall[node, 230]: 1\n@syscall[bpftrace, 1]: 1\n@syscall[containerd, 0]: 1\n@syscall[cpptools, 19]: 1\n@syscall[bpftrace, 186]: 1\n@syscall[node, 4]: 1\n@syscall[containerd, 1]: 1\n@syscall[multipathd, 230]: 1\n@syscall[cpptools, 0]: 1\n@syscall[node, 47]: 1\n@syscall[node, 280]: 1\n@syscall[python3, 0]: 2\n@syscall[sshd, 318]: 2\n@syscall[multipathd, 1]: 2\n@syscall[node, 332]: 2\n@syscall[sshd, 0]: 3\n@syscall[multipathd, 202]: 3\n@syscall[sshd, 1]: 3\n@syscall[node, 7]: 3\n@syscall[node, 39]: 3\n@syscall[node, 62]: 4\n@syscall[node, 16]: 5\n@syscall[node, 262]: 5\n@syscall[cpptools, 202]: 6\n@syscall[sshd, 271]: 6\n@syscall[node, 257]: 7\n@syscall[node, 3]: 7\n@syscall[bpftrace, 232]: 10\n@syscall[vmtoolsd, 7]: 11\n@syscall[sshd, 14]: 12\n@syscall[node, 1]: 19\n@syscall[node, 0]: 24\n@syscall[containerd, 35]: 31\n@syscall[node, 232]: 47\n@syscall[bpftrace, 321]: 51\n@syscall[vmtoolsd, 100]: 54\n@syscall[node, 202]: 64\n@syscall[containerd, 202]: 92\n@syscall[containerd, 281]: 94\n\n10:51:49  @syscall[node, 230]: 1\n@syscall[node, 332]: 1\n@syscall[bpftrace, 1]: 1\n@syscall[node, 280]: 1\n@syscall[node, 47]: 1\n@syscall[bpftrace, 186]: 1\n@syscall[python3, 0]: 1\n@syscall[HangDetector, 202]: 1\n@syscall[node, 39]: 1\n@syscall[node, 4]: 1\n@syscall[multipathd, 230]: 1\n@syscall[node, 62]: 2\n@syscall[containerd, 0]: 2\n@syscall[containerd, 1]: 2\n@syscall[sshd, 318]: 2\n@syscall[node, 7]: 2\n@syscall[multipathd, 1]: 2\n@syscall[multipathd, 202]: 3\n@syscall[sshd, 1]: 3\n@syscall[sshd, 0]: 3\n@syscall[node, 16]: 5\n@syscall[node, 262]: 5\n@syscall[node, 257]: 6\n@syscall[node, 3]: 6\n@syscall[sshd, 271]: 6\n@syscall[cpptools, 202]: 9\n@syscall[bpftrace, 232]: 10\n@syscall[vmtoolsd, 7]: 10\n@syscall[sshd, 14]: 12\n@syscall[node, 1]: 16\n@syscall[node, 0]: 22\n@syscall[containerd, 35]: 29\n@syscall[node, 232]: 40\n@syscall[vmtoolsd, 100]: 49\n@syscall[bpftrace, 321]: 50\n@syscall[node, 202]: 59\n@syscall[containerd, 202]: 88\n@syscall[containerd, 281]: 91\n\n10:51:50  @syscall[node, 230]: 1\n@syscall[systemd, 232]: 1\n@syscall[cpptools, 0]: 1\n@syscall[systemd-timesyn, 41]: 1\n@syscall[python3, 0]: 1\n@syscall[multipathd, 230]: 1\n@syscall[systemd-timesyn, 104]: 1\n@syscall[systemd, 16]: 1\n@syscall[systemd-timesyn, 102]: 1\n@syscall[systemd, 257]: 1\n@syscall[systemd, 47]: 1\n@syscall[systemd, 186]: 1\n@syscall[systemd-timesyn, 262]: 1\n@syscall[node, 4]: 1\n@syscall[bpftrace, 1]: 1\n@syscall[cpptools, 19]: 1\n@syscall[systemd-timesyn, 108]: 1\n@syscall[bpftrace, 186]: 1\n@syscall[node, 39]: 1\n@syscall[systemd, 262]: 1\n@syscall[node, 280]: 1\n@syscall[systemd-timesyn, 107]: 1\n@syscall[node, 47]: 1\n@syscall[systemd-timesyn, 257]: 1\n@syscall[systemd-timesyn, 280]: 1\n@syscall[systemd-timesyn, 232]: 1\n@syscall[HangDetector, 202]: 1\n@syscall[systemd-timesyn, 0]: 1\n@syscall[systemd, 3]: 1\n@syscall[systemd-timesyn, 186]: 1\n@syscall[systemd-timesyn, 46]: 1\n@syscall[containerd, 15]: 2\n@syscall[node, 62]: 2\n@syscall[systemd-timesyn, 55]: 2\n@syscall[containerd, 39]: 2\n@syscall[systemd, 0]: 2\n@syscall[node, 7]: 2\n@syscall[systemd-timesyn, 3]: 2\n@syscall[systemd-timesyn, 286]: 2\n@syscall[systemd-timesyn, 54]: 2\n@syscall[sshd, 318]: 2\n@syscall[node, 332]: 2\n@syscall[containerd, 234]: 2\n@syscall[sshd, 0]: 3\n@syscall[sshd, 1]: 3\n@syscall[multipathd, 1]: 3\n@syscall[containerd, 1]: 3\n@syscall[containerd, 0]: 3\n@syscall[node, 16]: 5\n@syscall[node, 262]: 5\n@syscall[sshd, 271]: 6\n@syscall[cpptools, 202]: 6\n@syscall[node, 3]: 7\n@syscall[node, 257]: 7\n@syscall[multipathd, 202]: 8\n@syscall[bpftrace, 232]: 10\n@syscall[vmtoolsd, 7]: 11\n@syscall[sshd, 14]: 12\n@syscall[node, 1]: 19\n@syscall[node, 0]: 24\n@syscall[containerd, 35]: 32\n@syscall[node, 232]: 44\n@syscall[vmtoolsd, 100]: 54\n@syscall[bpftrace, 321]: 56\n@syscall[node, 202]: 66\n@syscall[containerd, 202]: 90\n@syscall[containerd, 281]: 96\n\n10:51:51  @syscall[systemd-timesyn, 46]: 1\n@syscall[node, 230]: 1\n@syscall[bpftrace, 186]: 1\n@syscall[node, 4]: 1\n@syscall[multipathd, 230]: 1\n@syscall[python3, 0]: 1\n@syscall[systemd-timesyn, 41]: 1\n@syscall[systemd-timesyn, 44]: 1\n@syscall[systemd-timesyn, 47]: 1\n@syscall[systemd-timesyn, 0]: 1\n@syscall[HangDetector, 202]: 1\n@syscall[node, 280]: 1\n@syscall[systemd-timesyn, 305]: 1\n@syscall[node, 332]: 1\n@syscall[dbus-daemon, 232]: 1\n@syscall[systemd-timesyn, 49]: 1\n@syscall[bpftrace, 1]: 1\n@syscall[node, 47]: 1\n@syscall[sshd, 318]: 2\n@syscall[dbus-daemon, 47]: 2\n@syscall[systemd-timesyn, 262]: 2\n@syscall[containerd, 0]: 2\n@syscall[multipathd, 1]: 2\n@syscall[systemd-timesyn, 286]: 2\n@syscall[systemd-timesyn, 280]: 2\n@syscall[systemd-timesyn, 232]: 2\n@syscall[containerd, 1]: 2\n@syscall[systemd-timesyn, 54]: 2\n@syscall[systemd-timesyn, 186]: 2\n@syscall[systemd-timesyn, 257]: 2\n@syscall[systemd-timesyn, 233]: 2\n@syscall[node, 39]: 3\n@syscall[multipathd, 202]: 3\n@syscall[systemd-timesyn, 3]: 3\n@syscall[node, 7]: 3\n@syscall[sshd, 1]: 3\n@syscall[sshd, 0]: 3\n@syscall[node, 62]: 4\n@syscall[node, 16]: 5\n@syscall[node, 262]: 5\n@syscall[node, 257]: 6\n@syscall[node, 3]: 6\n@syscall[sshd, 271]: 6\n@syscall[cpptools, 202]: 9\n@syscall[bpftrace, 232]: 10\n@syscall[vmtoolsd, 7]: 11\n@syscall[sshd, 14]: 12\n@syscall[node, 1]: 16\n@syscall[node, 0]: 22\n@syscall[containerd, 35]: 31\n@syscall[node, 232]: 44\n@syscall[vmtoolsd, 100]: 54\n@syscall[node, 202]: 59\n@syscall[bpftrace, 321]: 81\n@syscall[containerd, 202]: 90\n@syscall[containerd, 281]: 93\n\n10:51:52  @syscall[bpftrace, 186]: 1\n@syscall[node, 4]: 1\n@syscall[multipathd, 230]: 1\n@syscall[containerd, 234]: 1\n@syscall[node, 230]: 1\n@syscall[bpftrace, 1]: 1\n@syscall[HangDetector, 202]: 1\n@syscall[containerd, 15]: 1\n@syscall[containerd, 39]: 1\n@syscall[irqbalance, 7]: 1\n@syscall[node, 280]: 1\n@syscall[node, 332]: 1\n@syscall[node, 7]: 2\n@syscall[vmtoolsd, 262]: 2\n@syscall[irqbalance, 3]: 2\n@syscall[node, 47]: 2\n@syscall[multipathd, 1]: 2\n@syscall[irqbalance, 257]: 2\n@syscall[irqbalance, 262]: 2\n@syscall[cpptools, 202]: 2\n@syscall[node, 39]: 3\n@syscall[sshd, 318]: 4\n@syscall[node, 62]: 4\n@syscall[containerd, 1]: 5\n@syscall[node, 16]: 5\n@syscall[containerd, 0]: 5\n@syscall[node, 262]: 5\n@syscall[multipathd, 202]: 6\n@syscall[node, 257]: 6\n@syscall[node, 3]: 6\n@syscall[sshd, 0]: 7\n@syscall[sshd, 1]: 7\n@syscall[irqbalance, 0]: 7\n@syscall[bpftrace, 232]: 10\n@syscall[vmtoolsd, 7]: 11\n@syscall[sshd, 271]: 12\n@syscall[sshd, 14]: 24\n@syscall[node, 1]: 29\n@syscall[containerd, 35]: 30\n@syscall[node, 0]: 34\n@syscall[vmtoolsd, 100]: 54\n@syscall[node, 232]: 70\n@syscall[bpftrace, 321]: 72\n@syscall[containerd, 202]: 86\n@syscall[containerd, 281]: 92\n@syscall[node, 202]: 109\n\n10:51:53  @syscall[node, 39]: 1\n@syscall[node, 230]: 1\n@syscall[bpftrace, 1]: 1\n@syscall[cpptools, 19]: 1\n@syscall[bpftrace, 186]: 1\n@syscall[node, 4]: 1\n@syscall[multipathd, 230]: 1\n@syscall[containerd, 234]: 1\n@syscall[HangDetector, 202]: 1\n@syscall[cpptools, 0]: 1\n@syscall[containerd, 15]: 1\n@syscall[containerd, 39]: 1\n@syscall[node, 47]: 1\n@syscall[node, 280]: 1\n@syscall[python3, 0]: 2\n@syscall[sshd, 318]: 2\n@syscall[multipathd, 1]: 2\n@syscall[node, 332]: 2\n@syscall[node, 62]: 2\n@syscall[sshd, 0]: 3\n@syscall[multipathd, 202]: 3\n@syscall[sshd, 1]: 3\n@syscall[node, 7]: 3\n@syscall[containerd, 0]: 4\n@syscall[containerd, 1]: 4\n@syscall[node, 16]: 5\n@syscall[node, 262]: 5\n@syscall[sshd, 271]: 6\n@syscall[node, 3]: 7\n@syscall[node, 257]: 7\n@syscall[bpftrace, 232]: 10\n@syscall[vmtoolsd, 7]: 11\n@syscall[sshd, 14]: 12\n@syscall[cpptools, 202]: 13\n@syscall[node, 1]: 19\n@syscall[node, 0]: 24\n@syscall[containerd, 35]: 31\n@syscall[node, 232]: 43\n@syscall[bpftrace, 321]: 53\n@syscall[vmtoolsd, 100]: 54\n@syscall[node, 202]: 68\n@syscall[containerd, 202]: 92\n@syscall[containerd, 281]: 102\n\n10:51:54  @syscall[node, 230]: 1\n@syscall[node, 332]: 1\n@syscall[bpftrace, 1]: 1\n@syscall[node, 280]: 1\n@syscall[node, 47]: 1\n@syscall[bpftrace, 186]: 1\n@syscall[node, 4]: 1\n@syscall[python3, 0]: 1\n@syscall[HangDetector, 202]: 1\n@syscall[multipathd, 230]: 1\n@syscall[cpptools, 202]: 2\n@syscall[sshd, 318]: 2\n@syscall[node, 7]: 2\n@syscall[multipathd, 1]: 2\n@syscall[multipathd, 202]: 3\n@syscall[sshd, 1]: 3\n@syscall[sshd, 0]: 3\n@syscall[node, 39]: 3\n@syscall[node, 62]: 4\n@syscall[node, 16]: 5\n@syscall[node, 262]: 5\n@syscall[node, 257]: 6\n@syscall[sshd, 271]: 6\n@syscall[node, 3]: 6\n@syscall[bpftrace, 232]: 10\n@syscall[vmtoolsd, 7]: 10\n@syscall[sshd, 14]: 12\n@syscall[node, 1]: 16\n@syscall[node, 0]: 22\n@syscall[containerd, 35]: 30\n@syscall[node, 232]: 42\n@syscall[vmtoolsd, 100]: 49\n@syscall[bpftrace, 321]: 52\n@syscall[node, 202]: 63\n@syscall[containerd, 202]: 90\n@syscall[containerd, 281]: 93\n\n10:51:55  @syscall[bpftrace, 1]: 1\n@syscall[node, 230]: 1\n@syscall[node, 280]: 1\n@syscall[cpptools, 19]: 1\n@syscall[node, 47]: 1\n@syscall[bpftrace, 186]: 1\n@syscall[node, 4]: 1\n@syscall[cpptools, 0]: 1\n@syscall[HangDetector, 202]: 1\n@syscall[multipathd, 230]: 1\n@syscall[node, 39]: 1\n@syscall[python3, 0]: 1\n@syscall[snapd, 281]: 2\n@syscall[node, 62]: 2\n@syscall[sshd, 318]: 2\n@syscall[node, 7]: 2\n@syscall[snapd, 35]: 2\n@syscall[multipathd, 1]: 2\n@syscall[node, 332]: 2\n@syscall[sshd, 0]: 3\n@syscall[multipathd, 202]: 3\n@syscall[sshd, 1]: 3\n@syscall[node, 16]: 5\n@syscall[node, 262]: 5\n@syscall[sshd, 271]: 6\n@syscall[node, 3]: 7\n@syscall[node, 257]: 7\n@syscall[snapd, 202]: 9\n@syscall[bpftrace, 232]: 10\n@syscall[vmtoolsd, 7]: 11\n@syscall[sshd, 14]: 12\n@syscall[cpptools, 202]: 13\n@syscall[node, 1]: 19\n@syscall[node, 0]: 24\n@syscall[containerd, 35]: 30\n@syscall[node, 232]: 41\n@syscall[bpftrace, 321]: 48\n@syscall[vmtoolsd, 100]: 54\n@syscall[node, 202]: 68\n@syscall[containerd, 202]: 90\n@syscall[containerd, 281]: 92\n\n10:51:56  @syscall[node, 332]: 1\n@syscall[node, 280]: 1\n@syscall[node, 230]: 1\n@syscall[node, 47]: 1\n@syscall[python3, 0]: 1\n@syscall[multipathd, 230]: 1\n@syscall[node, 4]: 1\n@syscall[HangDetector, 202]: 1\n@syscall[bpftrace, 1]: 1\n@syscall[bpftrace, 186]: 1\n@syscall[cpptools, 202]: 2\n@syscall[node, 62]: 2\n@syscall[node, 39]: 2\n@syscall[sshd, 318]: 2\n@syscall[multipathd, 202]: 3\n@syscall[sshd, 1]: 3\n@syscall[sshd, 0]: 3\n@syscall[multipathd, 1]: 3\n@syscall[node, 7]: 3\n@syscall[node, 16]: 5\n@syscall[node, 262]: 5\n@syscall[node, 3]: 6\n@syscall[sshd, 271]: 6\n@syscall[node, 257]: 6\n@syscall[bpftrace, 232]: 10\n@syscall[vmtoolsd, 7]: 11\n@syscall[node, 28]: 12\n@syscall[sshd, 14]: 12\n@syscall[node, 1]: 17\n@syscall[node, 0]: 22\n@syscall[node, 10]: 24\n@syscall[containerd, 35]: 30\n@syscall[node, 232]: 45\n@syscall[bpftrace, 321]: 50\n@syscall[vmtoolsd, 100]: 54\n@syscall[node, 202]: 86\n@syscall[containerd, 202]: 89\n@syscall[containerd, 281]: 90\n\n10:51:57  @syscall[dockerd, 0]: 1\n@syscall[node, 4]: 1\n@syscall[dockerd, 1]: 1\n@syscall[bpftrace, 186]: 1\n@syscall[bpftrace, 1]: 1\n@syscall[multipathd, 230]: 1\n@syscall[vmtoolsd, 41]: 1\n@syscall[node, 230]: 1\n@syscall[python3, 0]: 1\n@syscall[dockerd, 35]: 1\n@syscall[vmtoolsd, 3]: 1\n@syscall[HangDetector, 202]: 1\n@syscall[vmtoolsd, 51]: 1\n@syscall[node, 332]: 1\n@syscall[node, 280]: 1\n@syscall[vmtoolsd, 49]: 1\n@syscall[vmtoolsd, 45]: 2\n@syscall[multipathd, 1]: 2\n@syscall[vmtoolsd, 262]: 2\n@syscall[node, 47]: 2\n@syscall[node, 7]: 2\n@syscall[dockerd, 202]: 3\n@syscall[multipathd, 202]: 3\n@syscall[vmtoolsd, 44]: 3\n@syscall[sshd, 318]: 4\n@syscall[node, 262]: 5\n@syscall[node, 16]: 5\n@syscall[dockerd, 281]: 5\n@syscall[node, 39]: 5\n@syscall[node, 62]: 6\n@syscall[vmtoolsd, 47]: 6\n@syscall[node, 257]: 6\n@syscall[node, 3]: 6\n@syscall[sshd, 1]: 7\n@syscall[sshd, 0]: 7\n@syscall[cpptools, 202]: 9\n@syscall[bpftrace, 232]: 10\n@syscall[sshd, 271]: 14\n@syscall[vmtoolsd, 7]: 14\n@syscall[sshd, 14]: 28\n@syscall[node, 1]: 29\n@syscall[containerd, 35]: 30\n@syscall[node, 0]: 34\n@syscall[bpftrace, 321]: 56\n@syscall[vmtoolsd, 100]: 72\n@syscall[node, 232]: 75\n@syscall[containerd, 202]: 90\n@syscall[containerd, 281]: 91\n@syscall[node, 202]: 105\n\n10:51:58  @syscall[bpftrace, 1]: 1\n@syscall[node, 230]: 1\n@syscall[node, 280]: 1\n@syscall[node, 47]: 1\n@syscall[cpptools, 19]: 1\n@syscall[bpftrace, 186]: 1\n@syscall[cpptools, 0]: 1\n@syscall[HangDetector, 202]: 1\n@syscall[node, 39]: 1\n@syscall[python3, 0]: 1\n@syscall[multipathd, 230]: 1\n@syscall[node, 4]: 1\n@syscall[containerd, 1]: 2\n@syscall[node, 62]: 2\n@syscall[containerd, 0]: 2\n@syscall[sshd, 318]: 2\n@syscall[node, 7]: 2\n@syscall[multipathd, 1]: 2\n@syscall[node, 332]: 2\n@syscall[multipathd, 202]: 3\n@syscall[sshd, 0]: 3\n@syscall[sshd, 1]: 3\n@syscall[node, 16]: 5\n@syscall[node, 262]: 5\n@syscall[cpptools, 202]: 6\n@syscall[sshd, 271]: 6\n@syscall[node, 3]: 7\n@syscall[node, 257]: 7\n@syscall[bpftrace, 232]: 10\n@syscall[vmtoolsd, 7]: 11\n@syscall[sshd, 14]: 12\n@syscall[node, 1]: 19\n@syscall[node, 0]: 24\n@syscall[containerd, 35]: 30\n@syscall[node, 232]: 45\n@syscall[vmtoolsd, 100]: 54\n@syscall[bpftrace, 321]: 55\n@syscall[node, 202]: 62\n@syscall[containerd, 202]: 92\n@syscall[containerd, 281]: 97\n\n10:51:59  @syscall[node, 230]: 1\n@syscall[node, 332]: 1\n@syscall[bpftrace, 1]: 1\n@syscall[node, 280]: 1\n@syscall[node, 47]: 1\n@syscall[bpftrace, 186]: 1\n@syscall[python3, 0]: 1\n@syscall[multipathd, 230]: 1\n@syscall[HangDetector, 202]: 1\n@syscall[node, 39]: 1\n@syscall[node, 4]: 1\n@syscall[node, 62]: 2\n@syscall[sshd, 318]: 2\n@syscall[multipathd, 1]: 2\n@syscall[multipathd, 202]: 3\n@syscall[sshd, 1]: 3\n@syscall[sshd, 0]: 3\n@syscall[node, 7]: 3\n@syscall[node, 16]: 4\n@syscall[node, 262]: 4\n@syscall[node, 3]: 5\n@syscall[node, 257]: 5\n@syscall[sshd, 271]: 6\n@syscall[cpptools, 202]: 9\n@syscall[bpftrace, 232]: 10\n@syscall[sshd, 14]: 12\n@syscall[vmtoolsd, 7]: 13\n@syscall[node, 1]: 16\n@syscall[node, 0]: 21\n@syscall[containerd, 35]: 29\n@syscall[node, 232]: 41\n@syscall[bpftrace, 321]: 50\n@syscall[node, 202]: 57\n@syscall[vmtoolsd, 100]: 68\n@syscall[containerd, 202]: 88\n@syscall[containerd, 281]: 89\n\n10:52:00  @syscall[HangDetector, 202]: 1\n@syscall[node, 230]: 1\n@syscall[bpftrace, 1]: 1\n@syscall[containerd, 0]: 1\n@syscall[cpptools, 19]: 1\n@syscall[bpftrace, 186]: 1\n@syscall[node, 4]: 1\n@syscall[containerd, 1]: 1\n@syscall[multipathd, 230]: 1\n@syscall[python3, 0]: 1\n@syscall[cpptools, 0]: 1\n@syscall[node, 47]: 1\n@syscall[node, 280]: 1\n@syscall[sshd, 318]: 2\n@syscall[multipathd, 1]: 2\n@syscall[node, 332]: 2\n@syscall[sshd, 0]: 3\n@syscall[multipathd, 202]: 3\n@syscall[sshd, 1]: 3\n@syscall[node, 7]: 3\n@syscall[node, 39]: 3\n@syscall[node, 62]: 4\n@syscall[node, 16]: 5\n@syscall[node, 262]: 5\n@syscall[cpptools, 202]: 6\n@syscall[sshd, 271]: 6\n@syscall[node, 257]: 7\n@syscall[node, 3]: 7\n@syscall[bpftrace, 232]: 10\n@syscall[vmtoolsd, 7]: 11\n@syscall[sshd, 14]: 12\n@syscall[node, 1]: 19\n@syscall[node, 0]: 24\n@syscall[containerd, 35]: 30\n@syscall[bpftrace, 321]: 46\n@syscall[node, 232]: 52\n@syscall[vmtoolsd, 100]: 54\n@syscall[node, 202]: 61\n@syscall[containerd, 202]: 90\n@syscall[containerd, 281]: 91\n\n10:52:01  @syscall[node, 230]: 1\n@syscall[node, 332]: 1\n@syscall[bpftrace, 1]: 1\n@syscall[node, 280]: 1\n@syscall[node, 47]: 1\n@syscall[bpftrace, 186]: 1\n@syscall[node, 4]: 1\n@syscall[multipathd, 230]: 1\n@syscall[HangDetector, 202]: 1\n@syscall[node, 39]: 1\n@syscall[node, 62]: 2\n@syscall[python3, 0]: 2\n@syscall[sshd, 318]: 2\n@syscall[node, 7]: 2\n@syscall[multipathd, 1]: 2\n@syscall[multipathd, 202]: 3\n@syscall[sshd, 1]: 3\n@syscall[sshd, 0]: 3\n@syscall[node, 16]: 5\n@syscall[node, 262]: 5\n@syscall[node, 257]: 6\n@syscall[node, 3]: 6\n@syscall[sshd, 271]: 6\n@syscall[cpptools, 202]: 9\n@syscall[bpftrace, 232]: 10\n@syscall[vmtoolsd, 7]: 11\n@syscall[sshd, 14]: 12\n@syscall[node, 1]: 16\n@syscall[node, 0]: 22\n@syscall[containerd, 35]: 32\n@syscall[node, 232]: 46\n@syscall[bpftrace, 321]: 50\n@syscall[vmtoolsd, 100]: 54\n@syscall[node, 202]: 55\n@syscall[containerd, 281]: 93\n@syscall[containerd, 202]: 102\n\n10:52:02  @syscall[cron, 230]: 1\n@syscall[bpftrace, 186]: 1\n@syscall[HangDetector, 202]: 1\n@syscall[python3, 0]: 1\n@syscall[containerd, 15]: 1\n@syscall[bpftrace, 1]: 1\n@syscall[containerd, 234]: 1\n@syscall[containerd, 39]: 1\n@syscall[multipathd, 230]: 1\n@syscall[irqbalance, 7]: 1\n@syscall[vmtoolsd, 44]: 1\n@syscall[node, 280]: 1\n@syscall[node, 4]: 1\n@syscall[node, 332]: 1\n@syscall[node, 230]: 1\n@syscall[cpptools, 202]: 2\n@syscall[irqbalance, 262]: 2\n@syscall[irqbalance, 257]: 2\n@syscall[irqbalance, 3]: 2\n@syscall[vmtoolsd, 45]: 2\n@syscall[node, 7]: 2\n@syscall[node, 47]: 2\n@syscall[node, 39]: 3\n@syscall[multipathd, 1]: 3\n@syscall[multipathd, 202]: 3\n@syscall[sshd, 318]: 4\n@syscall[node, 62]: 4\n@syscall[containerd, 1]: 5\n@syscall[node, 262]: 5\n@syscall[containerd, 0]: 5\n@syscall[node, 16]: 5\n@syscall[cron, 262]: 5\n@syscall[node, 257]: 6\n@syscall[vmtoolsd, 3]: 6\n@syscall[vmtoolsd, 257]: 6\n@syscall[node, 3]: 6\n@syscall[sshd, 1]: 7\n@syscall[sshd, 0]: 7\n@syscall[irqbalance, 0]: 7\n@syscall[vmtoolsd, 262]: 8\n@syscall[bpftrace, 232]: 10\n@syscall[vmtoolsd, 7]: 12\n@syscall[sshd, 271]: 14\n@syscall[vmtoolsd, 21]: 15\n@syscall[vmtoolsd, 0]: 22\n@syscall[sshd, 14]: 28\n@syscall[node, 1]: 29\n@syscall[containerd, 35]: 32\n@syscall[node, 0]: 34\n@syscall[vmtoolsd, 100]: 58\n@syscall[bpftrace, 321]: 60\n@syscall[node, 232]: 80\n@syscall[containerd, 202]: 92\n@syscall[node, 202]: 93\n@syscall[containerd, 281]: 97\n\n10:52:03  @syscall[HangDetector, 202]: 1\n@syscall[node, 230]: 1\n@syscall[bpftrace, 1]: 1\n@syscall[cpptools, 19]: 1\n@syscall[bpftrace, 186]: 1\n@syscall[node, 4]: 1\n@syscall[multipathd, 230]: 1\n@syscall[python3, 0]: 1\n@syscall[cpptools, 0]: 1\n@syscall[node, 47]: 1\n@syscall[node, 280]: 1\n@syscall[sshd, 318]: 2\n@syscall[containerd, 1]: 2\n@syscall[multipathd, 1]: 2\n@syscall[containerd, 0]: 2\n@syscall[node, 332]: 2\n@syscall[sshd, 0]: 3\n@syscall[multipathd, 202]: 3\n@syscall[sshd, 1]: 3\n@syscall[node, 7]: 3\n@syscall[node, 39]: 3\n@syscall[node, 62]: 4\n@syscall[node, 16]: 5\n@syscall[node, 262]: 5\n@syscall[sshd, 271]: 6\n@syscall[node, 3]: 7\n@syscall[node, 257]: 7\n@syscall[bpftrace, 232]: 10\n@syscall[vmtoolsd, 7]: 10\n@syscall[sshd, 14]: 12\n@syscall[cpptools, 202]: 13\n@syscall[node, 1]: 19\n@syscall[node, 0]: 24\n@syscall[containerd, 35]: 30\n@syscall[vmtoolsd, 100]: 49\n@syscall[node, 232]: 52\n@syscall[bpftrace, 321]: 58\n@syscall[node, 202]: 58\n@syscall[containerd, 202]: 92\n@syscall[containerd, 281]: 93\n\n10:52:04  @syscall[HangDetector, 202]: 1\n@syscall[node, 230]: 1\n@syscall[bpftrace, 1]: 1\n@syscall[bpftrace, 186]: 1\n@syscall[node, 4]: 1\n@syscall[multipathd, 230]: 1\n@syscall[node, 39]: 1\n@syscall[python3, 0]: 1\n@syscall[node, 47]: 1\n@syscall[node, 280]: 1\n@syscall[node, 332]: 1\n@syscall[sshd, 318]: 2\n@syscall[node, 7]: 2\n@syscall[multipathd, 1]: 2\n@syscall[cpptools, 202]: 2\n@syscall[node, 62]: 2\n@syscall[sshd, 0]: 3\n@syscall[multipathd, 202]: 3\n@syscall[sshd, 1]: 3\n@syscall[node, 16]: 5\n@syscall[node, 262]: 5\n@syscall[node, 3]: 6\n@syscall[sshd, 271]: 6\n@syscall[node, 257]: 6\n@syscall[bpftrace, 232]: 10\n@syscall[vmtoolsd, 7]: 11\n@syscall[sshd, 14]: 12\n@syscall[node, 1]: 16\n@syscall[node, 0]: 22\n@syscall[containerd, 35]: 30\n@syscall[node, 232]: 42\n@syscall[bpftrace, 321]: 50\n@syscall[vmtoolsd, 100]: 54\n@syscall[node, 202]: 55\n@syscall[containerd, 202]: 90\n@syscall[containerd, 281]: 92\n\n\n@syscall[containerd, 1]: 1\n@syscall[cpptools, 202]: 1\n@syscall[containerd, 0]: 1\n@syscall[bpftrace, 16]: 1\n@syscall[bpftrace, 15]: 1\n@syscall[timeout, 130]: 1\n@syscall[timeout, 15]: 1\n@syscall[bpftrace, 3]: 1\n@syscall[HangDetector, 202]: 1\n@syscall[multipathd, 230]: 1\n@syscall[timeout, 61]: 1\n@syscall[containerd, 15]: 1\n@syscall[containerd, 234]: 1\n@syscall[node, 7]: 1\n@syscall[python3, 0]: 1\n@syscall[containerd, 39]: 1\n@syscall[timeout, 13]: 2\n@syscall[node, 257]: 2\n@syscall[node, 16]: 2\n@syscall[node, 262]: 2\n@syscall[node, 0]: 2\n@syscall[multipathd, 1]: 2\n@syscall[node, 3]: 2\n@syscall[multipathd, 202]: 3\n@syscall[timeout, 62]: 4\n@syscall[node, 232]: 4\n@syscall[bpftrace, 232]: 5\n@syscall[vmtoolsd, 7]: 5\n@syscall[containerd, 35]: 15\n@syscall[vmtoolsd, 100]: 25\n@syscall[bpftrace, 321]: 27\n@syscall[containerd, 202]: 42\n@syscall[containerd, 281]: 44\n", "stderr": "", "returncode": 0}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN { printf(\"Tracing syscalls... Hit Ctrl-C to end.\\n\"); } tracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { time(); print(@); clear(@); } END { clear(@); }", "stdout": "Attaching 4 probes...\nTracing syscalls... Hit Ctrl-C to end.\n10:52:12\n@: 913\n10:52:13\n@: 537\n10:52:14\n@: 529\n10:52:15\n@: 538\n10:52:16\n@: 495\n10:52:17\n@: 673\n10:52:18\n@: 582\n10:52:19\n@: 502\n10:52:20\n@: 515\n10:52:21\n@: 511\n10:52:22\n@: 735\n10:52:23\n@: 534\n10:52:24\n@: 506\n10:52:25\n@: 639\n10:52:26\n@: 503\n10:52:27\n@: 1794\n10:52:28\n@: 2770\n10:52:29\n@: 1483\n10:52:30\n@: 3564\n\n\n@: 0\n", "stderr": "", "returncode": 0}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e #include <net/sock.h>\n\nBEGIN\n{\n  printf(\"Tracing socket operations. Hit Ctrl-C to end.\\n\");\n  printf(\"%-8s %-6s %-14s %-6s\\n\", \"TIME\", \"PID\", \"COMM\", \"SOCK_TYPE\");\n}\n\nkprobe:sock_init_data\n{\n  $sock = (struct sock *)arg0;\n  $type = $sock->__sk_common.skc_type;\n\n  time(\"%H:%M:%S \");\n  printf(\"%-6d %-14s %-6d\\n\", pid, comm, $type);\n}", "stdout": "", "stderr": "stdin:12:11-30: ERROR: Struct/union of type 'struct sock_common' does not contain a field named 'skc_type'\n  $type = $sock->__sk_common.skc_type;\n          ~~~~~~~~~~~~~~~~~~~\n", "returncode": 1}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN { printf(\"Tracing file read and write events... Hit Ctrl-C to end.\\n\"); }\n\ntracepoint:syscalls:sys_enter_read, tracepoint:syscalls:sys_enter_write { @bytes[str(args->filename)] = hist(args->size); }\n\nEND { printf(\"\\nI/O size (bytes) histograms by file name:\"); }", "stdout": "", "stderr": "stdin:3:75-100: ERROR: Struct/union of type 'struct _tracepoint_syscalls_sys_enter_read' does not contain a field named 'filename'\ntracepoint:syscalls:sys_enter_read, tracepoint:syscalls:sys_enter_write { @bytes[str(args->filename)] = hist(args->size); }\n                                                                          ~~~~~~~~~~~~~~~~~~~~~~~~~\nstdin:3:75-100: ERROR: Struct/union of type 'struct _tracepoint_syscalls_sys_enter_write' does not contain a field named 'filename'\ntracepoint:syscalls:sys_enter_read, tracepoint:syscalls:sys_enter_write { @bytes[str(args->filename)] = hist(args->size); }\n                                                                          ~~~~~~~~~~~~~~~~~~~~~~~~~\nstdin:3:75-101: ERROR: str() expects an integer or a pointer type as first argument (none provided)\ntracepoint:syscalls:sys_enter_read, tracepoint:syscalls:sys_enter_write { @bytes[str(args->filename)] = hist(args->size); }\n                                                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~\nstdin:3:105-120: ERROR: Struct/union of type 'struct _tracepoint_syscalls_sys_enter_read' does not contain a field named 'size'\ntracepoint:syscalls:sys_enter_read, tracepoint:syscalls:sys_enter_write { @bytes[str(args->filename)] = hist(args->size); }\n                                                                                                        ~~~~~~~~~~~~~~~\nstdin:3:105-120: ERROR: Struct/union of type 'struct _tracepoint_syscalls_sys_enter_write' does not contain a field named 'size'\ntracepoint:syscalls:sys_enter_read, tracepoint:syscalls:sys_enter_write { @bytes[str(args->filename)] = hist(args->size); }\n                                                                                                        ~~~~~~~~~~~~~~~\n", "returncode": 1}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter_read /args->fd/ { @read[comm] = sum(args->count); } tracepoint:syscalls:sys_enter_write /args->fd/ { @write[comm] = sum(args->count); } interval:s:1 { printf(\"Read bytes by process:\n\"); print(@read); clear(@read); printf(\"Write bytes by process:\n\"); print(@write); clear(@write); }", "stdout": "", "stderr": "stdin:1:182-213: ERROR: unterminated string\ntracepoint:syscalls:sys_enter_read /args->fd/ { @read[comm] = sum(args->count); } tracepoint:syscalls:sys_enter_write /args->fd/ { @write[comm] = sum(args->count); } interval:s:1 { printf(\"Read bytes by process:\n                                                                                                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nstdin:2:1-46: ERROR: syntax error, unexpected identifier, expecting ) or \",\"\n\"); print(@read); clear(@read); printf(\"Write bytes by process:\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n", "returncode": 1}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:copy_net_ns { printf(\"Network namespace created: %d\\n\", arg0); }\nkprobe:free_netdev { printf(\"Network namespace deleted: %d\\n\", arg0); }", "stdout": "Attaching 2 probes...\n\n\n", "stderr": "", "returncode": 0}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter_open, tracepoint:syscalls:sys_enter_openat { printf(\"%s opened file %s\n\", comm, str(args->filename)); }", "stdout": "", "stderr": "stdin:1:76-102: ERROR: unterminated string\ntracepoint:syscalls:sys_enter_open, tracepoint:syscalls:sys_enter_openat { printf(\"%s opened file %s\n                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~\nstdin:2:1-33: ERROR: unterminated string\n\", comm, str(args->filename)); }\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nstdin:2:1-33: ERROR: syntax error, unexpected end of file\n\", comm, str(args->filename)); }\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n", "returncode": 1}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e hardware:cache-misses:1000000 { @[comm] = count(); }", "stdout": "Attaching 1 probe...\n", "stderr": "perf_event_open failed: No such file or directory\nERROR: Error attaching probe: hardware:cache-misses:1000000\n", "returncode": 0}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e software:faults:1 { @[comm] = count(); }", "stdout": "Attaching 1 probe...\n\n\n@[timeout]: 3\n@[node]: 1096\n", "stderr": "", "returncode": 0}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN\n{\n\tprintf(\"Tracing bash commands and their exit codes... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-9s %-6s %-6s %s\\n\", \"TIME\", \"PID\", \"EXIT\", \"COMMAND\");\n}\n\nuretprobe:/bin/bash:readline\n{\n\t@command[pid] = str(retval);\n}\n\ntracepoint:syscalls:sys_exit_execve\n{\n\tif (@command[pid]) {\n\t\ttime(\"%H:%M:%S  \");\n\t\tprintf(\"%-6d %-6d %s\\n\", pid, args->ret, @command[pid]);\n\t\tdelete(@command[pid]);\n\t}\n}", "stdout": "", "stderr": "stdin:1:1-1: ERROR: Invalid condition in if(): string\nBEGIN\n\n", "returncode": 1}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e #include <linux/dcache.h>\n#include <linux/sched.h>\n\nBEGIN\n{\n  printf(\"Tracing dcache lookups... Hit Ctrl-C to end.\\n\");\n  printf(\"%-8s %-6s %-16s %s\\n\", \"TIME\", \"PID\", \"COMM\", \"FILE\");\n}\n\nkprobe:lookup_fast,\nkprobe:lookup_fast.constprop.*\n{\n  $nd = (struct nameidata *)arg0;\n  printf(\"%-8d %-6d %-16s %s\\n\", elapsed / 1e6, pid, comm, str($nd->last.name));\n}\n\nkprobe:d_lookup\n{\n  $name = (struct qstr *)arg1;\n  @fname[tid] = $name->name;\n}\n\nkretprobe:d_lookup\n/@fname[tid]/\n{\n  printf(\"%-8d %-6d %-16s %s\\n\", elapsed / 1e6, pid, comm, str(@fname[tid]));\n  delete(@fname[tid]);\n}", "stdout": "Attaching 4 probes...\nTracing dcache lookups... Hit Ctrl-C to end.\nTIME     PID    COMM             FILE\n95       1648   node             proc/16490/cmdline\n104      1648   node             16490/cmdline\n104      1648   node             cmdline\n296      1648   node             proc/16490/cmdline\n314      1648   node             16490/cmdline\n314      1648   node             cmdline\n474      1624   node             proc/meminfo\n474      1624   node             meminfo\n474      1624   node             home/yunwei/.vscode/c_cpp_properties.json\n474      1624   node             yunwei/.vscode/c_cpp_properties.json\n474      1624   node             .vscode/c_cpp_properties.json\n474      1624   node             c_cpp_properties.json\n497      1648   node             proc/16490/cmdline\n506      1648   node             16490/cmdline\n506      1648   node             cmdline\n563      1624   node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n563      1624   node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n563      1624   node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n563      1624   node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n563      1624   node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n563      1624   node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n563      1624   node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n563      1624   node             vscode.lock\n563      1624   node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n563      1624   node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n563      1624   node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n563      1624   node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n563      1624   node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n563      1624   node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n563      1624   node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n563      1624   node             vscode.lock\n563      1635   node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n563      1635   node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n563      1635   node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n563      1635  683061573fc2bafa947b4d87342b0cd1/vscode.lock\n17593    1624   node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n17593    1624   node             vscode.lock\n17593    1624   node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n17593    1624   node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n17593    1624   node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n17593    1624   node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n17593    1624   node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n17593    1624   node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n17593    1624   node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n17593    1624   node             vscode.lock\n17593    1635   node             home/yunwei/.vscode-server/data/User/workspaceStorage/683061573\n17593    1635   node             yunwei/.vscode-server/data/User/workspaceStorage/683061573fc2ba\n17593    1635   node             .vscode-server/data/User/workspaceStorage/683061573fc2bafa947b4\n17593    1635   node             data/User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vsc\n17593    1635   node             User/workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.l\n17593    1635   node             workspaceStorage/683061573fc2bafa947b4d87342b0cd1/vscode.lock\n17593    1635   node             683061573fc2bafa947b4d87342b0cd1/vscode.lock\n17593    1635   node             vscode.lock\n17642    1648   node             proc/16490/cmdline\n17642    1648   node             16490/cmdline\n17642    1648   node             cmdline\n17845    1648   node             proc/16490/cmdline\n17845    1648   node             16490/cmdline\n17845    1648   node             cmdline\n17986    1624   node             proc/meminfo\n17986    1624   node             meminfo\n17986    1624   node             home/yunwei/.vscode/c_cpp_properties.json\n17986    1624   node             yunwei/.vscode/c_cpp_properties.json\n17986    1624   node             .vscode/c_cpp_properties.json\n17986    1624   node             c_cpp_properties.json\n18047    1648   node             proc/16490/cmdline\n18047    1648   node             16490/cmdline\n18047    1648   node             cmdline\n18247    1648   node             proc/16490/cmdline\n18247    1648   node             16490/cmdline\n18247    1648   node             cmdline\n18448    1648   node             proc/16490/cmdline\n18448    1648   node             16490/cmdline\n18448    1648   node             cmdline\n18495    17075  bpftrace         sys/kernel/debug/tracing\n18495    17075  bpftrace         kernel/debug/tracing\n18495    17075  bpftrace         debug/tracing\n18495    17075  bpftrace         tracing\n18495    17075  bpftrace         sys/kernel/debug/tracing/kprobe_events\n18495    17075  bpftrace         kernel/debug/tracing/kprobe_events\n18495    17075  bpftrace         debug/tracing/kprobe_events\n18495    17075  bpftrace         tracing/kprobe_events\n18495    17075  bpftrace         kprobe_events\n18533    17075  bpftrace         sys/kernel/debug/tracing\n18533    17075  bpftrace         kernel/debug/tracing\n18533    17075  bpftrace         debug/tracing\n18533    17075  bpftrace         tracing\n18533    17075  bpftrace         sys/kernel/debug/tracing/kprobe_events\n18533    17075  bpftrace         kernel/debug/tracing/kprobe_events\n18533    17075  bpftrace         debug/tracing/kprobe_events\n18533    17075  bpftrace         tracing/kprobe_events\n18533    17075  bpftrace         kprobe_events\n\n\n\n", "stderr": "", "returncode": 0}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e #include <linux/genhd.h>\n#include <linux/bio.h>\n\nBEGIN\n{\n  printf(\"Tracing md flush events... Hit Ctrl-C to end.\\n\");\n  printf(\"%-8s %-6s %-16s %s\\n\", \"TIME\", \"PID\", \"COMM\", \"DEVICE\");\n}\n\nkprobe:md_flush_request\n{\n  time(\"%H:%M:%S \");\n  printf(\"%-6d %-16s %s\\n\", pid, comm,\n      ((struct bio *)arg1)->bi_bdev->bd_disk->disk_name);\n}", "stdout": "", "stderr": "definitions.h:2:10: fatal error: 'linux/genhd.h' file not found\n", "returncode": 1}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e #include <linux/sched.h>\n\nBEGIN\n{\n\tprintf(\"Tracing CPU scheduler... Hit Ctrl-C to end.\\n\");\n}\n\ntracepoint:sched:sched_wakeup,\ntracepoint:sched:sched_wakeup_new\n{\n\t@qtime[args.pid] = nsecs;\n}\n\ntracepoint:sched:sched_switch\n{\n\tif (args.prev_state == TASK_RUNNING) {\n\t\t@qtime[args.prev_pid] = nsecs;\n\t}\n\n\t$ns = @qtime[args.next_pid];\n\tif ($ns) {\n\t\t@usecs = hist((nsecs - $ns) / 1000);\n\t}\n\tdelete(@qtime[args.next_pid]);\n}\n\nEND\n{\n\tclear(@qtime);\n}", "stdout": "", "stderr": "stdin:11:2-14: ERROR: Can not access field 'pid' on type '(ctx) struct _tracepoint_sched_sched_wakeup_new *'. Try dereferencing it first, or using '->'\n    @qtime[args.pid] = nsecs;\n    ~~~~~~~~~~~~\nstdin:16:5-11: ERROR: Can not access field 'prev_state' on type '(ctx) struct _tracepoint_sched_sched_switch *'. Try dereferencing it first, or using '->'\n    if (args.prev_state == TASK_RUNNING) {\n       ~~~~~~\nstdin:17:3-15: ERROR: Can not access field 'prev_pid' on type '(ctx) struct _tracepoint_sched_sched_switch *'. Try dereferencing it first, or using '->'\n        @qtime[args.prev_pid] = nsecs;\n        ~~~~~~~~~~~~\nstdin:20:8-20: ERROR: Can not access field 'next_pid' on type '(ctx) struct _tracepoint_sched_sched_switch *'. Try dereferencing it first, or using '->'\n    $ns = @qtime[args.next_pid];\n          ~~~~~~~~~~~~\nstdin:24:2-21: ERROR: Can not access field 'next_pid' on type '(ctx) struct _tracepoint_sched_sched_switch *'. Try dereferencing it first, or using '->'\n    delete(@qtime[args.next_pid]);\n    ~~~~~~~~~~~~~~~~~~~\n", "returncode": 1}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e #include <linux/sched.h>\n\nBEGIN\n{\n  printf(\"Sampling run queue length at 99 Hertz... Hit Ctrl-C to end.\\n\");\n}\n\nprofile:hz:99\n{\n  $task = (struct task_struct *)curtask;\n  $my_q = (struct cfs_rq *)$task->se.cfs_rq;\n  $len = $my_q->nr_running;\n  $len = $len > 0 ? $len - 1 : 0;\n  @runqlen = lhist($len, 0, 100, 1);\n}", "stdout": "Attaching 2 probes...\nSampling run queue length at 99 Hertz... Hit Ctrl-C to end.\n\n\n@runqlen: \n[0, 1)              3329 |@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@|\n[1, 2)               352 |@@@@@                                               |\n[2, 3)                28 |                                                    |\n[3, 4)                 2 |                                                    |\n[4, 5)                 1 |                                                    |\n\n", "stderr": "", "returncode": 0}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN\n{\n\tprintf(\"%-10s %-6s %-16s %s\\n\", \"TIME(ms)\", \"PID\", \"COMM\", \"FUNC\");\n}\n\nuprobe:libpthread:pthread_create,\nuprobe:libc:pthread_create\n{\n\tprintf(\"%-10u %-6d %-16s %s\\n\", elapsed / 1e6, pid, comm,\n\t    usym(arg2));\n}", "stdout": "Attaching 2 probes...\nTIME(ms)   PID    COMM             FUNC\n\n\n", "stderr": "", "returncode": 0}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:kvm_exit {\n  @exit_reason[reg(\"rax\")] = count();\n}\n\ninterval:s:1 {\n  time();\n  print(@exit_reason);\n  clear(@exit_reason);\n}", "stdout": "", "stderr": "stdin:2:3-26: ERROR: 'rax' is not a valid register on this architecture (x86_64)\n  @exit_reason[reg(\"rax\")] = count();\n  ~~~~~~~~~~~~~~~~~~~~~~~\n", "returncode": 1}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter_mount, tracepoint:syscalls:sys_enter_umount { printf(\"%s syscall by PID %d\\n\", probe, pid); }", "stdout": "Attaching 2 probes...\n\n\n", "stderr": "", "returncode": 0}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:bpf:bpf_jit_compile { printf(\"%s %d\\n\", comm, pid); }", "stdout": "", "stderr": "stdin:1:1-31: ERROR: tracepoint not found: bpf:bpf_jit_compile\ntracepoint:bpf:bpf_jit_compile { printf(\"%s %d\\n\", comm, pid); }\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n", "returncode": 1}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e #include <linux/blkdev.h>\n\nBEGIN\n{\n  printf(\"%-12s %-7s %-16s %-6s %7s\\n\", \"TIME(ms)\", \"DISK\", \"COMM\", \"PID\", \"LAT(ms)\");\n}\n\nkprobe:blk_account_io_start\n{\n  @start[arg0] = nsecs;\n  @iopid[arg0] = pid;\n  @iocomm[arg0] = comm;\n  @disk[arg0] = ((struct request *)arg0)->q->disk->disk_name;\n}\n\nkprobe:blk_account_io_done\n/@start[arg0] && @iopid[arg0] && @iocomm[arg0]/\n{\n  $now = nsecs;\n  printf(\"%-12u %-7s %-16s %-6d %7d\\n\",\n    elapsed / 1e6, @disk[arg0], @iocomm[arg0], @iopid[arg0],\n    ($now - @start[arg0]) / 1e6);\n\n  delete(@start[arg0]);\n  delete(@iopid[arg0]);\n  delete(@iocomm[arg0]);\n  delete(@disk[arg0]);\n}\n\nEND\n{\n  clear(@start);\n  clear(@iopid);\n  clear(@iocomm);\n  clear(@disk);\n}\n", "stdout": "", "stderr": "/lib/modules/6.2.0-32-generic/build/include/linux/compiler-clang.h:41:9: warning: '__HAVE_BUILTIN_BSWAP32__' macro redefined [-Wmacro-redefined]\nnote: previous definition is here\n/lib/modules/6.2.0-32-generic/build/include/linux/compiler-clang.h:42:9: warning: '__HAVE_BUILTIN_BSWAP64__' macro redefined [-Wmacro-redefined]\nnote: previous definition is here\n/lib/modules/6.2.0-32-generic/build/include/linux/compiler-clang.h:43:9: warning: '__HAVE_BUILTIN_BSWAP16__' macro redefined [-Wmacro-redefined]\nnote: previous definition is here\n/lib/modules/6.2.0-32-generic/build/include/linux/kasan-checks.h:24:9: error: use of undeclared identifier 'true'\n/lib/modules/6.2.0-32-generic/build/include/linux/kasan-checks.h:28:9: error: use of undeclared identifier 'true'\n/lib/modules/6.2.0-32-generic/build/include/linux/kasan-checks.h:42:9: error: use of undeclared identifier 'true'\n/lib/modules/6.2.0-32-generic/build/include/linux/kasan-checks.h:46:9: error: use of undeclared identifier 'true'\n/lib/modules/6.2.0-32-generic/build/arch/x86/include/asm/ibt.h:101:47: error: use of undeclared identifier 'false'\n/lib/modules/6.2.0-32-generic/build/include/asm-generic/bitops/le.h:21:9: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-32-generic/build/include/asm-generic/bitops/le.h:21:9: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-32-generic/build/include/asm-generic/bitops/le.h:21:9: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-32-generic/build/include/asm-generic/bitops/le.h:21:9: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-32-generic/build/include/asm-generic/bitops/le.h:36:2: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-32-generic/build/include/asm-generic/bitops/le.h:36:2: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-32-generic/build/include/asm-generic/bitops/le.h:36:2: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-32-generic/build/include/asm-generic/bitops/le.h:36:2: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-32-generic/build/include/asm-generic/bitops/le.h:41:2: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-32-generic/build/include/asm-generic/bitops/le.h:41:2: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-32-generic/build/include/asm-generic/bitops/le.h:41:2: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-32-generic/build/include/asm-generic/bitops/le.h:41:2: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-32-generic/build/include/asm-generic/bitops/le.h:56:9: error: use of undeclared identifier 'uintptr_t'\n/lib/modules/6.2.0-32-generic/build/include/asm-generic/bitops/le.h:56:9: error: use of undeclared identifier 'uintptr_t'\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n", "returncode": 1}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN\n{\n\tprintf(\"Tracing BTRFS operation latency... Hit Ctrl-C to end.\\n\");\n}\n\nkprobe:btrfs_file_read_iter,\nkprobe:btrfs_file_write_iter,\nkprobe:btrfs_file_open,\nkprobe:btrfs_file_fsync\n{\n\t@start[tid] = nsecs;\n\t@name[tid] = func;\n}\n\nkretprobe:btrfs_file_read_iter,\nkretprobe:btrfs_file_write_iter,\nkretprobe:btrfs_file_open,\nkretprobe:btrfs_file_fsync\n/@start[tid]/\n{\n\t@us[@name[tid]] = hist((nsecs - @start[tid]) / 1000);\n\tdelete(@start[tid]);\n\tdelete(@name[tid]);\n}\n\nEND\n{\n\tclear(@start);\n\tclear(@name);\n}", "stdout": "Attaching 10 probes...\nTracing BTRFS operation latency... Hit Ctrl-C to end.\n\n\n\n\n\n", "stderr": "stdin:8-9: WARNING: btrfs_file_fsync is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\nstdin:17-18: WARNING: btrfs_file_fsync is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\ncannot attach kprobe, probe entry may not exist\nWARNING: could not attach probe kretprobe:btrfs_file_fsync, skipping.\ncannot attach kprobe, probe entry may not exist\nWARNING: could not attach probe kprobe:btrfs_file_fsync, skipping.\n", "returncode": -2}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN\n{\n\tprintf(\"Tracing cap_capable syscalls... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-9s %-6s %-6s %-16s %-4s %-20s AUDIT\\n\", \"TIME\", \"UID\", \"PID\",\n\t    \"COMM\", \"CAP\", \"NAME\");\n\t@cap[0] = \"CAP_CHOWN\";\n\t@cap[1] = \"CAP_DAC_OVERRIDE\";\n\t@cap[2] = \"CAP_DAC_READ_SEARCH\";\n\t@cap[3] = \"CAP_FOWNER\";\n\t@cap[4] = \"CAP_FSETID\";\n\t@cap[5] = \"CAP_KILL\";\n\t@cap[6] = \"CAP_SETGID\";\n\t@cap[7] = \"CAP_SETUID\";\n\t@cap[8] = \"CAP_SETPCAP\";\n\t@cap[9] = \"CAP_LINUX_IMMUTABLE\";\n\t@cap[10] = \"CAP_NET_BIND_SERVICE\";\n\t@cap[11] = \"CAP_NET_BROADCAST\";\n\t@cap[12] = \"CAP_NET_ADMIN\";\n\t@cap[13] = \"CAP_NET_RAW\";\n\t@cap[14] = \"CAP_IPC_LOCK\";\n\t@cap[15] = \"CAP_IPC_OWNER\";\n\t@cap[16] = \"CAP_SYS_MODULE\";\n\t@cap[17] = \"CAP_SYS_RAWIO\";\n\t@cap[18] = \"CAP_SYS_CHROOT\";\n\t@cap[19] = \"CAP_SYS_PTRACE\";\n\t@cap[20] = \"CAP_SYS_PACCT\";\n\t@cap[21] = \"CAP_SYS_ADMIN\";\n\t@cap[22] = \"CAP_SYS_BOOT\";\n\t@cap[23] = \"CAP_SYS_NICE\";\n\t@cap[24] = \"CAP_SYS_RESOURCE\";\n\t@cap[25] = \"CAP_SYS_TIME\";\n\t@cap[26] = \"CAP_SYS_TTY_CONFIG\";\n\t@cap[27] = \"CAP_MKNOD\";\n\t@cap[28] = \"CAP_LEASE\";\n\t@cap[29] = \"CAP_AUDIT_WRITE\";\n\t@cap[30] = \"CAP_AUDIT_CONTROL\";\n\t@cap[31] = \"CAP_SETFCAP\";\n\t@cap[32] = \"CAP_MAC_OVERRIDE\";\n\t@cap[33] = \"CAP_MAC_ADMIN\";\n\t@cap[34] = \"CAP_SYSLOG\";\n\t@cap[35] = \"CAP_WAKE_ALARM\";\n\t@cap[36] = \"CAP_BLOCK_SUSPEND\";\n\t@cap[37] = \"CAP_AUDIT_READ\";\n\t@cap[38] = \"CAP_PERFMON\";\n\t@cap[39] = \"CAP_BPF\";\n\t@cap[40] = \"CAP_CHECKPOINT_RESTORE\";\n}\n\nkprobe:cap_capable\n{\n\t$cap = arg2;\n\t$audit = arg3;\n\ttime(\"%H:%M:%S  \");\n\tprintf(\"%-6d %-6d %-16s %-4d %-20s %d\\n\", uid, pid, comm, $cap,\n\t    @cap[$cap], $audit);\n}\n\nEND\n{\n\tclear(@cap);\n}\n", "stdout": "Attaching 3 probes...\nTracing cap_capable syscalls... Hit Ctrl-C to end.\nTIME      UID    PID    COMM             CAP  NAME                 AUDIT\n\n\n\n", "stderr": "", "returncode": 0}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:compact_zone { @start[tid] = nsecs; } kretprobe:compact_zone { @latency[tid] = hist((nsecs - @start[tid]) / 1000); delete(@start[tid]); }", "stdout": "Attaching 2 probes...\n\n\n\n\n", "stderr": "", "returncode": 0}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e #include <linux/sched.h>\n\nBEGIN\n{\n  printf(\"Tracing long atomic critical sections... Hit Ctrl-C to end.\\n\");\n}\n\nkprobe:preempt_disable\n{\n  @start[tid] = nsecs;\n}\n\nkprobe:preempt_enable\n/ @start[tid] /\n{\n  $time = nsecs - @start[tid];\n  if ($time > 1000000) {\n    printf(\"Long atomic section detected: %d us\\n\", $time / 1000);\n  }\n  delete(@start[tid]);\n}\n\nEND\n{\n  clear(@start);\n}", "stdout": "Attaching 4 probes...\n", "stderr": "stdin:6-8: WARNING: preempt_disable is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\nstdin:11-13: WARNING: preempt_enable is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\ncannot attach kprobe, probe entry may not exist\nERROR: Error attaching probe: 'kprobe:preempt_enable'\n", "returncode": 255}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN\n{\n\tprintf(\"Tracing kill() signals... Hit Ctrl-C to end.\\n\");\n\tprintf(\"%-9s %-6s %-16s %-4s %-6s %s\\n\", \"TIME\", \"PID\", \"COMM\", \"SIG\",\n\t    \"TPID\", \"RESULT\");\n}\n\ntracepoint:syscalls:sys_enter_kill\n{\n\t@tpid[tid] = args.pid;\n\t@tsig[tid] = args.sig;\n}\n\ntracepoint:syscalls:sys_exit_kill\n/@tpid[tid]/\n{\n\ttime(\"%H:%M:%S  \");\n\tprintf(\"%-6d %-16s %-4d %-6d %d\\n\", pid, comm, @tsig[tid], @tpid[tid],\n\t    args.ret);\n\tdelete(@tpid[tid]);\n\tdelete(@tsig[tid]);\n}\n", "stdout": "", "stderr": "stdin:10:15-20: ERROR: Can not access field 'pid' on type '(ctx) struct _tracepoint_syscalls_sys_enter_kill *'. Try dereferencing it first, or using '->'\n    @tpid[tid] = args.pid;\n                 ~~~~~\nstdin:11:15-20: ERROR: Can not access field 'sig' on type '(ctx) struct _tracepoint_syscalls_sys_enter_kill *'. Try dereferencing it first, or using '->'\n    @tsig[tid] = args.sig;\n                 ~~~~~\nstdin:19:6-11: ERROR: Can not access field 'ret' on type '(ctx) struct _tracepoint_syscalls_sys_exit_kill *'. Try dereferencing it first, or using '->'\n        args.ret);\n        ~~~~~\n", "returncode": 1}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e #include <linux/mutex.h>\n\nBEGIN\n{\n  printf(\"Tracing kernel mutex lock events... Hit Ctrl-C to end.\\n\");\n  printf(\"%-8s %-6s %-16s %-16s %-16s\\n\", \"TIME\", \"PID\", \"COMM\", \"MUTEX\", \"STATE\");\n}\n\nkprobe:mutex_lock\n{\n  $mutex = (struct mutex *)arg0;\n  printf(\"%-8s %-6d %-16s %-16p %-16s\\n\", strftime(\"%H:%M:%S\"), pid, comm, $mutex, \"LOCK\");\n  @lock[$mutex] = count();\n}\n\nkprobe:mutex_unlock\n{\n  $mutex = (struct mutex *)arg0;\n  printf(\"%-8s %-6d %-16s %-16p %-16s\\n\", strftime(\"%H:%M:%S\"), pid, comm, $mutex, \"UNLOCK\");\n  @unlock[$mutex] = count();\n}\n\nEND\n{\n  printf(\"\\nMutex lock statistics:\\n\");\n  printf(\"%-16s %-8s %-8s\\n\", \"MUTEX\", \"LOCKS\", \"UNLOCKS\");\n  foreach ($mutex in @lock) {\n    printf(\"%-16p %-8d %-8d\\n\", $mutex, @lock[$mutex], @unlock[$mutex]);\n  }\n}", "stdout": "", "stderr": "stdin:27:19-21: ERROR: syntax error, unexpected identifier, expecting ) or \",\"\n  foreach ($mutex in @lock) {\n                  ~~\n", "returncode": 1}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN\n{\n    printf(\"Tracing System V shared memory syscalls... Hit Ctrl-C to end.\\n\");\n    printf(\"%-6s %-16s %-6s %-6s\\n\", \"PID\", \"COMM\", \"KEY\", \"SIZE\");\n}\n\ntracepoint:syscalls:sys_enter_shmget\n{\n    @key[tid] = args.key;\n    @size[tid] = args.size;\n}\n\ntracepoint:syscalls:sys_exit_shmget\n/@key[tid] && @size[tid]/\n{\n    printf(\"%-6d %-16s %-6d %-6d\\n\", pid, comm, @key[tid], @size[tid]);\n    delete(@key[tid]);\n    delete(@size[tid]);\n}\n\nEND\n{\n    clear(@key);\n    clear(@size);\n}\n", "stdout": "", "stderr": "stdin:9:17-22: ERROR: Can not access field 'key' on type '(ctx) struct _tracepoint_syscalls_sys_enter_shmget *'. Try dereferencing it first, or using '->'\n    @key[tid] = args.key;\n                ~~~~~\nstdin:10:18-23: ERROR: Can not access field 'size' on type '(ctx) struct _tracepoint_syscalls_sys_enter_shmget *'. Try dereferencing it first, or using '->'\n    @size[tid] = args.size;\n                 ~~~~~\n", "returncode": 1}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:kmem_cache_alloc { @[comm, pid] = count(); } interval:s:1 { time(); print(@); clear(@); }", "stdout": "Attaching 2 probes...\n11:00:47\n@[node, 1635]: 1\n@[vmtoolsd, 528]: 2\n@[systemd-journal, 407]: 2\n@[kworker/u256:2, 17201]: 4\n@[bpftrace, 17268]: 5\n@[node, 1624]: 7\n@[node, 1648]: 20\n11:00:48\n@[containerd, 1172]: 1\n@[node, 1635]: 1\n@[node, 1624]: 12\n@[node, 1648]: 20\n11:00:49\n@[node, 1635]: 1\n@[node, 1624]: 8\n@[jbd2/sda2-8, 345]: 13\n@[node, 1648]: 20\n11:00:50\n@[containerd, 1172]: 1\n@[node, 1635]: 1\n@[node, 1624]: 7\n@[node, 1648]: 20\n11:00:51\n@[containerd, 1172]: 1\n@[node, 1635]: 1\n@[node, 1624]: 12\n@[node, 1648]: 20\n11:00:52\n@[node, 1635]: 1\n@[vmtoolsd, 528]: 2\n@[node, 1624]: 7\n@[node, 1648]: 20\n@[irqbalance, 804]: 23\n11:00:53\n@[node, 1635]: 1\n@[node, 1624]: 12\n@[node, 1648]: 20\n11:00:54\n@[node, 1635]: 1\n@[jbd2/sda2-8, 345]: 6\n@[node, 1624]: 8\n@[node, 1648]: 20\n11:00:55\n@[node, 1635]: 1\n@[node, 1624]: 7\n@[node, 1648]: 16\n11:00:56\n@[node, 1635]: 1\n@[node, 1624]: 12\n@[node, 1648]: 20\n@[kworker/u256:2, 17201]: 22\n11:00:57\n@[containerd, 1172]: 1\n@[node, 1635]: 1\n@[vmtoolsd, 528]: 5\n@[node, 1624]: 7\n@[node, 1648]: 20\n11:00:58\n@[node, 1635]: 1\n@[node, 1624]: 12\n@[node, 1648]: 20\n11:00:59\n@[node, 1635]: 1\n@[node, 1624]: 8\n@[jbd2/sda2-8, 345]: 19\n@[node, 1648]: 20\n11:01:00\n@[node, 1635]: 1\n@[node, 1624]: 7\n@[node, 1648]: 20\n11:01:01\n@[node, 1635]: 1\n@[kworker/u256:0, 15236]: 7\n@[node, 1624]: 12\n@[node, 1648]: 20\n11:01:02\n@[node, 1635]: 1\n@[cron, 903]: 5\n@[node, 1624]: 7\n@[node, 1648]: 20\n@[irqbalance, 804]: 23\n@[vmtoolsd, 528]: 65\n11:01:03\n@[node, 1635]: 1\n@[containerd, 1172]: 2\n@[node, 1624]: 12\n@[node, 1648]: 20\n11:01:04\n@[node, 1635]: 1\n@[jbd2/sda2-8, 345]: 6\n@[node, 1624]: 8\n@[node, 1648]: 20\n11:01:05\n@[node, 1635]: 1\n@[systemd, 1]: 5\n@[node, 1624]: 7\n@[systemd-timesyn, 515]: 12\n@[node, 1648]: 20\n\n\n@[node, 1635]: 1\n@[timeout, 17267]: 1\n@[node, 1624]: 12\n@[node, 1648]: 16\n", "stderr": "", "returncode": 0}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter_sync { printf(\"PID %d called sync()\\n\", pid); }", "stdout": "Attaching 1 probe...\n\n\n", "stderr": "", "returncode": 0}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e #include <net/tcp_states.h>\n#include <net/sock.h>\n#include <linux/socket.h>\n#include <linux/tcp.h>\n\nBEGIN\n{\n  printf(\"%-8s %-8s %-16s %-39s %-6s %-39s %-6s %-6s\\n\", \"TIME\", \"PID\", \"COMM\", \"SADDR\", \"SPORT\", \"DADDR\", \"DPORT\", \"RTT\");\n}\n\nkprobe:tcp_v4_connect\n{\n  $sk = ((struct sock *) arg0);\n  $inet_family = $sk->__sk_common.skc_family;\n\n  if ($inet_family == AF_INET) {\n    $daddr = ntop($sk->__sk_common.skc_daddr);\n    $saddr = ntop($sk->__sk_common.skc_rcv_saddr);\n    $lport = $sk->__sk_common.skc_num;\n    $dport = $sk->__sk_common.skc_dport;\n\n    // Destination port is big endian, it must be flipped\n    $dport = bswap($dport);\n\n    @start_time[$sk] = nsecs;\n    @saddr[$sk] = $saddr;\n    @daddr[$sk] = $daddr;\n    @lport[$sk] = $lport;\n    @dport[$sk] = $dport;\n  }\n}\n\nkretprobe:tcp_v4_connect\n{\n  $sk = ((struct sock *) arg0);\n  $ret = (int) arg1;\n\n  if ($ret == 0) {\n    $rtt = (nsecs - @start_time[$sk]) / 1e6;\n\n    time(\"%H:%M:%S \");\n    printf(\"%-8d %-16s %-39s %-6d %-39s %-6d %-6d\\n\", pid, comm, @saddr[$sk], @lport[$sk], @daddr[$sk], @dport[$sk], $rtt);\n\n    delete(@start_time[$sk]);\n    delete(@saddr[$sk]);\n    delete(@daddr[$sk]);\n    delete(@lport[$sk]);\n    delete(@dport[$sk]);\n  }\n}", "stdout": "", "stderr": "stdin:35:27-31: ERROR: The arg0 builtin can only be used with 'kprobes', 'uprobes' and 'usdt' probes\n  $sk = ((struct sock *) arg0);\n                          ~~~~\nstdin:36:16-20: ERROR: The arg1 builtin can only be used with 'kprobes', 'uprobes' and 'usdt' probes\n  $ret = (int) arg1;\n               ~~~~\nstdin:36:10-15: ERROR: Unknown struct/union: 'int'\n  $ret = (int) arg1;\n         ~~~~~\n", "returncode": 1}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN\n{\n\tprintf(\"Tracing ZFS operation latency... Hit Ctrl-C to end.\\n\");\n}\n\nkprobe:zfs_read,\nkprobe:zfs_write,\nkprobe:zfs_open,\nkprobe:zfs_fsync\n{\n\t@start[tid] = nsecs;\n\t@name[tid] = func;\n}\n\nkretprobe:zfs_read,\nkretprobe:zfs_write,\nkretprobe:zfs_open,\nkretprobe:zfs_fsync\n/@start[tid]/\n{\n\t@us[@name[tid]] = hist((nsecs - @start[tid]) / 1000);\n\tdelete(@start[tid]);\n\tdelete(@name[tid]);\n}\n\nEND\n{\n\tclear(@start);\n\tclear(@name);\n}\n", "stdout": "Attaching 10 probes...\nTracing ZFS operation latency... Hit Ctrl-C to end.\n\n\n\n\n\n", "stderr": "stdin:4-6: WARNING: zfs_read is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\nstdin:6-7: WARNING: zfs_write is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\nstdin:7-8: WARNING: zfs_open is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\nstdin:8-9: WARNING: zfs_fsync is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\nstdin:13-15: WARNING: zfs_read is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\nstdin:15-16: WARNING: zfs_write is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\nstdin:16-17: WARNING: zfs_open is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\nstdin:17-18: WARNING: zfs_fsync is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\ncannot attach kprobe, probe entry may not exist\nWARNING: could not attach probe kretprobe:zfs_read, skipping.\ncannot attach kprobe, probe entry may not exist\nWARNING: could not attach probe kretprobe:zfs_write, skipping.\ncannot attach kprobe, probe entry may not exist\nWARNING: could not attach probe kretprobe:zfs_open, skipping.\ncannot attach kprobe, probe entry may not exist\nWARNING: could not attach probe kretprobe:zfs_fsync, skipping.\ncannot attach kprobe, probe entry may not exist\nWARNING: could not attach probe kprobe:zfs_fsync, skipping.\ncannot attach kprobe, probe entry may not exist\nWARNING: could not attach probe kprobe:zfs_open, skipping.\ncannot attach kprobe, probe entry may not exist\nWARNING: could not attach probe kprobe:zfs_write, skipping.\ncannot attach kprobe, probe entry may not exist\nWARNING: could not attach probe kprobe:zfs_read, skipping.\n", "returncode": 0}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:swap_readpage { @[comm] = count(); } interval:s:1 { print(@); clear(@); }", "stdout": "Attaching 2 probes...\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "stderr": "", "returncode": 0}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e #include <net/sock.h>\n#include <bcc/proto.h>\n\nBEGIN\n{\n  printf(\"Tracing active TCP connections. Hit Ctrl-C to end.\\n\");\n  printf(\"%-8s %-6s %-16s %-39s %-6s %-39s %-6s\\n\", \"TIME\", \"PID\", \"COMM\", \"SADDR\", \"SPORT\", \"DADDR\", \"DPORT\");\n}\n\nkprobe:tcp_v4_connect\n{\n  $sk = ((struct sock *) arg0);\n  $daddr = ntop($sk->__sk_common.skc_daddr);\n  $saddr = ntop($sk->__sk_common.skc_rcv_saddr);\n  $lport = $sk->__sk_common.skc_num;\n  $dport = $sk->__sk_common.skc_dport;\n\n  // Destination port is big endian, it must be flipped\n  $dport = bswap($dport);\n\n  time(\"%H:%M:%S \");\n  printf(\"%-6d %-16s %-39s %-6d %-39s %-6d\\n\", pid, comm, $saddr, $lport, $daddr, $dport);\n}", "stdout": "", "stderr": "/lib/modules/6.2.0-32-generic/build/arch/x86/include/asm/processor.h:497:17: warning: taking address of packed member 'sp0' of class or structure 'x86_hw_tss' may result in an unaligned pointer value [-Waddress-of-packed-member]\n/lib/modules/6.2.0-32-generic/build/include/linux/cgroup-defs.h:537:16: warning: field 'cgrp' with variable sized type 'struct cgroup' not at the end of a struct or class is a GNU extension [-Wgnu-variable-sized-type-not-at-end]\ndefinitions.h:3:10: fatal error: 'bcc/proto.h' file not found\n", "returncode": 1}
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e BEGIN\n{\n\tprintf(\"Tracing XFS operation latency... Hit Ctrl-C to end.\\n\");\n}\n\nkprobe:xfs_file_read_iter,\nkprobe:xfs_file_write_iter,\nkprobe:xfs_file_open,\nkprobe:xfs_file_fsync\n{\n\t@start[tid] = nsecs;\n\t@name[tid] = func;\n}\n\nkretprobe:xfs_file_read_iter,\nkretprobe:xfs_file_write_iter,\nkretprobe:xfs_file_open,\nkretprobe:xfs_file_fsync\n/@start[tid]/\n{\n\t@us[@name[tid]] = hist((nsecs - @start[tid]) / 1000);\n\tdelete(@start[tid]);\n\tdelete(@name[tid]);\n}\n\nEND\n{\n\tclear(@start);\n\tclear(@name);\n}\n", "stdout": "Attaching 10 probes...\nTracing XFS operation latency... Hit Ctrl-C to end.\n\n\n\n\n\n", "stderr": "stdin:4-6: WARNING: xfs_file_read_iter is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\nstdin:6-7: WARNING: xfs_file_write_iter is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\nstdin:7-8: WARNING: xfs_file_open is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\nstdin:8-9: WARNING: xfs_file_fsync is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\nstdin:13-15: WARNING: xfs_file_read_iter is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\nstdin:15-16: WARNING: xfs_file_write_iter is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\nstdin:16-17: WARNING: xfs_file_open is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\nstdin:17-18: WARNING: xfs_file_fsync is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\ncannot attach kprobe, probe entry may not exist\nWARNING: could not attach probe kretprobe:xfs_file_read_iter, skipping.\ncannot attach kprobe, probe entry may not exist\nWARNING: could not attach probe kretprobe:xfs_file_write_iter, skipping.\ncannot attach kprobe, probe entry may not exist\nWARNING: could not attach probe kretprobe:xfs_file_open, skipping.\ncannot attach kprobe, probe entry may not exist\nWARNING: could not attach probe kretprobe:xfs_file_fsync, skipping.\ncannot attach kprobe, probe entry may not exist\nWARNING: could not attach probe kprobe:xfs_file_fsync, skipping.\ncannot attach kprobe, probe entry may not exist\nWARNING: could not attach probe kprobe:xfs_file_open, skipping.\ncannot attach kprobe, probe entry may not exist\nWARNING: could not attach probe kprobe:xfs_file_write_iter, skipping.\ncannot attach kprobe, probe entry may not exist\nWARNING: could not attach probe kprobe:xfs_file_read_iter, skipping.\n", "returncode": 0}
