Tracing the tracepoint:irq:irq_handler_entry to hook into the IRQ handler and log relevant IRQs only if they match predefined criteria.
Tracing the tracepoint:sched:sched_process_fork to capture and log both parent and child process IDs and their respective command names when a process forks.
Tracing the kprobe:__kmalloc function to hook into memory allocation and log the size of allocated memory for histogram analysis.
Tracing functions kprobe:do_prlimit, tracepoint:syscalls:sys_enter_setrlimit, and tracepoint:syscalls:sys_exit_setrlimit to monitor processes as they adjust or exceed resource limits.
Tracing the tracepoint:signal:signal_deliver to capture and log the signal name and the IDs of affected processes.
Tracing the tracepoint:raw_syscalls:sys_exit to monitor syscall errors and log them for specific processes.
Tracing functions kprobe:tcp_v4_syn_recv_sock and kprobe:tcp_v6_syn_recv_sock to intercept TCP SYN packets, logging the source and destination IPs and ports.
Tracing the tracepoint:raw_syscalls:sys_enter to monitor syscalls originating from user-space processes.
Tracing the tracepoint:raw_syscalls:sys_enter with interval:s:1 setting to capture global syscalls per second.
Tracing multiple functions like tracepoint:syscalls:sys_enter_socket, kprobe:syscall__recvmsg, kprobe:syscall__sendmsg and others to log socket operations and associated process IDs.
Tracing functions tracepoint:syscalls:sys_enter_openat, tracepoint:syscalls:sys_enter_read, and tracepoint:syscalls:sys_enter_write to analyze and depict I/O size distributions for file operations.
Tracing the tracepoint:syscalls:sys_enter_read to summarize the bytes read by each process.
Tracing the kprobe:net_namespace function to monitor events related to the creation and deletion of network namespaces.
Tracing functions tracepoint:syscalls:sys_enter_open and tracepoint:syscalls:sys_enter_openat to log files being opened by processes.
Tracing hardware:*cache* hooks to count and log LLC cache misses by individual processes.
Tracing either tracepoint:exceptions:page_fault_user or tracepoint:exceptions:page_fault_kernel to count page fault events per process.
Tracing the uretprobe:/bin/bash:readline to log bash commands and their associated exit codes.
Tracing the kprobe:d_lookup function to monitor directory entry cache lookups and log them by process.
Tracing the kprobe:md_flush_request function to capture and log md flush events, along with associated process details.
Tracing the tracepoint:sched:sched_switch to log CPU scheduler run queue latency metrics.
Tracing the tracepoint:sched:sched_switch to summarize and log the lengths of CPU scheduler run queues.
Tracing both uprobe:libpthread:pthread_create and uprobe:libc:pthread_create to log details of new thread creation, such as pid, tid, and comm.
Tracing either hardware:*kvm_exit* or software:*kvm_exit* hooks to display each VM exit event in KVM.
Tracing functions tracepoint:syscalls:sys_enter_mount and tracepoint:syscalls:sys_exit_umount2 to monitor and log mount and umount operations system-wide.
Tracing the kprobe:bpf_int_jit_compile function to capture and log bpf JIT compilation events.
Tracing functions like kprobe:__blk_account_io_done or others related to blk_account and blk to monitor block device I/O, logging associated process details and latency metrics.
Tracing functions such as kprobe:btrfs_file_write_iter, kprobe:generic_file_read_iter and others to capture and log various btrfs operations across the system.
Tracing the kprobe:cap_capable function to monitor and log security capability check events.
Tracing events related to kprobe:compact_zone or tracepoint:compaction:* to monitor and log zone compaction activities.
Tracing functions like kprobe:preempt_schedule_irq to capture and log extended atomic sections in the kernel.
Tracing the tracepoint:syscalls:sys_enter_kill to capture and log signals initiated from the kill() syscall.
Tracing functions kprobe:mutex_lock and kprobe:mutex_unlock to monitor kernel mutex lock activities and provide statistical insights.
Tracing functions tracepoint:syscalls:sys_enter_shmget and others like shmctl, shmdt, shmat to capture and log System V shared memory calls and display their sizes.
Tracing functions kprobe:kmem_cache_alloc, kprobe:__slab_free, and kprobe:___slab_alloc to summarize and log kernel SLAB/SLUB cache allocation events.
Tracing the tracepoint:syscalls:sys_enter_sync to monitor the sync() syscall, logging the calling process.
Tracing the kprobe:tcp_rcv_established function to capture TCP RTT metrics and log sender/receiver details.
Tracing hooks beginning with zpl_* to summarize and log latencies associated with ZFS operations.
Tracing functions like kprobe:swap_readpage or others associated with swap to count and log swap-ins by each process.
Tracing the kprobe:tcp_v4_connect function to monitor active TCP connections initiated via the connect() syscall, logging details.
Tracing functions like kprobe:xfs_file_read, kprobe:xfs_file_write, kprobe:xfs_file_open, and kprobe:xfs_file_fsync to summarize and log latencies for XFS operations.
