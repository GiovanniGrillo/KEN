{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:irq:irq_handler_entry { @[args->irq] = count(); } interval:s:1 { print(@); clear(@); }", "stdout": "Attaching 2 probes...\n@[56]: 1\n@[19]: 9\n@[19]: 25\n@[56]: 1\n@[19]: 10\n@[17]: 17\n@[19]: 5\n@[56]: 1\n@[19]: 4\n@[17]: 6\n@[19]: 4\n@[56]: 1\n@[19]: 7\n@[19]: 8\n@[56]: 1\n@[19]: 7\n@[17]: 4\n@[19]: 5\n@[56]: 1\n@[19]: 3\n@[19]: 8\n@[56]: 1\n@[19]: 7\n@[57]: 1\n@[19]: 6\n@[17]: 1\n@[56]: 1\n@[19]: 3\n@[57]: 4\n@[17]: 2\n@[19]: 16\n@[56]: 1\n@[19]: 31\n@[19]: 61\n@[56]: 1\n@[19]: 45\n\n\n@[19]: 12\n", "stderr": "", "returncode": 0}{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:sched:sched_process_fork { printf(\"Parent PID: %d, Parent CMD: %s, Child PID: %d, Child CMD: %s\n\", pid, comm, args->child_pid, args->child_comm); }", "stdout": "", "stderr": "stdin:1:39-108: ERROR: unterminated string\ntracepoint:sched:sched_process_fork { printf(\"Parent PID: %d, Parent CMD: %s, Child PID: %d, Child CMD: %s\n                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nstdin:2:1-52: ERROR: unterminated string\n\", pid, comm, args->child_pid, args->child_comm); }\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nstdin:2:1-52: ERROR: syntax error, unexpected end of file\n\", pid, comm, args->child_pid, args->child_comm); }\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n", "returncode": 1}{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:kmalloc { @[log2(arg0)] = count(); } interval:s:1 { print(@); clear(@); }", "stdout": "", "stderr": "stdin:1:18-24: ERROR: Unknown function: log2\nkprobe:kmalloc { @[log2(arg0)] = count(); } interval:s:1 { print(@); clear(@); }\n                 ~~~~~~\n", "returncode": 1}{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e # trace processes exceeding resource limits\n\nBEGIN\n{\n  printf(\"Tracing resource limits... Hit Ctrl-C to end.\\n\");\n}\n\ntracepoint:syscalls:sys_enter_setrlimit\n{\n  $pid = pid;\n  $comm = comm;\n  $resource = args->resource;\n  $rlim = args->rlim;\n\n  if ($rlim->rlim_cur > $rlim->rlim_max)\n  {\n    printf(\"%s (%d) exceeded resource limit: %d. Current: %d, Max: %d\\n\", $comm, $pid, $resource, $rlim->rlim_cur, $rlim->rlim_max);\n  }\n}\n\ntracepoint:syscalls:sys_enter_prlimit64\n{\n  $pid = pid;\n  $comm = comm;\n  $resource = args->resource;\n  $new_limit = args->new_limit;\n  $old_limit = args->old_limit;\n\n  if ($new_limit->rlim_cur > $new_limit->rlim_max)\n  {\n    printf(\"%s (%d) exceeded resource limit: %d. Current: %d, Max: %d\\n\", $comm, $pid, $resource, $new_limit->rlim_cur, $new_limit->rlim_max);\n  }\n}", "stdout": "", "stderr": "definitions.h:2:3: error: invalid preprocessing directive\n", "returncode": 1}{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:signal:signal_deliver { printf(\"Signal %s delivered to PID %d\n\", str(sig), pid); }", "stdout": "", "stderr": "stdin:1:36-74: ERROR: unterminated string\ntracepoint:signal:signal_deliver { printf(\"Signal %s delivered to PID %d\n                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nstdin:2:1-21: ERROR: unterminated string\n\", str(sig), pid); }\n~~~~~~~~~~~~~~~~~~~~\nstdin:2:1-21: ERROR: syntax error, unexpected end of file\n\", str(sig), pid); }\n~~~~~~~~~~~~~~~~~~~~\n", "returncode": 1}{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:raw_syscalls:sys_exit /args->ret < 0/ { @[comm, str(args->ret)] = count(); } interval:s:1 { print(@); clear(@); }", "stdout": "Attaching 2 probes...\n@[bpftrace, ]: 1\n@[HangDetector, ]: 1\n@[cpptools, ]: 3\n@[node, ]: 3\n@[containerd, ]: 30\n@[bpftrace, ]: 1\n@[HangDetector, ]: 1\n@[cpptools, ]: 2\n@[node, ]: 3\n@[containerd, ]: 32\n@[bpftrace, ]: 1\n@[HangDetector, ]: 1\n@[vmtoolsd, ]: 1\n@[cpptools, ]: 3\n@[node, ]: 3\n@[containerd, ]: 29\n@[bpftrace, ]: 1\n@[HangDetector, ]: 1\n@[node, ]: 1\n@[cpptools, ]: 2\n@[containerd, ]: 27\n@[bpftrace, ]: 1\n@[HangDetector, ]: 1\n@[node, ]: 1\n@[cpptools, ]: 3\n@[containerd, ]: 30\n@[bpftrace, ]: 1\n@[HangDetector, ]: 1\n@[node, ]: 2\n@[cpptools, ]: 4\n@[containerd, ]: 30\n@[bpftrace, ]: 1\n@[HangDetector, ]: 1\n@[cpptools, ]: 1\n@[node, ]: 1\n@[containerd, ]: 29\n@[bpftrace, ]: 1\n@[HangDetector, ]: 1\n@[dockerd, ]: 1\n@[vmtoolsd, ]: 1\n@[cpptools, ]: 2\n@[node, ]: 2\n@[containerd, ]: 30\n@[bpftrace, ]: 1\n@[HangDetector, ]: 1\n@[multipathd, ]: 1\n@[cpptools, ]: 3\n@[node, ]: 16\n@[containerd, ]: 32\n@[git, ]: 62\n@[bpftrace, ]: 1\n@[HangDetector, ]: 1\n@[cpptools, ]: 2\n@[node, ]: 3\n@[containerd, ]: 29\n@[bpftrace, ]: 1\n@[HangDetector, ]: 1\n@[node, ]: 2\n@[cpptools, ]: 3\n@[containerd, ]: 32\n@[bpftrace, ]: 1\n@[HangDetector, ]: 1\n@[snapd, ]: 1\n@[node, ]: 1\n@[cpptools, ]: 2\n@[containerd, ]: 29\n@[bpftrace, ]: 1\n@[HangDetector, ]: 1\n@[vmtoolsd, ]: 1\n@[cpptools, ]: 3\n@[node, ]: 16\n@[containerd, ]: 31\n@[git, ]: 62\n@[bpftrace, ]: 1\n@[HangDetector, ]: 1\n@[cpptools, ]: 2\n@[node, ]: 15\n@[containerd, ]: 32\n@[vmtoolsd, ]: 39\n@[git, ]: 62\n@[bpftrace, ]: 1\n@[HangDetector, ]: 1\n@[cpptools, ]: 3\n@[node, ]: 16\n@[containerd, ]: 30\n@[git, ]: 62\n@[bpftrace, ]: 1\n@[HangDetector, ]: 1\n@[systemd, ]: 1\n@[cpptools, ]: 2\n@[node, ]: 3\n@[snapd, ]: 11\n@[containerd, ]: 30\n@[bpftrace, ]: 1\n@[HangDetector, ]: 1\n@[node, ]: 1\n@[cpptools, ]: 3\n@[containerd, ]: 30\n@[bpftrace, ]: 1\n@[HangDetector, ]: 1\n@[vmtoolsd, ]: 1\n@[cpptools, ]: 2\n@[node, ]: 2\n@[dockerd, ]: 2\n@[containerd, ]: 30\n@[bpftrace, ]: 1\n@[HangDetector, ]: 1\n@[node, ]: 1\n@[cpptools, ]: 3\n@[containerd, ]: 32\n\n\n@[cpptools, ]: 1\n@[node, ]: 1\n@[bpftrace, ]: 2\n@[timeout, ]: 2\n@[containerd, ]: 14\n", "stderr": "", "returncode": 0}{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:net:net_dev_xmit { \n  $skb = (struct sk_buff *)args->skbaddr; \n  if ($skb->protocol == 8 && $skb->data[13] == 2) { \n    printf(\"Source IP: %d.%d.%d.%d Source Port: %d Destination IP: %d.%d.%d.%d Destination Port: %d\\n\", \n      $skb->data[26], $skb->data[27], $skb->data[28], $skb->data[29], \n      ($skb->data[34] << 8) + $skb->data[35], \n      $skb->data[30], $skb->data[31], $skb->data[32], $skb->data[33], \n      ($skb->data[36] << 8) + $skb->data[37]); \n  } \n}", "stdout": "Attaching 1 probe...\n\n\n", "stderr": "", "returncode": 0}{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:raw_syscalls:sys_enter { @[comm, args->id] = count(); } interval:s:1 { print(@); clear(@); }", "stdout": "Attaching 2 probes...\n@[node, 280]: 1\n@[bpftrace, 32]: 1\n@[HangDetector, 202]: 1\n@[bpftrace, 186]: 1\n@[node, 4]: 1\n@[bpftrace, 298]: 1\n@[multipathd, 230]: 1\n@[node, 230]: 1\n@[node, 39]: 1\n@[cpptools, 0]: 1\n@[node, 47]: 1\n@[bpftrace, 257]: 1\n@[bpftrace, 3]: 2\n@[multipathd, 1]: 2\n@[containerd, 0]: 2\n@[node, 332]: 2\n@[bpftrace, 33]: 2\n@[containerd, 1]: 2\n@[sshd, 318]: 2\n@[node, 7]: 2\n@[node, 62]: 2\n@[sshd, 0]: 3\n@[sshd, 1]: 3\n@[multipathd, 202]: 3\n@[bpftrace, 16]: 3\n@[node, 16]: 5\n@[node, 262]: 5\n@[sshd, 271]: 6\n@[node, 3]: 7\n@[node, 257]: 7\n@[bpftrace, 232]: 10\n@[vmtoolsd, 7]: 11\n@[sshd, 14]: 12\n@[cpptools, 202]: 13\n@[node, 1]: 19\n@[node, 0]: 24\n@[containerd, 35]: 31\n@[node, 202]: 42\n@[vmtoolsd, 100]: 54\n@[node, 232]: 65\n@[bpftrace, 321]: 70\n@[containerd, 202]: 93\n@[containerd, 281]: 97\n@[node, 280]: 1\n@[containerd, 1]: 1\n@[HangDetector, 202]: 1\n@[bpftrace, 186]: 1\n@[node, 4]: 1\n@[containerd, 0]: 1\n@[multipathd, 230]: 1\n@[node, 230]: 1\n@[node, 47]: 1\n@[node, 332]: 1\n@[node, 7]: 2\n@[cpptools, 202]: 2\n@[sshd, 318]: 3\n@[node, 39]: 3\n@[multipathd, 202]: 3\n@[multipathd, 1]: 3\n@[node, 62]: 4\n@[node, 16]: 5\n@[node, 262]: 5\n@[node, 3]: 6\n@[node, 257]: 6\n@[sshd, 0]: 6\n@[sshd, 1]: 6\n@[bpftrace, 232]: 10\n@[vmtoolsd, 7]: 11\n@[sshd, 271]: 12\n@[sshd, 14]: 24\n@[node, 1]: 25\n@[containerd, 35]: 30\n@[node, 0]: 32\n@[vmtoolsd, 100]: 54\n@[node, 202]: 63\n@[bpftrace, 321]: 70\n@[node, 232]: 84\n@[containerd, 202]: 90\n@[containerd, 281]: 92\n@[node, 280]: 1\n@[HangDetector, 202]: 1\n@[bpftrace, 186]: 1\n@[node, 4]: 1\n@[multipathd, 230]: 1\n@[node, 230]: 1\n@[node, 332]: 1\n@[multipathd, 1]: 2\n@[node, 47]: 2\n@[node, 7]: 2\n@[sshd, 318]: 3\n@[multipathd, 202]: 3\n@[node, 39]: 3\n@[node, 62]: 4\n@[sshd, 1]: 4\n@[sshd, 0]: 4\n@[node, 16]: 5\n@[node, 262]: 5\n@[node, 257]: 6\n@[node, 3]: 6\n@[sshd, 271]: 8\n@[cpptools, 202]: 9\n@[vmtoolsd, 7]: 10\n@[bpftrace, 232]: 10\n@[sshd, 14]: 16\n@[node, 1]: 20\n@[node, 0]: 24\n@[containerd, 35]: 30\n@[vmtoolsd, 100]: 49\n@[node, 202]: 61\n@[bpftrace, 321]: 65\n@[node, 232]: 68\n@[containerd, 202]: 87\n@[containerd, 281]: 91\n@[node, 280]: 1\n@[containerd, 1]: 1\n@[HangDetector, 202]: 1\n@[bpftrace, 186]: 1\n@[node, 4]: 1\n@[containerd, 0]: 1\n@[multipathd, 230]: 1\n@[node, 230]: 1\n@[node, 39]: 1\n@[cpptools, 0]: 1\n@[node, 47]: 1\n@[node, 62]: 2\n@[sshd, 318]: 2\n@[multipathd, 1]: 2\n@[vmtoolsd, 262]: 2\n@[node, 332]: 2\n@[node, 7]: 3\n@[sshd, 0]: 3\n@[sshd, 1]: 3\n@[multipathd, 202]: 3\n@[node, 262]: 5\n@[node, 16]: 5\n@[cpptools, 202]: 6\n@[sshd, 271]: 6\n@[node, 257]: 7\n@[node, 3]: 7\n@[bpftrace, 232]: 10\n@[sshd, 14]: 12\n@[vmtoolsd, 7]: 12\n@[node, 1]: 19\n@[node, 0]: 24\n@[containerd, 35]: 30\n@[node, 202]: 46\n@[vmtoolsd, 100]: 58\n@[node, 232]: 61\n@[bpftrace, 321]: 70\n@[containerd, 202]: 92\n@[containerd, 281]: 97\n@[node, 280]: 1\n@[irqbalance, 7]: 1\n@[HangDetector, 202]: 1\n@[bpftrace, 186]: 1\n@[node, 4]: 1\n@[multipathd, 230]: 1\n@[node, 230]: 1\n@[node, 47]: 1\n@[irqbalance, 262]: 2\n@[multipathd, 1]: 2\n@[node, 7]: 2\n@[irqbalance, 257]: 2\n@[irqbalance, 3]: 2\n@[node, 39]: 2\n@[node, 62]: 3\n@[node, 332]: 3\n@[multipathd, 202]: 3\n@[sshd, 318]: 4\n@[node, 16]: 5\n@[node, 262]: 5\n@[sshd, 0]: 6\n@[sshd, 1]: 6\n@[node, 3]: 6\n@[node, 257]: 6\n@[irqbalance, 0]: 7\n@[cpptools, 202]: 9\n@[sshd, 271]: 10\n@[bpftrace, 232]: 10\n@[vmtoolsd, 7]: 11\n@[sshd, 14]: 20\n@[containerd, 35]: 30\n@[node, 1]: 30\n@[node, 0]: 36\n@[vmtoolsd, 100]: 54\n@[bpftrace, 321]: 67\n@[node, 232]: 72\n@[containerd, 202]: 90\n@[containerd, 281]: 92\n@[node, 202]: 117\n@[cpptools, 19]: 1\n@[node, 280]: 1\n@[node, 230]: 1\n@[multipathd, 230]: 1\n@[cpptools, 0]: 1\n@[HangDetector, 202]: 1\n@[bpftrace, 186]: 1\n@[node, 4]: 1\n@[containerd, 0]: 2\n@[node, 7]: 2\n@[multipathd, 1]: 2\n@[python3, 1]: 2\n@[containerd, 1]: 2\n@[node, 62]: 3\n@[node, 47]: 3\n@[node, 332]: 3\n@[node, 39]: 3\n@[node, 28]: 4\n@[node, 262]: 5\n@[node, 16]: 5\n@[cpptools, 202]: 6\n@[multipathd, 202]: 6\n@[node, 3]: 7\n@[node, 257]: 7\n@[python3, 44]: 9\n@[node, 10]: 10\n@[bpftrace, 232]: 10\n@[vmtoolsd, 7]: 11\n@[sshd, 318]: 14\n@[python3, 232]: 17\n@[python3, 45]: 18\n@[sshd, 1]: 25\n@[sshd, 0]: 25\n@[containerd, 35]: 30\n@[sshd, 271]: 50\n@[vmtoolsd, 100]: 54\n@[python3, 202]: 63\n@[bpftrace, 321]: 90\n@[containerd, 202]: 91\n@[node, 0]: 93\n@[containerd, 281]: 94\n@[node, 1]: 96\n@[sshd, 14]: 100\n@[python3, 16]: 147\n@[node, 232]: 180\n@[python3, 8]: 294\n@[python3, 0]: 294\n@[node, 202]: 317\n@[python3, 3]: 1634\n@[python3, 257]: 1685\n@[python3, 217]: 2975\n@[python3, 262]: 3345\n@[node, 280]: 1\n@[containerd, 1]: 1\n@[HangDetector, 202]: 1\n@[python3, 232]: 1\n@[bpftrace, 186]: 1\n@[containerd, 15]: 1\n@[containerd, 39]: 1\n@[containerd, 0]: 1\n@[multipathd, 230]: 1\n@[node, 230]: 1\n@[python3, 3]: 1\n@[containerd, 234]: 1\n@[python3, 1]: 1\n@[python3, 16]: 1\n@[multipathd, 1]: 2\n@[python3, 8]: 2\n@[node, 332]: 2\n@[python3, 257]: 2\n@[node, 4]: 2\n@[node, 62]: 3\n@[node, 7]: 3\n@[multipathd, 202]: 3\n@[node, 39]: 3\n@[node, 47]: 4\n@[python3, 0]: 4\n@[python3, 262]: 4\n@[node, 28]: 4\n@[node, 262]: 5\n@[node, 16]: 5\n@[node, 257]: 6\n@[node, 3]: 6\n@[python3, 202]: 8\n@[node, 10]: 8\n@[cpptools, 202]: 9\n@[bpftrace, 232]: 10\n@[vmtoolsd, 7]: 11\n@[sshd, 318]: 20\n@[containerd, 35]: 30\n@[sshd, 1]: 39\n@[sshd, 0]: 39\n@[vmtoolsd, 100]: 54\n@[sshd, 271]: 77\n@[containerd, 202]: 90\n@[bpftrace, 321]: 95\n@[containerd, 281]: 99\n@[node, 1]: 123\n@[node, 0]: 127\n@[sshd, 14]: 154\n@[node, 232]: 239\n@[node, 202]: 489\n@[node, 280]: 1\n@[node, 11]: 1\n@[multipathd, 230]: 1\n@[python3, 16]: 1\n@[HangDetector, 202]: 1\n@[node, 230]: 1\n@[node, 4]: 1\n@[python3, 3]: 1\n@[bpftrace, 186]: 1\n@[node, 7]: 2\n@[python3, 257]: 2\n@[cpptools, 202]: 2\n@[python3, 8]: 2\n@[multipathd, 202]: 3\n@[multipathd, 1]: 3\n@[dockerd, 35]: 3\n@[node, 62]: 4\n@[dockerd, 281]: 4\n@[node, 47]: 4\n@[node, 332]: 4\n@[node, 39]: 5\n@[node, 16]: 5\n@[node, 262]: 5\n@[node, 257]: 6\n@[python3, 44]: 6\n@[node, 3]: 6\n@[bpftrace, 232]: 10\n@[vmtoolsd, 7]: 10\n@[python3, 232]: 12\n@[dockerd, 202]: 12\n@[python3, 45]: 12\n@[python3, 262]: 13\n@[python3, 1]: 14\n@[node, 28]: 16\n@[python3, 0]: 17\n@[sshd, 318]: 18\n@[node, 10]: 28\n@[containerd, 35]: 30\n@[sshd, 0]: 32\n@[sshd, 1]: 33\n@[vmtoolsd, 100]: 49\n@[python3, 202]: 54\n@[sshd, 271]: 64\n@[containerd, 202]: 90\n@[bpftrace, 321]: 90\n@[containerd, 281]: 96\n@[node, 0]: 110\n@[node, 1]: 113\n@[sshd, 14]: 128\n@[node, 232]: 211\n@[node, 202]: 449\n@[node, 230]: 1\n@[node, 280]: 1\n@[cpptools, 19]: 1\n@[containerd, 1]: 1\n@[multipathd, 230]: 1\n@[HangDetector, 202]: 1\n@[python3, 3]: 1\n@[bpftrace, 186]: 1\n@[node, 4]: 1\n@[cpptools, 0]: 1\n@[containerd, 0]: 1\n@[node, 47]: 1\n@[multipathd, 1]: 2\n@[node, 39]: 2\n@[containerd, 234]: 2\n@[node, 7]: 2\n@[containerd, 39]: 2\n@[containerd, 15]: 2\n@[vmtoolsd, 262]: 2\n@[node, 332]: 2\n@[python3, 217]: 2\n@[node, 62]: 3\n@[multipathd, 202]: 3\n@[python3, 44]: 3\n@[sshd, 318]: 4\n@[node, 16]: 5\n@[node, 262]: 5\n@[python3, 1]: 5\n@[sshd, 1]: 6\n@[python3, 0]: 6\n@[sshd, 0]: 6\n@[python3, 45]: 6\n@[python3, 232]: 6\n@[node, 257]: 7\n@[node, 3]: 7\n@[bpftrace, 232]: 10\n@[sshd, 271]: 12\n@[vmtoolsd, 7]: 12\n@[cpptools, 202]: 13\n@[python3, 257]: 17\n@[sshd, 14]: 24\n@[python3, 202]: 27\n@[node, 1]: 30\n@[containerd, 35]: 31\n@[python3, 262]: 32\n@[node, 0]: 33\n@[vmtoolsd, 100]: 58\n@[node, 232]: 73\n@[node, 202]: 91\n@[containerd, 202]: 92\n@[bpftrace, 321]: 96\n@[containerd, 281]: 105\n@[node, 280]: 1\n@[containerd, 1]: 1\n@[HangDetector, 202]: 1\n@[bpftrace, 186]: 1\n@[node, 4]: 1\n@[containerd, 15]: 1\n@[containerd, 39]: 1\n@[containerd, 0]: 1\n@[multipathd, 230]: 1\n@[node, 230]: 1\n@[node, 39]: 1\n@[python3, 0]: 1\n@[node, 47]: 1\n@[containerd, 234]: 1\n@[node, 332]: 1\n@[node, 7]: 2\n@[sshd, 318]: 2\n@[cpptools, 202]: 2\n@[multipathd, 1]: 2\n@[node, 62]: 2\n@[sshd, 0]: 3\n@[multipathd, 202]: 3\n@[sshd, 1]: 3\n@[node, 16]: 5\n@[node, 262]: 5\n@[node, 257]: 6\n@[node, 3]: 6\n@[sshd, 271]: 6\n@[bpftrace, 232]: 10\n@[vmtoolsd, 7]: 11\n@[sshd, 14]: 12\n@[node, 1]: 16\n@[node, 0]: 22\n@[containerd, 35]: 30\n@[node, 232]: 51\n@[vmtoolsd, 100]: 54\n@[node, 202]: 62\n@[bpftrace, 321]: 79\n@[containerd, 202]: 90\n@[containerd, 281]: 98\n@[node, 280]: 1\n@[cpptools, 19]: 1\n@[HangDetector, 202]: 1\n@[bpftrace, 186]: 1\n@[node, 4]: 1\n@[containerd, 15]: 1\n@[containerd, 39]: 1\n@[multipathd, 230]: 1\n@[node, 230]: 1\n@[cpptools, 0]: 1\n@[node, 47]: 1\n@[containerd, 234]: 1\n@[multipathd, 1]: 2\n@[node, 7]: 2\n@[node, 39]: 2\n@[node, 332]: 2\n@[multipathd, 202]: 3\n@[containerd, 1]: 3\n@[node, 62]: 3\n@[python3, 44]: 3\n@[containerd, 0]: 3\n@[python3, 16]: 3\n@[python3, 3]: 3\n@[node, 16]: 5\n@[node, 262]: 5\n@[python3, 8]: 6\n@[python3, 232]: 6\n@[python3, 45]: 6\n@[node, 257]: 7\n@[node, 3]: 7\n@[sshd, 318]: 10\n@[bpftrace, 232]: 10\n@[vmtoolsd, 7]: 11\n@[cpptools, 202]: 13\n@[sshd, 0]: 19\n@[sshd, 1]: 19\n@[python3, 202]: 26\n@[python3, 257]: 28\n@[containerd, 35]: 30\n@[sshd, 271]: 38\n@[python3, 262]: 43\n@[python3, 1]: 45\n@[vmtoolsd, 100]: 54\n@[python3, 0]: 54\n@[python3, 9]: 55\n@[python3, 11]: 55\n@[node, 1]: 69\n@[node, 0]: 73\n@[sshd, 14]: 76\n@[containerd, 202]: 92\n@[bpftrace, 321]: 93\n@[containerd, 281]: 102\n@[node, 232]: 136\n@[node, 202]: 240\n@[node, 280]: 1\n@[HangDetector, 202]: 1\n@[bpftrace, 186]: 1\n@[git, 1]: 1\n@[containerd, 15]: 1\n@[containerd, 39]: 1\n@[git, 16]: 1\n@[multipathd, 230]: 1\n@[node, 230]: 1\n@[containerd, 234]: 1\n@[git, 80]: 1\n@[containerd, 0]: 2\n@[containerd, 1]: 2\n@[cpptools, 202]: 2\n@[python3, 0]: 2\n@[multipathd, 1]: 2\n@[node, 12]: 2\n@[node, 4]: 3\n@[multipathd, 202]: 3\n@[node, 332]: 3\n@[git, 318]: 4\n@[git, 302]: 4\n@[git, 273]: 4\n@[node, 56]: 4\n@[git, 13]: 4\n@[git, 231]: 4\n@[git, 14]: 4\n@[node, 273]: 4\n@[node, 80]: 4\n@[node, 15]: 4\n@[git, 218]: 4\n@[git, 334]: 4\n@[node, 62]: 4\n@[node, 7]: 4\n@[node, 39]: 5\n@[node, 262]: 5\n@[git, 11]: 8\n@[node, 293]: 8\n@[git, 17]: 8\n@[git, 107]: 8\n@[node, 28]: 8\n@[git, 158]: 8\n@[node, 257]: 9\n@[node, 53]: 10\n@[bpftrace, 232]: 10\n@[node, 47]: 11\n@[vmtoolsd, 7]: 11\n@[git, 12]: 12\n@[node, 33]: 12\n@[node, 14]: 12\n@[node, 72]: 12\n@[git, 79]: 12\n@[node, 59]: 12\n@[node, 16]: 15\n@[node, 233]: 18\n@[node, 10]: 18\n@[node, 61]: 20\n@[git, 10]: 20\n@[sshd, 318]: 27\n@[containerd, 35]: 31\n@[sshd, 0]: 51\n@[sshd, 1]: 53\n@[vmtoolsd, 100]: 54\n@[git, 3]: 55\n@[git, 21]: 56\n@[node, 3]: 65\n@[git, 257]: 67\n@[git, 0]: 70\n@[git, 9]: 74\n@[containerd, 202]: 89\n@[containerd, 281]: 95\n@[sshd, 271]: 102\n@[node, 13]: 116\n@[bpftrace, 321]: 130\n@[git, 262]: 134\n@[node, 1]: 191\n@[node, 0]: 193\n@[sshd, 14]: 204\n@[node, 232]: 316\n@[node, 202]: 676\n@[node, 280]: 1\n@[containerd, 1]: 1\n@[HangDetector, 202]: 1\n@[bpftrace, 186]: 1\n@[node, 4]: 1\n@[containerd, 15]: 1\n@[containerd, 39]: 1\n@[containerd, 0]: 1\n@[multipathd, 230]: 1\n@[node, 230]: 1\n@[python3, 0]: 1\n@[containerd, 234]: 1\n@[node, 332]: 1\n@[node, 47]: 2\n@[multipathd, 1]: 2\n@[node, 7]: 2\n@[node, 62]: 3\n@[multipathd, 202]: 3\n@[node, 39]: 3\n@[node, 16]: 5\n@[node, 262]: 5\n@[sshd, 318]: 6\n@[node, 3]: 6\n@[node, 257]: 6\n@[cpptools, 202]: 9\n@[bpftrace, 232]: 10\n@[sshd, 0]: 11\n@[sshd, 1]: 11\n@[node, 28]: 12\n@[vmtoolsd, 7]: 14\n@[sshd, 271]: 22\n@[node, 10]: 24\n@[containerd, 35]: 30\n@[node, 1]: 41\n@[sshd, 14]: 44\n@[node, 0]: 46\n@[vmtoolsd, 100]: 72\n@[containerd, 202]: 89\n@[bpftrace, 321]: 92\n@[containerd, 281]: 98\n@[node, 232]: 110\n@[node, 202]: 140\n@[multipathd, 230]: 1\n@[node, 47]: 1\n@[containerd, 234]: 1\n@[HangDetector, 202]: 1\n@[cpptools, 0]: 1\n@[python3, 0]: 1\n@[node, 230]: 1\n@[bpftrace, 186]: 1\n@[cpptools, 19]: 1\n@[containerd, 39]: 1\n@[containerd, 15]: 1\n@[vmtoolsd, 137]: 1\n@[node, 4]: 1\n@[node, 280]: 1\n@[vmtoolsd, 63]: 2\n@[vmtoolsd, 49]: 2\n@[vmtoolsd, 72]: 2\n@[node, 39]: 2\n@[node, 7]: 2\n@[node, 332]: 2\n@[sshd, 318]: 2\n@[vmtoolsd, 51]: 2\n@[vmtoolsd, 439]: 3\n@[multipathd, 1]: 3\n@[sshd, 0]: 3\n@[sshd, 1]: 3\n@[multipathd, 202]: 3\n@[node, 62]: 3\n@[vmtoolsd, 45]: 4\n@[vmtoolsd, 21]: 4\n@[node, 16]: 5\n@[node, 262]: 5\n@[vmtoolsd, 44]: 6\n@[cpptools, 202]: 6\n@[sshd, 271]: 6\n@[node, 257]: 7\n@[node, 3]: 7\n@[vmtoolsd, 257]: 8\n@[bpftrace, 232]: 10\n@[sshd, 14]: 12\n@[vmtoolsd, 262]: 12\n@[vmtoolsd, 47]: 12\n@[vmtoolsd, 7]: 15\n@[vmtoolsd, 0]: 16\n@[node, 1]: 19\n@[node, 0]: 24\n@[vmtoolsd, 16]: 29\n@[containerd, 35]: 30\n@[vmtoolsd, 41]: 31\n@[vmtoolsd, 89]: 38\n@[vmtoolsd, 3]: 38\n@[node, 202]: 51\n@[node, 232]: 66\n@[vmtoolsd, 100]: 76\n@[containerd, 202]: 91\n@[bpftrace, 321]: 94\n@[containerd, 281]: 99\n@[HangDetector, 202]: 1\n@[node, 280]: 1\n@[node, 230]: 1\n@[multipathd, 230]: 1\n@[vmtoolsd, 44]: 1\n@[multipathd, 7]: 1\n@[bpftrace, 186]: 1\n@[node, 4]: 1\n@[irqbalance, 7]: 1\n@[containerd, 15]: 1\n@[containerd, 234]: 1\n@[containerd, 39]: 1\n@[multipathd, 1]: 2\n@[vmtoolsd, 45]: 2\n@[irqbalance, 257]: 2\n@[irqbalance, 3]: 2\n@[node, 332]: 2\n@[irqbalance, 262]: 2\n@[multipathd, 202]: 3\n@[node, 62]: 3\n@[node, 7]: 3\n@[node, 47]: 3\n@[python3, 1]: 3\n@[node, 39]: 3\n@[node, 28]: 4\n@[node, 262]: 5\n@[node, 16]: 5\n@[vmtoolsd, 257]: 6\n@[vmtoolsd, 262]: 6\n@[node, 257]: 6\n@[vmtoolsd, 3]: 6\n@[node, 3]: 6\n@[irqbalance, 0]: 7\n@[cpptools, 202]: 9\n@[python3, 44]: 9\n@[bpftrace, 232]: 10\n@[vmtoolsd, 7]: 12\n@[node, 10]: 12\n@[vmtoolsd, 21]: 15\n@[sshd, 318]: 17\n@[python3, 45]: 18\n@[python3, 232]: 18\n@[vmtoolsd, 0]: 22\n@[sshd, 1]: 30\n@[sshd, 0]: 30\n@[containerd, 35]: 30\n@[python3, 202]: 46\n@[vmtoolsd, 100]: 58\n@[sshd, 271]: 59\n@[containerd, 202]: 91\n@[containerd, 281]: 98\n@[node, 0]: 102\n@[node, 1]: 104\n@[bpftrace, 321]: 107\n@[sshd, 14]: 118\n@[python3, 16]: 148\n@[node, 232]: 203\n@[python3, 8]: 296\n@[python3, 0]: 298\n@[node, 202]: 352\n@[python3, 3]: 1635\n@[python3, 257]: 1687\n@[python3, 217]: 2975\n@[python3, 262]: 3349\n@[node, 280]: 1\n@[cpptools, 19]: 1\n@[snapd, 202]: 1\n@[HangDetector, 202]: 1\n@[bpftrace, 186]: 1\n@[node, 4]: 1\n@[snapd, 35]: 1\n@[multipathd, 230]: 1\n@[node, 230]: 1\n@[node, 39]: 1\n@[python3, 0]: 1\n@[cpptools, 0]: 1\n@[node, 47]: 1\n@[node, 62]: 2\n@[node, 10]: 2\n@[multipathd, 1]: 2\n@[node, 332]: 2\n@[node, 7]: 3\n@[multipathd, 202]: 3\n@[node, 262]: 5\n@[node, 16]: 5\n@[sshd, 318]: 6\n@[cpptools, 202]: 6\n@[node, 257]: 7\n@[node, 3]: 7\n@[bpftrace, 232]: 10\n@[vmtoolsd, 7]: 11\n@[sshd, 1]: 11\n@[sshd, 0]: 11\n@[sshd, 271]: 22\n@[containerd, 35]: 30\n@[node, 1]: 41\n@[sshd, 14]: 44\n@[node, 0]: 46\n@[vmtoolsd, 100]: 54\n@[bpftrace, 321]: 83\n@[containerd, 202]: 90\n@[containerd, 281]: 91\n@[node, 232]: 97\n@[node, 202]: 146\n@[node, 280]: 1\n@[HangDetector, 202]: 1\n@[node, 332]: 1\n@[bpftrace, 186]: 1\n@[node, 4]: 1\n@[multipathd, 230]: 1\n@[node, 230]: 1\n@[python3, 0]: 1\n@[node, 47]: 1\n@[multipathd, 1]: 2\n@[node, 7]: 2\n@[multipathd, 202]: 3\n@[node, 39]: 3\n@[sshd, 318]: 4\n@[node, 62]: 4\n@[node, 16]: 5\n@[node, 262]: 5\n@[node, 3]: 6\n@[node, 257]: 6\n@[sshd, 0]: 8\n@[sshd, 1]: 8\n@[cpptools, 202]: 9\n@[vmtoolsd, 7]: 10\n@[bpftrace, 232]: 10\n@[sshd, 271]: 16\n@[containerd, 35]: 30\n@[node, 1]: 31\n@[sshd, 14]: 32\n@[node, 0]: 38\n@[vmtoolsd, 100]: 50\n@[bpftrace, 321]: 69\n@[node, 232]: 86\n@[containerd, 281]: 90\n@[containerd, 202]: 90\n@[node, 202]: 114\n@[containerd, 39]: 1\n@[containerd, 234]: 1\n@[python3, 0]: 1\n@[dockerd, 35]: 1\n@[node, 230]: 1\n@[multipathd, 230]: 1\n@[git, 16]: 1\n@[containerd, 0]: 1\n@[containerd, 15]: 1\n@[node, 12]: 1\n@[git, 1]: 1\n@[bpftrace, 186]: 1\n@[git, 80]: 1\n@[HangDetector, 202]: 1\n@[containerd, 1]: 1\n@[node, 280]: 1\n@[dockerd, 281]: 2\n@[multipathd, 1]: 2\n@[cpptools, 202]: 2\n@[multipathd, 202]: 3\n@[node, 332]: 3\n@[node, 273]: 4\n@[git, 302]: 4\n@[node, 80]: 4\n@[git, 273]: 4\n@[node, 4]: 4\n@[git, 14]: 4\n@[git, 334]: 4\n@[git, 231]: 4\n@[node, 15]: 4\n@[git, 218]: 4\n@[git, 13]: 4\n@[node, 56]: 4\n@[git, 318]: 4\n@[node, 62]: 4\n@[node, 262]: 5\n@[dockerd, 202]: 5\n@[node, 7]: 5\n@[node, 39]: 6\n@[node, 47]: 7\n@[git, 17]: 8\n@[git, 158]: 8\n@[git, 107]: 8\n@[node, 293]: 8\n@[git, 11]: 8\n@[node, 257]: 9\n@[node, 53]: 10\n@[bpftrace, 232]: 10\n@[vmtoolsd, 7]: 11\n@[node, 59]: 12\n@[git, 12]: 12\n@[node, 28]: 12\n@[node, 33]: 12\n@[git, 79]: 12\n@[node, 14]: 12\n@[node, 72]: 12\n@[node, 16]: 15\n@[node, 233]: 18\n@[git, 10]: 20\n@[node, 61]: 21\n@[sshd, 318]: 26\n@[node, 10]: 28\n@[containerd, 35]: 30\n@[sshd, 0]: 48\n@[sshd, 1]: 50\n@[vmtoolsd, 100]: 53\n@[git, 3]: 55\n@[git, 21]: 56\n@[node, 3]: 65\n@[git, 257]: 67\n@[git, 0]: 70\n@[git, 9]: 74\n@[containerd, 202]: 90\n@[sshd, 271]: 94\n@[containerd, 281]: 99\n@[node, 13]: 116\n@[bpftrace, 321]: 128\n@[git, 262]: 134\n@[node, 1]: 179\n@[sshd, 14]: 188\n@[node, 0]: 190\n@[node, 232]: 309\n@[node, 202]: 655\n@[node, 280]: 1\n@[cpptools, 19]: 1\n@[HangDetector, 202]: 1\n@[bpftrace, 186]: 1\n@[node, 4]: 1\n@[multipathd, 230]: 1\n@[node, 230]: 1\n@[cpptools, 0]: 1\n@[node, 47]: 1\n@[node, 332]: 2\n@[node, 62]: 2\n@[node, 7]: 2\n@[vmtoolsd, 262]: 2\n@[multipathd, 1]: 2\n@[node, 39]: 2\n@[containerd, 1]: 2\n@[containerd, 0]: 2\n@[node, 28]: 4\n@[node, 262]: 4\n@[node, 16]: 4\n@[node, 257]: 6\n@[node, 3]: 6\n@[sshd, 318]: 7\n@[multipathd, 202]: 8\n@[node, 10]: 8\n@[bpftrace, 232]: 10\n@[vmtoolsd, 7]: 12\n@[sshd, 0]: 12\n@[sshd, 1]: 12\n@[cpptools, 202]: 13\n@[sshd, 271]: 24\n@[containerd, 35]: 30\n@[node, 1]: 46\n@[sshd, 14]: 48\n@[node, 0]: 49\n@[vmtoolsd, 100]: 58\n@[bpftrace, 321]: 89\n@[containerd, 202]: 92\n@[containerd, 281]: 97\n@[node, 232]: 104\n@[node, 202]: 158\n\n\n@[containerd, 1]: 1\n@[multipathd, 230]: 1\n@[node, 230]: 1\n@[timeout, 130]: 1\n@[timeout, 61]: 1\n@[node, 39]: 1\n@[containerd, 0]: 1\n@[python3, 3]: 1\n@[node, 7]: 1\n@[node, 62]: 1\n@[cpptools, 202]: 1\n@[bpftrace, 15]: 1\n@[timeout, 15]: 1\n@[bpftrace, 16]: 1\n@[node, 332]: 1\n@[bpftrace, 3]: 1\n@[python3, 16]: 1\n@[python3, 257]: 2\n@[node, 47]: 2\n@[python3, 8]: 2\n@[timeout, 13]: 2\n@[node, 16]: 3\n@[multipathd, 202]: 3\n@[node, 257]: 3\n@[node, 262]: 3\n@[node, 3]: 3\n@[multipathd, 1]: 3\n@[timeout, 62]: 4\n@[node, 28]: 4\n@[bpftrace, 232]: 6\n@[python3, 44]: 6\n@[vmtoolsd, 7]: 6\n@[python3, 1]: 7\n@[sshd, 318]: 8\n@[python3, 262]: 8\n@[node, 10]: 8\n@[bpftrace, 321]: 8\n@[python3, 232]: 11\n@[python3, 0]: 12\n@[python3, 45]: 12\n@[containerd, 35]: 16\n@[sshd, 0]: 16\n@[sshd, 1]: 16\n@[vmtoolsd, 100]: 29\n@[sshd, 271]: 32\n@[python3, 202]: 36\n@[node, 0]: 47\n@[containerd, 202]: 48\n@[node, 1]: 49\n@[containerd, 281]: 50\n@[sshd, 14]: 64\n@[node, 232]: 83\n@[node, 202]: 210\n", "stderr": "", "returncode": 0}{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }", "stdout": "Attaching 2 probes...\n@: 558\n@: 524\n@: 529\n@: 572\n@: 610\n@: 578\n@: 511\n@: 472\n@: 601\n@: 610\n@: 545\n@: 585\n@: 534\n@: 538\n@: 622\n@: 567\n@: 493\n@: 536\n@: 664\n\n\n@: 470\n", "stderr": "", "returncode": 0}{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter_socket { printf(\"PID %d, Socket Type %d\n\", pid, args->type); }", "stdout": "", "stderr": "stdin:1:40-71: ERROR: unterminated string\ntracepoint:syscalls:sys_enter_socket { printf(\"PID %d, Socket Type %d\n                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nstdin:2:1-23: ERROR: unterminated string\n\", pid, args->type); }\n~~~~~~~~~~~~~~~~~~~~~~\nstdin:2:1-23: ERROR: syntax error, unexpected end of file\n\", pid, args->type); }\n~~~~~~~~~~~~~~~~~~~~~~\n", "returncode": 1}{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter_read { @read[comm, str(args->filename)] = hist(args->count); } tracepoint:syscalls:sys_enter_write { @write[comm, str(args->filename)] = hist(args->count); }", "stdout": "", "stderr": "stdin:1:50-68: ERROR: Struct/union of type 'struct _tracepoint_syscalls_sys_enter_read' does not contain a field named 'filename'\ntracepoint:syscalls:sys_enter_read { @read[comm, str(args->filename)] = hist(args->count); } tracepoint:syscalls:sys_enter_write { @write[comm, str(args->filename)] = hist(args->count); }\n                                                 ~~~~~~~~~~~~~~~~~~\nstdin:1:50-69: ERROR: str() expects an integer or a pointer type as first argument (none provided)\ntracepoint:syscalls:sys_enter_read { @read[comm, str(args->filename)] = hist(args->count); } tracepoint:syscalls:sys_enter_write { @write[comm, str(args->filename)] = hist(args->count); }\n                                                 ~~~~~~~~~~~~~~~~~~~\nstdin:1:145-163: ERROR: Struct/union of type 'struct _tracepoint_syscalls_sys_enter_write' does not contain a field named 'filename'\ntracepoint:syscalls:sys_enter_read { @read[comm, str(args->filename)] = hist(args->count); } tracepoint:syscalls:sys_enter_write { @write[comm, str(args->filename)] = hist(args->count); }\n                                                                                                                                                ~~~~~~~~~~~~~~~~~~\nstdin:1:145-164: ERROR: str() expects an integer or a pointer type as first argument (none provided)\ntracepoint:syscalls:sys_enter_read { @read[comm, str(args->filename)] = hist(args->count); } tracepoint:syscalls:sys_enter_write { @write[comm, str(args->filename)] = hist(args->count); }\n                                                                                                                                                ~~~~~~~~~~~~~~~~~~~\n", "returncode": 1}{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }", "stdout": "Attaching 1 probe...\n\n\n@[dockerd]: 1\n@[containerd]: 33\n@[cpptools]: 586\n@[sshd]: 4326\n@[irqbalance]: 14336\n@[git]: 14876\n@[node]: 19344\n@[vmtoolsd]: 20237\n", "stderr": "", "returncode": 0}{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:sys_unshare, kprobe:sys_clone /args->flags & CLONE_NEWNET/ { printf(\"PID %d created a new network namespace\n\", pid); } kprobe:sys_close /args->fd == netns_fd/ { printf(\"PID %d closed network namespace\n\", pid); }", "stdout": "", "stderr": "stdin:1:69-116: ERROR: unterminated string\nkprobe:sys_unshare, kprobe:sys_clone /args->flags & CLONE_NEWNET/ { printf(\"PID %d created a new network namespace\n                                                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nstdin:2:1-65: ERROR: syntax error, unexpected identifier, expecting ) or \",\"\n\", pid); } kprobe:sys_close /args->fd == netns_fd/ { printf(\"PID %d closed network namespace\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n", "returncode": 1}{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter_open { printf(\"%s opened file %s\n\", comm, str(args->filename)); }", "stdout": "", "stderr": "stdin:1:38-64: ERROR: unterminated string\ntracepoint:syscalls:sys_enter_open { printf(\"%s opened file %s\n                                     ~~~~~~~~~~~~~~~~~~~~~~~~~\nstdin:2:1-33: ERROR: unterminated string\n\", comm, str(args->filename)); }\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nstdin:2:1-33: ERROR: syntax error, unexpected end of file\n\", comm, str(args->filename)); }\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n", "returncode": 1}{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e hardware:cache-misses:1000000 { @[comm] = count(); }", "stdout": "Attaching 1 probe...\n", "stderr": "perf_event_open failed: No such file or directory\nERROR: Error attaching probe: hardware:cache-misses:1000000\n", "returncode": 255}{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e software:faults:1 { @[comm] = count(); }", "stdout": "Attaching 1 probe...\n\n\n@[timeout]: 3\n@[bash]: 39\n@[sleep]: 66\n@[git]: 555\n@[node]: 2997\n", "stderr": "", "returncode": 0}{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e uretprobe:/bin/bash:readline { printf(\"%s\\n\", str(retval)); } u:./bash:exit { printf(\"Exit code: %d\\n\", arg1); }", "stdout": "", "stderr": "stdin:1:62-76: ERROR: uprobe target file './bash' does not exist or is not executable\nuretprobe:/bin/bash:readline { printf(\"%s\\n\", str(retval)); } u:./bash:exit { printf(\"Exit code: %d\\n\", arg1); }\n                                                             ~~~~~~~~~~~~~~\n", "returncode": 1}{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:lookup_fast { printf(\"PID %d %s dcache lookup: %s\\n\", pid, comm, str(args->name)); }", "stdout": "", "stderr": "stdin:1:73-81: ERROR: The args builtin can only be used with tracepoint/kfunc/uprobeprobes (kprobe used here)\nkprobe:lookup_fast { printf(\"PID %d %s dcache lookup: %s\\n\", pid, comm, str(args->name)); }\n                                                                        ~~~~~~~~\nstdin:1:73-88: ERROR: str() expects an integer or a pointer type as first argument (none provided)\nkprobe:lookup_fast { printf(\"PID %d %s dcache lookup: %s\\n\", pid, comm, str(args->name)); }\n                                                                        ~~~~~~~~~~~~~~~\n", "returncode": 1}{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:block:block_rq_issue /args->cmd == \"F\"/ { printf(\"PID %d %s md flush event\n\", pid, comm); }", "stdout": "", "stderr": "stdin:1:54-87: ERROR: unterminated string\ntracepoint:block:block_rq_issue /args->cmd == \"F\"/ { printf(\"PID %d %s md flush event\n                                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nstdin:2:1-17: ERROR: unterminated string\n\", pid, comm); }\n~~~~~~~~~~~~~~~~\nstdin:2:1-17: ERROR: syntax error, unexpected end of file\n\", pid, comm); }\n~~~~~~~~~~~~~~~~\n", "returncode": 1}{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:finish_task_switch { @ = hist(delta / 1000); }", "stdout": "", "stderr": "stdin:1:33-43: ERROR: Unknown identifier: 'delta'\nkprobe:finish_task_switch { @ = hist(delta / 1000); }\n                                ~~~~~~~~~~\n", "returncode": 1}{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:finish_task_switch { @ = hist(prev->nr_running); }", "stdout": "", "stderr": "stdin:1:33-42: ERROR: Unknown identifier: 'prev'\nkprobe:finish_task_switch { @ = hist(prev->nr_running); }\n                                ~~~~~~~~~\n", "returncode": 1}{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:sched:sched_process_fork { printf(\"New thread: PID %d, TID %d\n\", args->parent_pid, args->child_pid); }", "stdout": "", "stderr": "stdin:1:39-74: ERROR: unterminated string\ntracepoint:sched:sched_process_fork { printf(\"New thread: PID %d, TID %d\n                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nstdin:2:1-41: ERROR: unterminated string\n\", args->parent_pid, args->child_pid); }\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nstdin:2:1-41: ERROR: syntax error, unexpected end of file\n\", args->parent_pid, args->child_pid); }\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n", "returncode": 1}{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:kvm_exit { @[args->exit_reason] = count(); }", "stdout": "", "stderr": "stdin:1:19-25: ERROR: The args builtin can only be used with tracepoint/kfunc/uprobeprobes (kprobe used here)\nkprobe:kvm_exit { @[args->exit_reason] = count(); }\n                  ~~~~~~\n", "returncode": 1}{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter_mount, tracepoint:syscalls:sys_enter_umount { printf(\"PID %d %s\\n\", pid, comm); }", "stdout": "Attaching 2 probes...\n\n\n", "stderr": "", "returncode": 0}{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:bpf:bpf_jit_compile { printf(\"BPF JIT compile event: PID %d, COMM %s, FUNC %s\\n\", pid, comm, str(args->func_name)); }", "stdout": "", "stderr": "stdin:1:1-31: ERROR: tracepoint not found: bpf:bpf_jit_compile\ntracepoint:bpf:bpf_jit_compile { printf(\"BPF JIT compile event: PID %d, COMM %s, FUNC %s\\n\", pid, comm, str(args->func_name)); }\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n", "returncode": 1}{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:block:block_rq_issue { printf(\"PID %d %s %d\n\", pid, comm, args->bytes); }", "stdout": "", "stderr": "stdin:1:35-56: ERROR: unterminated string\ntracepoint:block:block_rq_issue { printf(\"PID %d %s %d\n                                  ~~~~~~~~~~~~~~~~~~~~\nstdin:2:1-30: ERROR: unterminated string\n\", pid, comm, args->bytes); }\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nstdin:2:1-30: ERROR: syntax error, unexpected end of file\n\", pid, comm, args->bytes); }\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n", "returncode": 1}{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:btrfs:btrfs_ioctl { printf(\"%s %s\\n\", comm, str(args->filename)); }", "stdout": "", "stderr": "stdin:1:1-29: ERROR: tracepoint not found: btrfs:btrfs_ioctl\ntracepoint:btrfs:btrfs_ioctl { printf(\"%s %s\\n\", comm, str(args->filename)); }\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n", "returncode": 1}{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:security:cap_capable { printf(\"PID %d requested capability %d\\n\", pid, args->cap); }", "stdout": "", "stderr": "stdin:1:1-32: ERROR: tracepoint not found: security:cap_capable\ntracepoint:security:cap_capable { printf(\"PID %d requested capability %d\\n\", pid, args->cap); }\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n", "returncode": 1}{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:compact_zone { printf(\"PID %d compact zone latency %d\n\", pid, args->latency); }", "stdout": "", "stderr": "stdin:1:23-62: ERROR: unterminated string\nkprobe:compact_zone { printf(\"PID %d compact zone latency %d\n                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nstdin:2:1-26: ERROR: unterminated string\n\", pid, args->latency); }\n~~~~~~~~~~~~~~~~~~~~~~~~~\nstdin:2:1-26: ERROR: syntax error, unexpected end of file\n\", pid, args->latency); }\n~~~~~~~~~~~~~~~~~~~~~~~~~\n", "returncode": 1}{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:preempt_disable { @start[tid] = nsecs; } kprobe:preempt_enable /@start[tid]/ { @time[tid, comm] = hist(nsecs - @start[tid]); delete(@start[tid]); } interval:s:1 { print(@time); clear(@time); }", "stdout": "Attaching 3 probes...\n", "stderr": "stdin:1:1-23: WARNING: preempt_disable is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\nkprobe:preempt_disable { @start[tid] = nsecs; } kprobe:preempt_enable /@start[tid]/ { @time[tid, comm] = hist(nsecs - @start[tid]); delete(@start[tid]); } interval:s:1 { print(@time); clear(@time); }\n~~~~~~~~~~~~~~~~~~~~~~\nstdin:1:48-70: WARNING: preempt_enable is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\nkprobe:preempt_disable { @start[tid] = nsecs; } kprobe:preempt_enable /@start[tid]/ { @time[tid, comm] = hist(nsecs - @start[tid]); delete(@start[tid]); } interval:s:1 { print(@time); clear(@time); }\n                                               ~~~~~~~~~~~~~~~~~~~~~~\ncannot attach kprobe, probe entry may not exist\nERROR: Error attaching probe: 'kprobe:preempt_enable'\n", "returncode": 255}{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter_kill { printf(\"PID %d issued kill signal to PID %d with signal %d\n\", pid, args->pid, args->sig); }", "stdout": "", "stderr": "stdin:1:38-97: ERROR: unterminated string\ntracepoint:syscalls:sys_enter_kill { printf(\"PID %d issued kill signal to PID %d with signal %d\n                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nstdin:2:1-33: ERROR: unterminated string\n\", pid, args->pid, args->sig); }\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nstdin:2:1-33: ERROR: syntax error, unexpected end of file\n\", pid, args->pid, args->sig); }\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n", "returncode": 1}{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:mutex_lock { @[comm] = count(); }", "stdout": "Attaching 1 probe...\n\n\n@[rcu_tasks_rude_]: 1\n@[rcu_tasks_kthre]: 1\n@[kworker/u256:0]: 1\n@[khugepaged]: 2\n@[systemd-journal]: 2\n@[dockerd]: 4\n@[bpftrace]: 9\n@[git]: 18\n@[irqbalance]: 28\n@[cpptools]: 28\n@[kcompactd0]: 38\n@[containerd]: 146\n@[kworker/0:0]: 511\n@[kworker/1:1]: 548\n@[vmtoolsd]: 605\n@[node]: 893\n", "stderr": "", "returncode": 0}{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter_shmget { printf(\"%s %d\\n\", comm, args->size); }", "stdout": "Attaching 1 probe...\n\n\n", "stderr": "", "returncode": 0}{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:kmem_cache_alloc { @[comm] = count(); } interval:s:1 { print(@); clear(@); }", "stdout": "Attaching 2 probes...\n@[systemd-journal]: 2\n@[irqbalance]: 11\n@[kworker/u256:0]: 23\n@[node]: 28\n@[node]: 28\n@[kworker/1:2H]: 2\n@[kworker/u256:0]: 4\n@[node]: 33\n@[kworker/u256:1]: 34\n@[node]: 28\n@[vmtoolsd]: 2\n@[jbd2/sda2-8]: 19\n@[node]: 34\n@[node]: 28\n@[node]: 28\n@[containerd]: 2\n@[node]: 29\n@[containerd]: 1\n@[node]: 28\n@[rs:main Q:Reg]: 6\n@[vmtoolsd]: 7\n@[jbd2/sda2-8]: 15\n@[systemd]: 30\n@[node]: 33\n@[systemd-resolve]: 39\n@[systemd-timesyn]: 56\n@[systemd-network]: 57\n@[systemd-journal]: 59\n@[pool-spawner]: 1\n@[systemd-journal]: 2\n@[kworker/u256:1]: 7\n@[irqbalance]: 11\n@[node]: 28\n@[vmtoolsd]: 276\n@[systemd]: 5\n@[node]: 28\n@[snapd]: 43\n@[node]: 33\n@[node]: 28\n@[containerd]: 1\n@[vmtoolsd]: 2\n@[jbd2/sda2-8]: 15\n@[kworker/u256:1]: 28\n@[node]: 33\n@[node]: 29\n@[node]: 28\n@[containerd]: 4\n@[cron]: 5\n@[node]: 33\n@[node]: 28\n\n\n@[timeout]: 1\n@[vmtoolsd]: 2\n@[node]: 25\n", "stderr": "", "returncode": 0}{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter_sync { printf(\"PID %d called sync()\\n\", pid); }", "stdout": "Attaching 1 probe...\n\n\n", "stderr": "", "returncode": 0}{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:tcp_v4_connect { $sk = (struct sock *)arg0; $daddr = $sk->__sk_common.skc_daddr; $dport = $sk->__sk_common.skc_dport; printf(\"connect: %pI4:%d\\n\", $daddr, ntohs($dport)); } kretprobe:tcp_v4_connect { $ret = (int)arg0; if ($ret != 0) { printf(\"connect failed: %d\\n\", $ret); } } kprobe:tcp_set_state { $sk = (struct sock *)arg0; $daddr = $sk->__sk_common.skc_daddr; $dport = $sk->__sk_common.skc_dport; $state = (int)arg1; if ($state == TCP_ESTABLISHED) { printf(\"established: %pI4:%d\\n\", $daddr, ntohs($dport)); } else if ($state == TCP_CLOSE) { printf(\"close: %pI4:%d\\n\", $daddr, ntohs($dport)); } }", "stdout": "", "stderr": "stdin:1:164-169: ERROR: Unknown function: ntohs\nkprobe:tcp_v4_connect { $sk = (struct sock *)arg0; $daddr = $sk->__sk_common.skc_daddr; $dport = $sk->__sk_common.skc_dport; printf(\"connect: %pI4:%d\\n\", $daddr, ntohs($dport)); } kretprobe:tcp_v4_connect { $ret = (int)arg0; if ($ret != 0) { printf(\"connect failed: %d\\n\", $ret); } } kprobe:tcp_set_state { $sk = (struct sock *)arg0; $daddr = $sk->__sk_common.skc_daddr; $dport = $sk->__sk_common.skc_dport; $state = (int)arg1; if ($state == TCP_ESTABLISHED) { printf(\"established: %pI4:%d\\n\", $daddr, ntohs($dport)); } else if ($state == TCP_CLOSE) { printf(\"close: %pI4:%d\\n\", $daddr, ntohs($dport)); } }\n                                                                                                                                                                   ~~~~~\n", "returncode": 1}{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e #include <uapi/linux/ptrace.h>\n\nstruct data_t {\n    u64 ts;\n    u64 size;\n};\n\nBPF_HASH(start, u32);\nBPF_HISTOGRAM(dist);\n\nint trace_entry(struct pt_regs *ctx) {\n    u32 pid = bpf_get_current_pid_tgid();\n    struct data_t data = {};\n    data.ts = bpf_ktime_get_ns();\n    start.update(&pid, &data);\n    return 0;\n}\n\nint trace_return(struct pt_regs *ctx) {\n    u32 pid = bpf_get_current_pid_tgid();\n    struct data_t *datap = start.lookup(&pid);\n    if (datap == 0) {\n        return 0;\n    }\n    u64 delta = bpf_ktime_get_ns() - datap->ts;\n    dist.increment(bpf_log2l(delta / 1000));\n    start.delete(&pid);\n    return 0;\n}", "stdout": "", "stderr": "stdin:8:1-10: ERROR: syntax error, unexpected (, expecting {\nBPF_HASH(start, u32);\n~~~~~~~~~\n", "returncode": 1}{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:do_swap_page { @[comm] = count(); }", "stdout": "Attaching 1 probe...\n\n\n\n", "stderr": "", "returncode": 0}{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:tcp_v4_connect { printf(\"PID %d initiated a TCP connection.\n\", pid); }", "stdout": "", "stderr": "stdin:1:25-68: ERROR: unterminated string\nkprobe:tcp_v4_connect { printf(\"PID %d initiated a TCP connection.\n                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nstdin:2:1-11: ERROR: unterminated string\n\", pid); }\n~~~~~~~~~~\nstdin:2:1-11: ERROR: syntax error, unexpected end of file\n\", pid); }\n~~~~~~~~~~\n", "returncode": 1}{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:xfs_file_read_iter { @read[comm] = hist(arg0); }\nkprobe:xfs_file_write_iter { @write[comm] = hist(arg0); }\nkprobe:xfs_file_open { @open[comm] = count(); }\nkprobe:xfs_file_fsync { @fsync[comm] = hist(arg0); }", "stdout": "Attaching 4 probes...\n", "stderr": "stdin:1:1-26: WARNING: xfs_file_read_iter is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\nkprobe:xfs_file_read_iter { @read[comm] = hist(arg0); }\n~~~~~~~~~~~~~~~~~~~~~~~~~\nstdin:1-2: WARNING: xfs_file_write_iter is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\nstdin:2-3: WARNING: xfs_file_open is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\nstdin:3-4: WARNING: xfs_file_fsync is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\ncannot attach kprobe, probe entry may not exist\nERROR: Error attaching probe: 'kprobe:xfs_file_fsync'\n", "returncode": 255}