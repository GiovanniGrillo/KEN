Running test case: Monitors the rate of specific hardware interrupts and logs the interrupt sources
Output will be saved to: output.json
{'prog': 'kprobe:irq_handler_entry { @[kstack] = count(); }'}
The bpf program to run is: sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:irq_handler_entry { @[kstack] = count(); }
Attaching 1 probe...
kill process 11896
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:irq_handler_entry { @[kstack] = count(); }", "stdout": "Attaching 1 probe...\n", "stderr": "stdin:1:1-25: WARNING: irq_handler_entry is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\nkprobe:irq_handler_entry { @[kstack] = count(); }\n~~~~~~~~~~~~~~~~~~~~~~~~\ncannot attach kprobe, probe entry may not exist\nERROR: Error attaching probe: 'kprobe:irq_handler_entry'\n", "returncode": 255}
{'command': 'sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:irq_handler_entry { @[kstack] = count(); }', 'stdout': 'Attaching 1 probe...\n', 'stderr': 'stdin:1:1-25: WARNING: irq_handler_entry is not traceable (either non-existing, inlined, or marked as "notrace"); attaching to it will likely fail\nkprobe:irq_handler_entry { @[kstack] = count(); }\n~~~~~~~~~~~~~~~~~~~~~~~~\ncannot attach kprobe, probe entry may not exist\nERROR: Error attaching probe: \'kprobe:irq_handler_entry\'\n', 'returncode': 255}
Test case completed. Output saved to: output.json

Running test case: Traces process forking events and logs the parent and child process IDs and command names.
Output will be saved to: output.json
{'prog': 'tracepoint:syscalls:sys_exit_fork { printf("Parent PID %d, Child PID %d, Command %s\\n", pid, retval, comm); }'}
The bpf program to run is: sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_exit_fork { printf("Parent PID %d, Child PID %d, Command %s\n", pid, retval, comm); }
kill process 11903
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_exit_fork { printf(\"Parent PID %d, Child PID %d, Command %s\\n\", pid, retval, comm); }", "stdout": "", "stderr": "stdin:1:94-100: ERROR: The retval builtin can only be used with 'kretprobe' and 'uretprobe' and 'kfunc' probes (try to use args->ret instead)\ntracepoint:syscalls:sys_exit_fork { printf(\"Parent PID %d, Child PID %d, Command %s\\n\", pid, retval, comm); }\n                                                                                             ~~~~~~\n", "returncode": 1}
{'command': 'sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_exit_fork { printf("Parent PID %d, Child PID %d, Command %s\\n", pid, retval, comm); }', 'stdout': '', 'stderr': 'stdin:1:94-100: ERROR: The retval builtin can only be used with \'kretprobe\' and \'uretprobe\' and \'kfunc\' probes (try to use args->ret instead)\ntracepoint:syscalls:sys_exit_fork { printf("Parent PID %d, Child PID %d, Command %s\\n", pid, retval, comm); }\n                                                                                             ~~~~~~\n', 'returncode': 1}
Test case completed. Output saved to: output.json

Running test case: Monitors the rate of memory allocations in the kernel and print histogram of the allocation sizes.
Output will be saved to: output.json
{'prog': 'tracepoint:syscalls:sys_enter_malloc { @[args->size] = count(); }'}
The bpf program to run is: sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter_malloc { @[args->size] = count(); }
kill process 11910
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter_malloc { @[args->size] = count(); }", "stdout": "", "stderr": "stdin:1:1-37: ERROR: tracepoint not found: syscalls:sys_enter_malloc\ntracepoint:syscalls:sys_enter_malloc { @[args->size] = count(); }\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n", "returncode": 1}
{'command': 'sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter_malloc { @[args->size] = count(); }', 'stdout': '', 'stderr': 'stdin:1:1-37: ERROR: tracepoint not found: syscalls:sys_enter_malloc\ntracepoint:syscalls:sys_enter_malloc { @[args->size] = count(); }\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n', 'returncode': 1}
Test case completed. Output saved to: output.json

Running test case: Traces process resource limits (e.g., memory, file descriptors) and logs when limits are exceeded.
Output will be saved to: output.json
{'prog': 'tracepoint:syscalls:sys_enter_open { printf("%s %s\\n", comm, str(args->filename)); }'}
The bpf program to run is: sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter_open { printf("%s %s\n", comm, str(args->filename)); }
Attaching 1 probe...


kill process 11914
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter_open { printf(\"%s %s\\n\", comm, str(args->filename)); }", "stdout": "Attaching 1 probe...\n\n\n", "stderr": "", "returncode": 0}
{'command': 'sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter_open { printf("%s %s\\n", comm, str(args->filename)); }', 'stdout': 'Attaching 1 probe...\n\n\n', 'stderr': '', 'returncode': 0}
Test case completed. Output saved to: output.json

Running test case: Traces process signals and logs the signal names and process IDs affected.
Output will be saved to: output.json
{'prog': 'kprobe:do_nanosleep { printf("PID %d sleeping...", pid); }'}
The bpf program to run is: sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:do_nanosleep { printf("PID %d sleeping...", pid); }
Attaching 1 probe...
PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1101 sleeping...PID 1101 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 11939 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1101 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...

kill process 11933
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:do_nanosleep { printf(\"PID %d sleeping...\", pid); }", "stdout": "Attaching 1 probe...\nPID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1101 sleeping...PID 1101 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 11939 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1101 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...\n\n", "stderr": "", "returncode": 0}
{'command': 'sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:do_nanosleep { printf("PID %d sleeping...", pid); }', 'stdout': 'Attaching 1 probe...\nPID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1101 sleeping...PID 1101 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 11939 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1101 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 442 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1172 sleeping...PID 1624 sleeping...\n\n', 'stderr': '', 'returncode': 0}
Test case completed. Output saved to: output.json

Running test case: Monitors the rate of system call errors (e.g., ENOENT, EACCES) for specific processes
Output will be saved to: output.json
{'prog': 'tracepoint:syscalls:sys_enter { if (args->ret < 0) { printf("%s: %s\\n", comm, strerror(-args->ret)); } }'}
The bpf program to run is: sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter { if (args->ret < 0) { printf("%s: %s\n", comm, strerror(-args->ret)); } }
kill process 11943
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter { if (args->ret < 0) { printf(\"%s: %s\\n\", comm, strerror(-args->ret)); } }", "stdout": "", "stderr": "stdin:1:1-30: ERROR: tracepoint not found: syscalls:sys_enter\ntracepoint:syscalls:sys_enter { if (args->ret < 0) { printf(\"%s: %s\\n\", comm, strerror(-args->ret)); } }\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n", "returncode": 1}
{'command': 'sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter { if (args->ret < 0) { printf("%s: %s\\n", comm, strerror(-args->ret)); } }', 'stdout': '', 'stderr': 'stdin:1:1-30: ERROR: tracepoint not found: syscalls:sys_enter\ntracepoint:syscalls:sys_enter { if (args->ret < 0) { printf("%s: %s\\n", comm, strerror(-args->ret)); } }\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n', 'returncode': 1}
Test case completed. Output saved to: output.json

Running test case: Captures TCP SYN packets and logs the source and destination IP addresses and ports
Output will be saved to: output.json
{'prog': 'kprobe:tcp_v4_connect { printf("Source IP: %s, Source Port: %d, Destination IP: %s, Destination Port: %d\\n", inet_ntop(AF_INET, arg1), arg2, inet_ntop(AF_INET, arg3), arg4); }'}
The bpf program to run is: sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:tcp_v4_connect { printf("Source IP: %s, Source Port: %d, Destination IP: %s, Destination Port: %d\n", inet_ntop(AF_INET, arg1), arg2, inet_ntop(AF_INET, arg3), arg4); }
kill process 11947
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:tcp_v4_connect { printf(\"Source IP: %s, Source Port: %d, Destination IP: %s, Destination Port: %d\\n\", inet_ntop(AF_INET, arg1), arg2, inet_ntop(AF_INET, arg3), arg4); }", "stdout": "", "stderr": "stdin:1:110-119: ERROR: Unknown function: inet_ntop\nkprobe:tcp_v4_connect { printf(\"Source IP: %s, Source Port: %d, Destination IP: %s, Destination Port: %d\\n\", inet_ntop(AF_INET, arg1), arg2, inet_ntop(AF_INET, arg3), arg4); }\n                                                                                                             ~~~~~~~~~\n", "returncode": 1}
{'command': 'sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:tcp_v4_connect { printf("Source IP: %s, Source Port: %d, Destination IP: %s, Destination Port: %d\\n", inet_ntop(AF_INET, arg1), arg2, inet_ntop(AF_INET, arg3), arg4); }', 'stdout': '', 'stderr': 'stdin:1:110-119: ERROR: Unknown function: inet_ntop\nkprobe:tcp_v4_connect { printf("Source IP: %s, Source Port: %d, Destination IP: %s, Destination Port: %d\\n", inet_ntop(AF_INET, arg1), arg2, inet_ntop(AF_INET, arg3), arg4); }\n                                                                                                             ~~~~~~~~~\n', 'returncode': 1}
Test case completed. Output saved to: output.json

Running test case: monitors the rate of system calls made by specific user-space processes and identifies heavily used system calls
Output will be saved to: output.json
{'prog': "'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'"}
The bpf program to run is: sudo timeout --preserve-status -s 2 20 bpftrace -e 'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'
kill process 11954
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e 'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'", "stdout": "", "stderr": "stdin:1:1-2: ERROR: invalid character '''\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n~\nstdin:1:57-59: ERROR: invalid character '''\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n                                                        ~~\n", "returncode": 1}
{'command': "sudo timeout --preserve-status -s 2 20 bpftrace -e 'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'", 'stdout': '', 'stderr': "stdin:1:1-2: ERROR: invalid character '''\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n~\nstdin:1:57-59: ERROR: invalid character '''\n'tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }'\n                                                        ~~\n", 'returncode': 1}
Test case completed. Output saved to: output.json

Running test case: Monitors the rate of syscall by second globally
Output will be saved to: output.json
{'prog': 'tracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }'}
The bpf program to run is: sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }
Attaching 2 probes...
@: 1324
@: 3773
@: 1362
@: 622
@: 693
@: 809
@: 522
@: 617
@: 683
@: 708
@: 844
@: 586
@: 536
@: 586
@: 515
@: 851
@: 1194
@: 720
@: 912


@: 682
kill process 11960
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }", "stdout": "Attaching 2 probes...\n@: 1324\n@: 3773\n@: 1362\n@: 622\n@: 693\n@: 809\n@: 522\n@: 617\n@: 683\n@: 708\n@: 844\n@: 586\n@: 536\n@: 586\n@: 515\n@: 851\n@: 1194\n@: 720\n@: 912\n\n\n@: 682\n", "stderr": "", "returncode": 0}
{'command': 'sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:raw_syscalls:sys_enter { @ = count(); } interval:s:1 { print(@); clear(@); }', 'stdout': 'Attaching 2 probes...\n@: 1324\n@: 3773\n@: 1362\n@: 622\n@: 693\n@: 809\n@: 522\n@: 617\n@: 683\n@: 708\n@: 844\n@: 586\n@: 536\n@: 586\n@: 515\n@: 851\n@: 1194\n@: 720\n@: 912\n\n\n@: 682\n', 'stderr': '', 'returncode': 0}
Test case completed. Output saved to: output.json

Running test case: traces socket operations and logs the socket types and process IDs involved.
Output will be saved to: output.json
{'prog': 'tracepoint:syscalls:sys_enter_socket { printf("Socket Type: %s, PID: %d\\n", str(args->sock_type), pid); }'}
The bpf program to run is: sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter_socket { printf("Socket Type: %s, PID: %d\n", str(args->sock_type), pid); }
kill process 11970
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter_socket { printf(\"Socket Type: %s, PID: %d\\n\", str(args->sock_type), pid); }", "stdout": "", "stderr": "stdin:1:77-96: ERROR: Struct/union of type 'struct _tracepoint_syscalls_sys_enter_socket' does not contain a field named 'sock_type'\ntracepoint:syscalls:sys_enter_socket { printf(\"Socket Type: %s, PID: %d\\n\", str(args->sock_type), pid); }\n                                                                            ~~~~~~~~~~~~~~~~~~~\nstdin:1:77-97: ERROR: str() expects an integer or a pointer type as first argument (none provided)\ntracepoint:syscalls:sys_enter_socket { printf(\"Socket Type: %s, PID: %d\\n\", str(args->sock_type), pid); }\n                                                                            ~~~~~~~~~~~~~~~~~~~~\n", "returncode": 1}
{'command': 'sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter_socket { printf("Socket Type: %s, PID: %d\\n", str(args->sock_type), pid); }', 'stdout': '', 'stderr': 'stdin:1:77-96: ERROR: Struct/union of type \'struct _tracepoint_syscalls_sys_enter_socket\' does not contain a field named \'sock_type\'\ntracepoint:syscalls:sys_enter_socket { printf("Socket Type: %s, PID: %d\\n", str(args->sock_type), pid); }\n                                                                            ~~~~~~~~~~~~~~~~~~~\nstdin:1:77-97: ERROR: str() expects an integer or a pointer type as first argument (none provided)\ntracepoint:syscalls:sys_enter_socket { printf("Socket Type: %s, PID: %d\\n", str(args->sock_type), pid); }\n                                                                            ~~~~~~~~~~~~~~~~~~~~\n', 'returncode': 1}
Test case completed. Output saved to: output.json

Running test case: traces file read and write events and calculates the I/O size distribution for each file.
Output will be saved to: output.json
{'prog': 'tracepoint:syscalls:sys_enter_open { printf("%s %s\\n", comm, str(args->filename)); }'}
The bpf program to run is: sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter_open { printf("%s %s\n", comm, str(args->filename)); }
Attaching 1 probe...


kill process 11981
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter_open { printf(\"%s %s\\n\", comm, str(args->filename)); }", "stdout": "Attaching 1 probe...\n\n\n", "stderr": "", "returncode": 0}
{'command': 'sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter_open { printf("%s %s\\n", comm, str(args->filename)); }', 'stdout': 'Attaching 1 probe...\n\n\n', 'stderr': '', 'returncode': 0}
Test case completed. Output saved to: output.json

Running test case: traces file read and write events and summarizes the Read bytes by process.
Output will be saved to: output.json
{'prog': 'tracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }'}
The bpf program to run is: sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }
Attaching 1 probe...


@[dockerd]: 1
@[systemd-journal]: 8
@[systemd-timesyn]: 8
@[systemd-udevd]: 8
@[containerd]: 22
@[systemd]: 129
@[cpptools]: 154
@[sshd]: 2322
@[irqbalance]: 14336
@[node]: 15982
@[vmtoolsd]: 20238
kill process 11998
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }", "stdout": "Attaching 1 probe...\n\n\n@[dockerd]: 1\n@[systemd-journal]: 8\n@[systemd-timesyn]: 8\n@[systemd-udevd]: 8\n@[containerd]: 22\n@[systemd]: 129\n@[cpptools]: 154\n@[sshd]: 2322\n@[irqbalance]: 14336\n@[node]: 15982\n@[vmtoolsd]: 20238\n", "stderr": "", "returncode": 0}
{'command': 'sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_exit_read /args->ret/ { @[comm] = sum(args->ret); }', 'stdout': 'Attaching 1 probe...\n\n\n@[dockerd]: 1\n@[systemd-journal]: 8\n@[systemd-timesyn]: 8\n@[systemd-udevd]: 8\n@[containerd]: 22\n@[systemd]: 129\n@[cpptools]: 154\n@[sshd]: 2322\n@[irqbalance]: 14336\n@[node]: 15982\n@[vmtoolsd]: 20238\n', 'stderr': '', 'returncode': 0}
Test case completed. Output saved to: output.json

Running test case: tracks the creation and deletion of network namespaces.
Output will be saved to: output.json
{'prog': 'kprobe:net_namespace_create { printf("Network namespace created: %s\\n", str(args->name)); }\nkprobe:net_namespace_destroy { printf("Network namespace destroyed: %s\\n", str(args->name)); }'}
The bpf program to run is: sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:net_namespace_create { printf("Network namespace created: %s\n", str(args->name)); }
kprobe:net_namespace_destroy { printf("Network namespace destroyed: %s\n", str(args->name)); }
kill process 12013
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:net_namespace_create { printf(\"Network namespace created: %s\\n\", str(args->name)); }\nkprobe:net_namespace_destroy { printf(\"Network namespace destroyed: %s\\n\", str(args->name)); }", "stdout": "", "stderr": "stdin:1:73-81: ERROR: The args builtin can only be used with tracepoint/kfunc/uprobeprobes (kprobe used here)\nkprobe:net_namespace_create { printf(\"Network namespace created: %s\\n\", str(args->name)); }\n                                                                        ~~~~~~~~\nstdin:1:73-88: ERROR: str() expects an integer or a pointer type as first argument (none provided)\nkprobe:net_namespace_create { printf(\"Network namespace created: %s\\n\", str(args->name)); }\n                                                                        ~~~~~~~~~~~~~~~\nstdin:2:76-84: ERROR: The args builtin can only be used with tracepoint/kfunc/uprobeprobes (kprobe used here)\nkprobe:net_namespace_destroy { printf(\"Network namespace destroyed: %s\\n\", str(args->name)); }\n                                                                           ~~~~~~~~\nstdin:2:76-91: ERROR: str() expects an integer or a pointer type as first argument (none provided)\nkprobe:net_namespace_destroy { printf(\"Network namespace destroyed: %s\\n\", str(args->name)); }\n                                                                           ~~~~~~~~~~~~~~~\n", "returncode": 1}
{'command': 'sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:net_namespace_create { printf("Network namespace created: %s\\n", str(args->name)); }\nkprobe:net_namespace_destroy { printf("Network namespace destroyed: %s\\n", str(args->name)); }', 'stdout': '', 'stderr': 'stdin:1:73-81: ERROR: The args builtin can only be used with tracepoint/kfunc/uprobeprobes (kprobe used here)\nkprobe:net_namespace_create { printf("Network namespace created: %s\\n", str(args->name)); }\n                                                                        ~~~~~~~~\nstdin:1:73-88: ERROR: str() expects an integer or a pointer type as first argument (none provided)\nkprobe:net_namespace_create { printf("Network namespace created: %s\\n", str(args->name)); }\n                                                                        ~~~~~~~~~~~~~~~\nstdin:2:76-84: ERROR: The args builtin can only be used with tracepoint/kfunc/uprobeprobes (kprobe used here)\nkprobe:net_namespace_destroy { printf("Network namespace destroyed: %s\\n", str(args->name)); }\n                                                                           ~~~~~~~~\nstdin:2:76-91: ERROR: str() expects an integer or a pointer type as first argument (none provided)\nkprobe:net_namespace_destroy { printf("Network namespace destroyed: %s\\n", str(args->name)); }\n                                                                           ~~~~~~~~~~~~~~~\n', 'returncode': 1}
Test case completed. Output saved to: output.json

Running test case: Print files opened events by process
Output will be saved to: output.json
{'prog': 'tracepoint:syscalls:sys_enter_open { printf("%s %s\\n", comm, str(args->filename)); }'}
The bpf program to run is: sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter_open { printf("%s %s\n", comm, str(args->filename)); }
Attaching 1 probe...


kill process 12017
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter_open { printf(\"%s %s\\n\", comm, str(args->filename)); }", "stdout": "Attaching 1 probe...\n\n\n", "stderr": "", "returncode": 0}
{'command': 'sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter_open { printf("%s %s\\n", comm, str(args->filename)); }', 'stdout': 'Attaching 1 probe...\n\n\n', 'stderr': '', 'returncode': 0}
Test case completed. Output saved to: output.json

Running test case: Count LLC cache misses by process name
Output will be saved to: output.json
{'prog': 'hardware:cache-misses:1000000 { @[comm] = count(); }'}
The bpf program to run is: sudo timeout --preserve-status -s 2 20 bpftrace -e hardware:cache-misses:1000000 { @[comm] = count(); }
Attaching 1 probe...
kill process 12036
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e hardware:cache-misses:1000000 { @[comm] = count(); }", "stdout": "Attaching 1 probe...\n", "stderr": "perf_event_open failed: No such file or directory\nERROR: Error attaching probe: hardware:cache-misses:1000000\n", "returncode": 255}
{'command': 'sudo timeout --preserve-status -s 2 20 bpftrace -e hardware:cache-misses:1000000 { @[comm] = count(); }', 'stdout': 'Attaching 1 probe...\n', 'stderr': 'perf_event_open failed: No such file or directory\nERROR: Error attaching probe: hardware:cache-misses:1000000\n', 'returncode': 255}
Test case completed. Output saved to: output.json

Running test case: Count page faults events by process
Output will be saved to: output.json
{'prog': 'software:faults:1 { @[comm] = count(); }'}
The bpf program to run is: sudo timeout --preserve-status -s 2 20 bpftrace -e software:faults:1 { @[comm] = count(); }
Attaching 1 probe...


@[timeout]: 3
@[git]: 541
@[node]: 2939
kill process 12040
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e software:faults:1 { @[comm] = count(); }", "stdout": "Attaching 1 probe...\n\n\n@[timeout]: 3\n@[git]: 541\n@[node]: 2939\n", "stderr": "", "returncode": 0}
{'command': 'sudo timeout --preserve-status -s 2 20 bpftrace -e software:faults:1 { @[comm] = count(); }', 'stdout': 'Attaching 1 probe...\n\n\n@[timeout]: 3\n@[git]: 541\n@[node]: 2939\n', 'stderr': '', 'returncode': 0}
Test case completed. Output saved to: output.json

Running test case: Print entered bash commands system wide and the exit code
Output will be saved to: output.json
{'prog': 'tracepoint:syscalls:sys_enter_execve { printf("Command: %s, Exit Code: %d\\n", str(args->filename), retval); }'}
The bpf program to run is: sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter_execve { printf("Command: %s, Exit Code: %d\n", str(args->filename), retval); }
kill process 12050
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter_execve { printf(\"Command: %s, Exit Code: %d\\n\", str(args->filename), retval); }", "stdout": "", "stderr": "stdin:1:100-106: ERROR: The retval builtin can only be used with 'kretprobe' and 'uretprobe' and 'kfunc' probes (try to use args->ret instead)\ntracepoint:syscalls:sys_enter_execve { printf(\"Command: %s, Exit Code: %d\\n\", str(args->filename), retval); }\n                                                                                                   ~~~~~~\n", "returncode": 1}
{'command': 'sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter_execve { printf("Command: %s, Exit Code: %d\\n", str(args->filename), retval); }', 'stdout': '', 'stderr': 'stdin:1:100-106: ERROR: The retval builtin can only be used with \'kretprobe\' and \'uretprobe\' and \'kfunc\' probes (try to use args->ret instead)\ntracepoint:syscalls:sys_enter_execve { printf("Command: %s, Exit Code: %d\\n", str(args->filename), retval); }\n                                                                                                   ~~~~~~\n', 'returncode': 1}
Test case completed. Output saved to: output.json

Running test case: Trace directory entry cache (dcache) lookups by process
Output will be saved to: output.json
{'prog': 'tracepoint:syscalls:sys_enter_open { printf("%s %s\n", comm, str(args->filename)); }'}
The bpf program to run is: sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter_open { printf("%s %s
", comm, str(args->filename)); }
kill process 12061
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter_open { printf(\"%s %s\n\", comm, str(args->filename)); }", "stdout": "", "stderr": "stdin:1:38-52: ERROR: unterminated string\ntracepoint:syscalls:sys_enter_open { printf(\"%s %s\n                                     ~~~~~~~~~~~~~\nstdin:2:1-33: ERROR: unterminated string\n\", comm, str(args->filename)); }\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nstdin:2:1-33: ERROR: syntax error, unexpected end of file\n\", comm, str(args->filename)); }\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n", "returncode": 1}
{'command': 'sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter_open { printf("%s %s\n", comm, str(args->filename)); }', 'stdout': '', 'stderr': 'stdin:1:38-52: ERROR: unterminated string\ntracepoint:syscalls:sys_enter_open { printf("%s %s\n                                     ~~~~~~~~~~~~~\nstdin:2:1-33: ERROR: unterminated string\n", comm, str(args->filename)); }\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nstdin:2:1-33: ERROR: syntax error, unexpected end of file\n", comm, str(args->filename)); }\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n', 'returncode': 1}
Test case completed. Output saved to: output.json

Running test case: Trace md flush events with pid and process name
Output will be saved to: output.json
{'prog': 'tracepoint:md/md_flush { printf("PID %d Process Name %s\\n", pid, comm); }'}
The bpf program to run is: sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:md/md_flush { printf("PID %d Process Name %s\n", pid, comm); }
kill process 12068
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:md/md_flush { printf(\"PID %d Process Name %s\\n\", pid, comm); }", "stdout": "", "stderr": "stdin:1:1-23: ERROR: tracepoint probe type requires 2 arguments\ntracepoint:md/md_flush { printf(\"PID %d Process Name %s\\n\", pid, comm); }\n~~~~~~~~~~~~~~~~~~~~~~\n", "returncode": 1}
{'command': 'sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:md/md_flush { printf("PID %d Process Name %s\\n", pid, comm); }', 'stdout': '', 'stderr': 'stdin:1:1-23: ERROR: tracepoint probe type requires 2 arguments\ntracepoint:md/md_flush { printf("PID %d Process Name %s\\n", pid, comm); }\n~~~~~~~~~~~~~~~~~~~~~~\n', 'returncode': 1}
Test case completed. Output saved to: output.json

Running test case: Print CPU scheduler run queue latency as a histogram
Output will be saved to: output.json
{'prog': 'profile:hz:99 { @[comm] = hist(args->latency); }'}
The bpf program to run is: sudo timeout --preserve-status -s 2 20 bpftrace -e profile:hz:99 { @[comm] = hist(args->latency); }
kill process 12072
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e profile:hz:99 { @[comm] = hist(args->latency); }", "stdout": "", "stderr": "stdin:1:27-36: ERROR: The args builtin can only be used with tracepoint/kfunc/uprobeprobes (profile used here)\nprofile:hz:99 { @[comm] = hist(args->latency); }\n                          ~~~~~~~~~\n", "returncode": 1}
{'command': 'sudo timeout --preserve-status -s 2 20 bpftrace -e profile:hz:99 { @[comm] = hist(args->latency); }', 'stdout': '', 'stderr': 'stdin:1:27-36: ERROR: The args builtin can only be used with tracepoint/kfunc/uprobeprobes (profile used here)\nprofile:hz:99 { @[comm] = hist(args->latency); }\n                          ~~~~~~~~~\n', 'returncode': 1}
Test case completed. Output saved to: output.json

Running test case: Summarizes CPU scheduler run queue length as a histogram
Output will be saved to: output.json
{'prog': 'profile:sched:sched_switch { @ = hist(args->prev_pid); }'}
The bpf program to run is: sudo timeout --preserve-status -s 2 20 bpftrace -e profile:sched:sched_switch { @ = hist(args->prev_pid); }
kill process 12079
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e profile:sched:sched_switch { @ = hist(args->prev_pid); }", "stdout": "", "stderr": "stdin:1:1-27: ERROR: Coefficient part of scientific literal is not a valid number: sch: stoull\nprofile:sched:sched_switch { @ = hist(args->prev_pid); }\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n", "returncode": 1}
{'command': 'sudo timeout --preserve-status -s 2 20 bpftrace -e profile:sched:sched_switch { @ = hist(args->prev_pid); }', 'stdout': '', 'stderr': 'stdin:1:1-27: ERROR: Coefficient part of scientific literal is not a valid number: sch: stoull\nprofile:sched:sched_switch { @ = hist(args->prev_pid); }\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n', 'returncode': 1}
Test case completed. Output saved to: output.json

Running test case: List new thread creation with pid and thread identifies
Output will be saved to: output.json
{'prog': 'kprobe:do_fork { printf("New thread created: PID %d, TID %d\\n", pid, tid); }'}
The bpf program to run is: sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:do_fork { printf("New thread created: PID %d, TID %d\n", pid, tid); }
Attaching 1 probe...
kill process 12083
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:do_fork { printf(\"New thread created: PID %d, TID %d\\n\", pid, tid); }", "stdout": "Attaching 1 probe...\n", "stderr": "stdin:1:1-15: WARNING: do_fork is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\nkprobe:do_fork { printf(\"New thread created: PID %d, TID %d\\n\", pid, tid); }\n~~~~~~~~~~~~~~\ncannot attach kprobe, probe entry may not exist\nERROR: Error attaching probe: 'kprobe:do_fork'\n", "returncode": 255}
{'command': 'sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:do_fork { printf("New thread created: PID %d, TID %d\\n", pid, tid); }', 'stdout': 'Attaching 1 probe...\n', 'stderr': 'stdin:1:1-15: WARNING: do_fork is not traceable (either non-existing, inlined, or marked as "notrace"); attaching to it will likely fail\nkprobe:do_fork { printf("New thread created: PID %d, TID %d\\n", pid, tid); }\n~~~~~~~~~~~~~~\ncannot attach kprobe, probe entry may not exist\nERROR: Error attaching probe: \'kprobe:do_fork\'\n', 'returncode': 255}
Test case completed. Output saved to: output.json

Running test case: Display the exit_reason and its statistics of each vm exit in kvm
Output will be saved to: output.json
{'prog': 'kprobe:kvm_exit { printf("exit_reason: %d\\n", args->exit_reason); @exit_reason[args->exit_reason] = count(); }'}
The bpf program to run is: sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:kvm_exit { printf("exit_reason: %d\n", args->exit_reason); @exit_reason[args->exit_reason] = count(); }
kill process 12090
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:kvm_exit { printf(\"exit_reason: %d\\n\", args->exit_reason); @exit_reason[args->exit_reason] = count(); }", "stdout": "", "stderr": "stdin:1:47-51: ERROR: The args builtin can only be used with tracepoint/kfunc/uprobeprobes (kprobe used here)\nkprobe:kvm_exit { printf(\"exit_reason: %d\\n\", args->exit_reason); @exit_reason[args->exit_reason] = count(); }\n                                              ~~~~\nstdin:1:67-84: ERROR: The args builtin can only be used with tracepoint/kfunc/uprobeprobes (kprobe used here)\nkprobe:kvm_exit { printf(\"exit_reason: %d\\n\", args->exit_reason); @exit_reason[args->exit_reason] = count(); }\n                                                                  ~~~~~~~~~~~~~~~~~\n", "returncode": 1}
{'command': 'sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:kvm_exit { printf("exit_reason: %d\\n", args->exit_reason); @exit_reason[args->exit_reason] = count(); }', 'stdout': '', 'stderr': 'stdin:1:47-51: ERROR: The args builtin can only be used with tracepoint/kfunc/uprobeprobes (kprobe used here)\nkprobe:kvm_exit { printf("exit_reason: %d\\n", args->exit_reason); @exit_reason[args->exit_reason] = count(); }\n                                              ~~~~\nstdin:1:67-84: ERROR: The args builtin can only be used with tracepoint/kfunc/uprobeprobes (kprobe used here)\nkprobe:kvm_exit { printf("exit_reason: %d\\n", args->exit_reason); @exit_reason[args->exit_reason] = count(); }\n                                                                  ~~~~~~~~~~~~~~~~~\n', 'returncode': 1}
Test case completed. Output saved to: output.json

Running test case: Trace mount and umount syscalls system-wide and print with pid
Output will be saved to: output.json
{'prog': 'tracepoint:syscalls:sys_enter_mount { printf("PID %d called mount\\n", pid); }\ntracepoint:syscalls:sys_enter_umount { printf("PID %d called umount\\n", pid); }'}
The bpf program to run is: sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter_mount { printf("PID %d called mount\n", pid); }
tracepoint:syscalls:sys_enter_umount { printf("PID %d called umount\n", pid); }
Attaching 2 probes...


kill process 12094
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter_mount { printf(\"PID %d called mount\\n\", pid); }\ntracepoint:syscalls:sys_enter_umount { printf(\"PID %d called umount\\n\", pid); }", "stdout": "Attaching 2 probes...\n\n\n", "stderr": "", "returncode": 0}
{'command': 'sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter_mount { printf("PID %d called mount\\n", pid); }\ntracepoint:syscalls:sys_enter_umount { printf("PID %d called umount\\n", pid); }', 'stdout': 'Attaching 2 probes...\n\n\n', 'stderr': '', 'returncode': 0}
Test case completed. Output saved to: output.json

Running test case: Trace bpf jit compile events
Output will be saved to: output.json
{'prog': 'kprobe:bpf_jit_compile { printf("BPF JIT compile event\\n"); }'}
The bpf program to run is: sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:bpf_jit_compile { printf("BPF JIT compile event\n"); }
Attaching 1 probe...


kill process 12104
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:bpf_jit_compile { printf(\"BPF JIT compile event\\n\"); }", "stdout": "Attaching 1 probe...\n\n\n", "stderr": "", "returncode": 0}
{'command': 'sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:bpf_jit_compile { printf("BPF JIT compile event\\n"); }', 'stdout': 'Attaching 1 probe...\n\n\n', 'stderr': '', 'returncode': 0}
Test case completed. Output saved to: output.json

Running test case: Trace block device I/O with PID and latency
Output will be saved to: output.json
{'prog': 'tracepoint:block:block_rq_issue { printf("PID %d I/O latency %d\\n", pid, args->delta); }'}
The bpf program to run is: sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:block:block_rq_issue { printf("PID %d I/O latency %d\n", pid, args->delta); }
kill process 12112
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:block:block_rq_issue { printf(\"PID %d I/O latency %d\\n\", pid, args->delta); }", "stdout": "", "stderr": "stdin:1:74-85: ERROR: Struct/union of type 'struct _tracepoint_block_block_rq_issue' does not contain a field named 'delta'\ntracepoint:block:block_rq_issue { printf(\"PID %d I/O latency %d\\n\", pid, args->delta); }\n                                                                         ~~~~~~~~~~~\n", "returncode": 1}
{'command': 'sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:block:block_rq_issue { printf("PID %d I/O latency %d\\n", pid, args->delta); }', 'stdout': '', 'stderr': 'stdin:1:74-85: ERROR: Struct/union of type \'struct _tracepoint_block_block_rq_issue\' does not contain a field named \'delta\'\ntracepoint:block:block_rq_issue { printf("PID %d I/O latency %d\\n", pid, args->delta); }\n                                                                         ~~~~~~~~~~~\n', 'returncode': 1}
Test case completed. Output saved to: output.json

Running test case: Trace btrfs operations system-wide
Output will be saved to: output.json
{'prog': 'tracepoint:btrfs:btrfs_* { printf("%s\\n", probe); }'}
The bpf program to run is: sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:btrfs:btrfs_* { printf("%s\n", probe); }
Attaching 74 probes...


kill process 12123
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:btrfs:btrfs_* { printf(\"%s\\n\", probe); }", "stdout": "Attaching 74 probes...\n\n\n", "stderr": "", "returncode": 0}
{'command': 'sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:btrfs:btrfs_* { printf("%s\\n", probe); }', 'stdout': 'Attaching 74 probes...\n\n\n', 'stderr': '', 'returncode': 0}
Test case completed. Output saved to: output.json

Running test case: Trace security capability checks events
Output will be saved to: output.json
{'prog': 'tracepoint:security:security_capable { printf("Security capability check event\\n"); }'}
The bpf program to run is: sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:security:security_capable { printf("Security capability check event\n"); }
kill process 12133
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:security:security_capable { printf(\"Security capability check event\\n\"); }", "stdout": "", "stderr": "stdin:1:1-37: ERROR: tracepoint not found: security:security_capable\ntracepoint:security:security_capable { printf(\"Security capability check event\\n\"); }\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n", "returncode": 1}
{'command': 'sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:security:security_capable { printf("Security capability check event\\n"); }', 'stdout': '', 'stderr': 'stdin:1:1-37: ERROR: tracepoint not found: security:security_capable\ntracepoint:security:security_capable { printf("Security capability check event\\n"); }\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n', 'returncode': 1}
Test case completed. Output saved to: output.json

Running test case: Trace compact zone events with PID and latency
Output will be saved to: output.json
{'prog': 'tracepoint:compact_zone:compact_zone_start { printf("PID %d latency %d\\n", pid, args->latency); }'}
The bpf program to run is: sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:compact_zone:compact_zone_start { printf("PID %d latency %d\n", pid, args->latency); }
kill process 12137
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:compact_zone:compact_zone_start { printf(\"PID %d latency %d\\n\", pid, args->latency); }", "stdout": "", "stderr": "stdin:1:1-43: ERROR: tracepoint not found: compact_zone:compact_zone_start\ntracepoint:compact_zone:compact_zone_start { printf(\"PID %d latency %d\\n\", pid, args->latency); }\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n", "returncode": 1}
{'command': 'sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:compact_zone:compact_zone_start { printf("PID %d latency %d\\n", pid, args->latency); }', 'stdout': '', 'stderr': 'stdin:1:1-43: ERROR: tracepoint not found: compact_zone:compact_zone_start\ntracepoint:compact_zone:compact_zone_start { printf("PID %d latency %d\\n", pid, args->latency); }\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n', 'returncode': 1}
Test case completed. Output saved to: output.json

Running test case: Trace and report long atomic critical sections in the kernel
Output will be saved to: output.json
{'prog': 'kprobe:do_nanosleep { printf("PID %d sleeping...\\n", pid); }'}
The bpf program to run is: sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:do_nanosleep { printf("PID %d sleeping...\n", pid); }
Attaching 1 probe...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1624 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 442 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1624 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 442 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1624 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 442 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1101 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1624 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 442 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1624 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 442 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1624 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 442 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1624 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 442 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1624 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 442 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1624 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 442 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1624 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 442 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1624 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 442 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1624 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 442 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1624 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 442 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1101 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1624 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 442 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1624 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 442 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1624 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 442 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1624 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 442 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1624 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 442 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1624 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 442 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1624 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 442 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...
PID 1172 sleeping...


kill process 12144
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:do_nanosleep { printf(\"PID %d sleeping...\\n\", pid); }", "stdout": "Attaching 1 probe...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1624 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 442 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1624 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 442 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1624 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 442 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1101 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1624 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 442 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1624 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 442 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1624 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 442 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1624 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 442 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1624 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 442 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1624 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 442 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1624 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 442 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1624 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 442 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1624 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 442 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1624 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 442 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1101 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1624 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 442 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1624 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 442 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1624 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 442 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1624 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 442 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1624 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 442 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1624 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 442 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1624 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 442 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\n\n\n", "stderr": "", "returncode": 0}
{'command': 'sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:do_nanosleep { printf("PID %d sleeping...\\n", pid); }', 'stdout': 'Attaching 1 probe...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1624 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 442 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1624 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 442 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1624 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 442 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1101 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1624 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 442 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1624 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 442 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1624 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 442 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1624 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 442 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1624 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 442 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1624 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 442 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1624 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 442 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1624 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 442 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1624 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 442 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1624 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 442 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1101 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1624 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 442 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1624 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 442 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1624 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 442 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1624 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 442 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1624 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 442 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1624 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 442 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1624 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 442 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\nPID 1172 sleeping...\n\n\n', 'stderr': '', 'returncode': 0}
Test case completed. Output saved to: output.json

Running test case: Trace signals issued by the kill() syscall system-wide
Output will be saved to: output.json
{'prog': 'tracepoint:syscalls:sys_enter_kill { printf("Signal %d issued by PID %d\\n", args->sig, pid); }'}
The bpf program to run is: sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter_kill { printf("Signal %d issued by PID %d\n", args->sig, pid); }
Attaching 1 probe...
Signal 0 issued by PID 1624
Signal 0 issued by PID 1624
Signal 0 issued by PID 1624
Signal 0 issued by PID 1708
Signal 0 issued by PID 1624
Signal 0 issued by PID 1961
Signal 0 issued by PID 1624
Signal 0 issued by PID 1624
Signal 0 issued by PID 1624
Signal 0 issued by PID 1624
Signal 0 issued by PID 1624
Signal 0 issued by PID 1635
Signal 0 issued by PID 1708
Signal 0 issued by PID 1624
Signal 0 issued by PID 1648
Signal 0 issued by PID 1961
Signal 0 issued by PID 1624
Signal 0 issued by PID 1624
Signal 0 issued by PID 1624
Signal 0 issued by PID 1624
Signal 0 issued by PID 1624
Signal 0 issued by PID 1708
Signal 0 issued by PID 1624
Signal 0 issued by PID 1961
Signal 0 issued by PID 1624
Signal 0 issued by PID 1624
Signal 0 issued by PID 1624
Signal 0 issued by PID 1635
Signal 0 issued by PID 1624
Signal 0 issued by PID 1648
Signal 0 issued by PID 1624
Signal 0 issued by PID 1708
Signal 0 issued by PID 1624
Signal 0 issued by PID 1961
Signal 0 issued by PID 1624
Signal 0 issued by PID 1624
Signal 0 issued by PID 1624
Signal 0 issued by PID 1624
Signal 0 issued by PID 1624
Signal 0 issued by PID 1708
Signal 0 issued by PID 1624
Signal 0 issued by PID 1961
Signal 0 issued by PID 1624
Signal 0 issued by PID 1635
Signal 0 issued by PID 1648
Signal 0 issued by PID 1624
Signal 0 issued by PID 1624
Signal 0 issued by PID 1624
Signal 0 issued by PID 1624
Signal 0 issued by PID 1708
Signal 0 issued by PID 1624
Signal 0 issued by PID 1961
Signal 0 issued by PID 1624
Signal 0 issued by PID 1624
Signal 0 issued by PID 1624
Signal 0 issued by PID 1624
Signal 0 issued by PID 1624
Signal 0 issued by PID 1635
Signal 0 issued by PID 1708


kill process 12151
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter_kill { printf(\"Signal %d issued by PID %d\\n\", args->sig, pid); }", "stdout": "Attaching 1 probe...\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1708\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1961\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1635\nSignal 0 issued by PID 1708\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1648\nSignal 0 issued by PID 1961\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1708\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1961\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1635\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1648\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1708\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1961\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1708\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1961\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1635\nSignal 0 issued by PID 1648\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1708\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1961\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1635\nSignal 0 issued by PID 1708\n\n\n", "stderr": "", "returncode": 0}
{'command': 'sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter_kill { printf("Signal %d issued by PID %d\\n", args->sig, pid); }', 'stdout': 'Attaching 1 probe...\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1708\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1961\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1635\nSignal 0 issued by PID 1708\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1648\nSignal 0 issued by PID 1961\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1708\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1961\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1635\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1648\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1708\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1961\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1708\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1961\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1635\nSignal 0 issued by PID 1648\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1708\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1961\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1624\nSignal 0 issued by PID 1635\nSignal 0 issued by PID 1708\n\n\n', 'stderr': '', 'returncode': 0}
Test case completed. Output saved to: output.json

Running test case: Traces kernel mutex lock events and display locks statistics.
Output will be saved to: output.json
{'prog': 'kprobe:mutex_lock { @locks[probefunc] = count(); }'}
The bpf program to run is: sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:mutex_lock { @locks[probefunc] = count(); }
kill process 12162
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:mutex_lock { @locks[probefunc] = count(); }", "stdout": "", "stderr": "stdin:1:21-37: ERROR: Unknown identifier: 'probefunc'\nkprobe:mutex_lock { @locks[probefunc] = count(); }\n                    ~~~~~~~~~~~~~~~~\n", "returncode": 1}
{'command': 'sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:mutex_lock { @locks[probefunc] = count(); }', 'stdout': '', 'stderr': "stdin:1:21-37: ERROR: Unknown identifier: 'probefunc'\nkprobe:mutex_lock { @locks[probefunc] = count(); }\n                    ~~~~~~~~~~~~~~~~\n", 'returncode': 1}
Test case completed. Output saved to: output.json

Running test case: Trace System V shared memory syscalls and display the size of the shared memory segment
Output will be saved to: output.json
{'prog': 'tracepoint:syscalls:sys_enter_shmget { printf("Size: %d\\n", args->size); }'}
The bpf program to run is: sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter_shmget { printf("Size: %d\n", args->size); }
Attaching 1 probe...


kill process 12173
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter_shmget { printf(\"Size: %d\\n\", args->size); }", "stdout": "Attaching 1 probe...\n\n\n", "stderr": "", "returncode": 0}
{'command': 'sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:syscalls:sys_enter_shmget { printf("Size: %d\\n", args->size); }', 'stdout': 'Attaching 1 probe...\n\n\n', 'stderr': '', 'returncode': 0}
Test case completed. Output saved to: output.json

Running test case: Summarizes Kernel SLAB/SLUB memory cache allocation rate top
Output will be saved to: output.json
{'prog': "'tracepoint:slab:slab_alloc { @[kmem_cache_name] = count(); }'"}
The bpf program to run is: sudo timeout --preserve-status -s 2 20 bpftrace -e 'tracepoint:slab:slab_alloc { @[kmem_cache_name] = count(); }'
kill process 12187
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e 'tracepoint:slab:slab_alloc { @[kmem_cache_name] = count(); }'", "stdout": "", "stderr": "stdin:1:1-2: ERROR: invalid character '''\n'tracepoint:slab:slab_alloc { @[kmem_cache_name] = count(); }'\n~\nstdin:1:61-63: ERROR: invalid character '''\n'tracepoint:slab:slab_alloc { @[kmem_cache_name] = count(); }'\n                                                            ~~\n", "returncode": 1}
{'command': "sudo timeout --preserve-status -s 2 20 bpftrace -e 'tracepoint:slab:slab_alloc { @[kmem_cache_name] = count(); }'", 'stdout': '', 'stderr': "stdin:1:1-2: ERROR: invalid character '''\n'tracepoint:slab:slab_alloc { @[kmem_cache_name] = count(); }'\n~\nstdin:1:61-63: ERROR: invalid character '''\n'tracepoint:slab:slab_alloc { @[kmem_cache_name] = count(); }'\n                                                            ~~\n", 'returncode': 1}
Test case completed. Output saved to: output.json

Running test case: Trace sync() syscall and print the caller pid
Output will be saved to: output.json
{'prog': 'kprobe:sys_sync { printf("Caller PID: %d\\n", pid); }'}
The bpf program to run is: sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:sys_sync { printf("Caller PID: %d\n", pid); }
Attaching 1 probe...
kill process 12191
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:sys_sync { printf(\"Caller PID: %d\\n\", pid); }", "stdout": "Attaching 1 probe...\n", "stderr": "stdin:1:1-16: WARNING: sys_sync is not traceable (either non-existing, inlined, or marked as \"notrace\"); attaching to it will likely fail\nkprobe:sys_sync { printf(\"Caller PID: %d\\n\", pid); }\n~~~~~~~~~~~~~~~\ncannot attach kprobe, probe entry may not exist\nERROR: Error attaching probe: 'kprobe:sys_sync'\n", "returncode": 255}
{'command': 'sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:sys_sync { printf("Caller PID: %d\\n", pid); }', 'stdout': 'Attaching 1 probe...\n', 'stderr': 'stdin:1:1-16: WARNING: sys_sync is not traceable (either non-existing, inlined, or marked as "notrace"); attaching to it will likely fail\nkprobe:sys_sync { printf("Caller PID: %d\\n", pid); }\n~~~~~~~~~~~~~~~\ncannot attach kprobe, probe entry may not exist\nERROR: Error attaching probe: \'kprobe:sys_sync\'\n', 'returncode': 255}
Test case completed. Output saved to: output.json

Running test case: Trace TCP round trip time (RTT) and print the sender and receiver IP addresses and ports
Output will be saved to: output.json
{'prog': 'tracepoint:tcp:tcp_rcv_established { printf("Sender: %s:%d, Receiver: %s:%d, RTT: %d\\n", inet_ntop(AF_INET, &args->saddr, 4), ntohs(args->sport), inet_ntop(AF_INET, &args->daddr, 4), ntohs(args->dport), args->rtt); }'}
The bpf program to run is: sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:tcp:tcp_rcv_established { printf("Sender: %s:%d, Receiver: %s:%d, RTT: %d\n", inet_ntop(AF_INET, &args->saddr, 4), ntohs(args->sport), inet_ntop(AF_INET, &args->daddr, 4), ntohs(args->dport), args->rtt); }
kill process 12200
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:tcp:tcp_rcv_established { printf(\"Sender: %s:%d, Receiver: %s:%d, RTT: %d\\n\", inet_ntop(AF_INET, &args->saddr, 4), ntohs(args->sport), inet_ntop(AF_INET, &args->daddr, 4), ntohs(args->dport), args->rtt); }", "stdout": "", "stderr": "stdin:1:109-110: ERROR: syntax error, unexpected &\ntracepoint:tcp:tcp_rcv_established { printf(\"Sender: %s:%d, Receiver: %s:%d, RTT: %d\\n\", inet_ntop(AF_INET, &args->saddr, 4), ntohs(args->sport), inet_ntop(AF_INET, &args->daddr, 4), ntohs(args->dport), args->rtt); }\n                                                                                                            ~\n", "returncode": 1}
{'command': 'sudo timeout --preserve-status -s 2 20 bpftrace -e tracepoint:tcp:tcp_rcv_established { printf("Sender: %s:%d, Receiver: %s:%d, RTT: %d\\n", inet_ntop(AF_INET, &args->saddr, 4), ntohs(args->sport), inet_ntop(AF_INET, &args->daddr, 4), ntohs(args->dport), args->rtt); }', 'stdout': '', 'stderr': 'stdin:1:109-110: ERROR: syntax error, unexpected &\ntracepoint:tcp:tcp_rcv_established { printf("Sender: %s:%d, Receiver: %s:%d, RTT: %d\\n", inet_ntop(AF_INET, &args->saddr, 4), ntohs(args->sport), inet_ntop(AF_INET, &args->daddr, 4), ntohs(args->dport), args->rtt); }\n                                                                                                            ~\n', 'returncode': 1}
Test case completed. Output saved to: output.json

Running test case: Summarize ZFS operation latency distribution as a histogram
Output will be saved to: output.json
{'prog': "'tracepoint:syscalls:sys_exit_open { @[comm] = hist(args->ret); }'"}
The bpf program to run is: sudo timeout --preserve-status -s 2 20 bpftrace -e 'tracepoint:syscalls:sys_exit_open { @[comm] = hist(args->ret); }'
kill process 12204
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e 'tracepoint:syscalls:sys_exit_open { @[comm] = hist(args->ret); }'", "stdout": "", "stderr": "stdin:1:1-2: ERROR: invalid character '''\n'tracepoint:syscalls:sys_exit_open { @[comm] = hist(args->ret); }'\n~\nstdin:1:65-67: ERROR: invalid character '''\n'tracepoint:syscalls:sys_exit_open { @[comm] = hist(args->ret); }'\n                                                                ~~\n", "returncode": 1}
{'command': "sudo timeout --preserve-status -s 2 20 bpftrace -e 'tracepoint:syscalls:sys_exit_open { @[comm] = hist(args->ret); }'", 'stdout': '', 'stderr': "stdin:1:1-2: ERROR: invalid character '''\n'tracepoint:syscalls:sys_exit_open { @[comm] = hist(args->ret); }'\n~\nstdin:1:65-67: ERROR: invalid character '''\n'tracepoint:syscalls:sys_exit_open { @[comm] = hist(args->ret); }'\n                                                                ~~\n", 'returncode': 1}
Test case completed. Output saved to: output.json

Running test case: Counts swapins by process, to show which process is affected by swapping
Output will be saved to: output.json
{'prog': 'kprobe:handle_mm_fault { @[comm] = count(); }'}
The bpf program to run is: sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:handle_mm_fault { @[comm] = count(); }
Attaching 1 probe...


@[timeout]: 3
@[node]: 763
kill process 12208
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:handle_mm_fault { @[comm] = count(); }", "stdout": "Attaching 1 probe...\n\n\n@[timeout]: 3\n@[node]: 763\n", "stderr": "", "returncode": 0}
{'command': 'sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:handle_mm_fault { @[comm] = count(); }', 'stdout': 'Attaching 1 probe...\n\n\n@[timeout]: 3\n@[node]: 763\n', 'stderr': '', 'returncode': 0}
Test case completed. Output saved to: output.json

Running test case: traces the kernel function performing active TCP connections(eg, via a connect() syscall; accept() are passive connections).
Output will be saved to: output.json
{'prog': 'kprobe:tcp_v4_connect { printf("Active TCP connection: %s:%d -> %s:%d\\n", ksym(retval), arg1, ksym(arg2), arg3); }'}
The bpf program to run is: sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:tcp_v4_connect { printf("Active TCP connection: %s:%d -> %s:%d\n", ksym(retval), arg1, ksym(arg2), arg3); }
kill process 12215
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:tcp_v4_connect { printf(\"Active TCP connection: %s:%d -> %s:%d\\n\", ksym(retval), arg1, ksym(arg2), arg3); }", "stdout": "", "stderr": "stdin:1:75-86: ERROR: The retval builtin can only be used with 'kretprobe' and 'uretprobe' and 'kfunc' probes\nkprobe:tcp_v4_connect { printf(\"Active TCP connection: %s:%d -> %s:%d\\n\", ksym(retval), arg1, ksym(arg2), arg3); }\n                                                                          ~~~~~~~~~~~\nstdin:1:75-87: ERROR: ksym() expects an integer or pointer argument\nkprobe:tcp_v4_connect { printf(\"Active TCP connection: %s:%d -> %s:%d\\n\", ksym(retval), arg1, ksym(arg2), arg3); }\n                                                                          ~~~~~~~~~~~~\n", "returncode": 1}
{'command': 'sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:tcp_v4_connect { printf("Active TCP connection: %s:%d -> %s:%d\\n", ksym(retval), arg1, ksym(arg2), arg3); }', 'stdout': '', 'stderr': 'stdin:1:75-86: ERROR: The retval builtin can only be used with \'kretprobe\' and \'uretprobe\' and \'kfunc\' probes\nkprobe:tcp_v4_connect { printf("Active TCP connection: %s:%d -> %s:%d\\n", ksym(retval), arg1, ksym(arg2), arg3); }\n                                                                          ~~~~~~~~~~~\nstdin:1:75-87: ERROR: ksym() expects an integer or pointer argument\nkprobe:tcp_v4_connect { printf("Active TCP connection: %s:%d -> %s:%d\\n", ksym(retval), arg1, ksym(arg2), arg3); }\n                                                                          ~~~~~~~~~~~~\n', 'returncode': 1}
Test case completed. Output saved to: output.json

Running test case: traces XFS reads, writes, opens, and fsyncs, and summarizes their latency as a power-of-2 histogram.
Output will be saved to: output.json
{'prog': 'kprobe:vfs_read,kprobe:vfs_write,kprobe:vfs_open,kprobe:vfs_fsync { @latency = lhist(args->duration); }'}
The bpf program to run is: sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:vfs_read,kprobe:vfs_write,kprobe:vfs_open,kprobe:vfs_fsync { @latency = lhist(args->duration); }
kill process 12219
{"command": "sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:vfs_read,kprobe:vfs_write,kprobe:vfs_open,kprobe:vfs_fsync { @latency = lhist(args->duration); }", "stdout": "", "stderr": "stdin:1:80-90: ERROR: The args builtin can only be used with tracepoint/kfunc/uprobeprobes (kprobe used here)\nkprobe:vfs_read,kprobe:vfs_write,kprobe:vfs_open,kprobe:vfs_fsync { @latency = lhist(args->duration); }\n                                                                               ~~~~~~~~~~\nstdin:1:80-101: ERROR: lhist() requires 4 arguments (1 provided)\nkprobe:vfs_read,kprobe:vfs_write,kprobe:vfs_open,kprobe:vfs_fsync { @latency = lhist(args->duration); }\n                                                                               ~~~~~~~~~~~~~~~~~~~~~\n", "returncode": 1}
{'command': 'sudo timeout --preserve-status -s 2 20 bpftrace -e kprobe:vfs_read,kprobe:vfs_write,kprobe:vfs_open,kprobe:vfs_fsync { @latency = lhist(args->duration); }', 'stdout': '', 'stderr': 'stdin:1:80-90: ERROR: The args builtin can only be used with tracepoint/kfunc/uprobeprobes (kprobe used here)\nkprobe:vfs_read,kprobe:vfs_write,kprobe:vfs_open,kprobe:vfs_fsync { @latency = lhist(args->duration); }\n                                                                               ~~~~~~~~~~\nstdin:1:80-101: ERROR: lhist() requires 4 arguments (1 provided)\nkprobe:vfs_read,kprobe:vfs_write,kprobe:vfs_open,kprobe:vfs_fsync { @latency = lhist(args->duration); }\n                                                                               ~~~~~~~~~~~~~~~~~~~~~\n', 'returncode': 1}
Test case completed. Output saved to: output.json

